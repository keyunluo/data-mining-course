A Single-Pass Algorithm for Efficiently Recovering Sparse
Cluster Centers of High-dimensional Data

Jinfeng Yi
IBM Thomas J. Watson Research Center, Yorktown Heights, NY 10598, USA

JINFENGY @ US . IBM . COM

Lijun Zhang
ZHANGLJ @ LAMDA . NJU . EDU . CN
National Key Laboratory for Novel Software Technology, Nanjing University, Nanjing 210023, China
Jun Wang
IBM Thomas J. Watson Research Center, Yorktown Heights, NY 10598, USA

WANGJUN @ US . IBM . COM

Rong Jin
RONGJIN @ CSE . MSU . EDU
Anil K. Jain
JAIN @ CSE . MSU . EDU
Department of Computer Science and Engineering, Michigan State University, East Lansing, MI 48824 USA

Abstract
Learning a statistical model for high-dimensional
data is an important topic in machine learning.
Although this problem has been well studied in
the supervised setting, little is known about its
unsupervised counterpart. In this work, we focus
on the problem of clustering high-dimensional
data with sparse centers. In particular, we address the following open question in unsupervised learning: “is it possible to reliably cluster high-dimensional data when the number of
samples is smaller than the data dimensionality?” We develop an efficient clustering algorithm that is able to estimate sparse cluster centers
with a single pass over the data. Our theoretical analysis shows that the proposed algorithm
is able to accurately recover cluster centers with
only O(s log d) number of samples (data points),
provided all the cluster centers are s-sparse vectors in a d dimensional space. Experimental results verify both the effectiveness and efficiency
of the proposed clustering algorithm compared to
the state-of-the-art algorithms on several benchmark datasets.

Proceedings of the 31 st International Conference on Machine
Learning, Beijing, China, 2014. JMLR: W&CP volume 32. Copyright 2014 by the author(s).

1. Introduction
Data clustering, also known as unsupervised learning, is
an important task in machine learning. Since clustering is
closely related to density estimation, analyzing the number
of samples required for accurately recovering the underlying distributions, referred to the problem of sample complexity, is an important but challenging open problem (Srebro, 2007).
Although numerous algorithms have been developed for
data clustering, only a few of them address the challenge
of clustering high-dimensional data. It is well known that
the number of samples needed for accurate density estimation is at least exponential in the dimensionality (Tsybakov,
2008). Even in the case when data points are sampled
from a finite mixture of Gaussian distributions, the sample
complexity is still polynomial in dimensionality (Dasgupta, 1999; Arora & Kannan, 2001; Vempala & Wang, 2004;
Kannan et al., 2005; Srebro et al., 2006; Chaudhuri et al.,
2009). Given these theoretical results, we aim to examine
the following question in this study:
Is it possible to achieve accurate clustering results when
the data dimensionality is larger than the number of samples to be clustered?
In (Azizyan et al., 2013), the authors studied a special case
of this problem where data points were sampled from a
mixture of two isotropic Gaussians. The authors showed
that when the cluster centers are d dimensional s-sparse
vectors (i.e. there are no more than s non-zero entries), the
sample complexity can be reduced to O(s2 log d). In this
work, we examine this question in a more general setting

A Single-Pass Algorithm for Efficiently Recovering Sparse Cluster Centers of High-dimensional Data

where there are K clusters, K > 2. We show that when
data points are sampled from a mixture of K ≥ 2 spherical
Gaussians with s-sparse centers, only O(s log d) samples
are needed to reliably estimate the cluster centers. Our results indicate that it is indeed possible to reliably cluster
high-dimensional data even when the number of samples is
smaller than the dimensionality as long as the cluster centers are sparse.
To support our theoretical claim, we present an efficient clustering algorithm that only needs to go through all the
data points once to obtain an accurate estimation of cluster
centers. This is in contrast to many clustering algorithms,
such as k-means (Lloyd, 1982) and mixture models (Lindsey, 1996), which require going through the data set multiple times before the final centers can be determined. To
take advantage of sparse cluster centers, similar to sparse
learning, an `1 regularizer is introduced to obtain a better estimates of cluster centers. Our empirical study with
multiple high-dimensional data sets shows that the proposed algorithm, despite its simplicity, yields better results
compared to state-of-the-art clustering algorithms for highdimensional data.
We finally comment on the applications of the proposed
clustering technique. Although most clustering studies assume a sufficiently large number of data points, there are
many scenarios where the number of data points to be clustered is significantly smaller than the dimensionality, and
at the same time, the cluster centers are likely to be sparse.
One example is document clustering, where the dimensionality, i.e., the number of distinct terms, can be significantly
larger than the number of documents to be clustered (Ertöz
et al., 2003; Cormack & Lynam, 2005; Keerthi & DeCoste,
2005). At the same time, the term frequencies usually follow a power-law distribution, thus many terms in a given
cluster will only occur in one or two documents, giving
them very low weight in the cluster center (Sculley, 2010).
Another example is the clustering of genes based on their
sequence information (De Smet et al., 2002; Wang & Yang,
2005). In this application, each gene is represented by a
histogram vector of motifs, where the number of unique
motifs derived from the data can be sometimes larger than
the number of genes to be clustered and usually only a small number of motifs are biologically functional.
Besides the application to clustering high-dimensional data, the theoretical results presented in this work have profound impact on the practice of data clustering. It implies
that when all the cluster centers are s-sparse, it is possible
to only utilize O(s log d) data points for accurately estimating the cluster centers, suggesting a simple approach for
efficiently clustering billions of data points (i.e. estimate
the cluster centers using the randomly sampled O(s log d)
data points and then apply the estimated center to find the

appropriate cluster members for all the data points).
The remainder of the paper is organized as follows. Section 2 reviews the related work on high-dimensional clustering, Gaussian mixture model and theoretical studies of
the k-means algorithm. In Section 3, we introduce the
proposed framework for clustering high-dimensional data.
Theoretical analysis of the proposed algorithm is presented
in Section 4. We summarize the results of our empirical
studies in Section 5. Section 6 concludes with the future
work.

2. Related work
In this section, we review the existing work on clustering
high-dimensional data, as well as theoretical analysis for
Gaussian mixture models and k-means algorithm, the two
of the most popular clustering algorithms.
Clustering high-dimensional data One common approach to high-dimensional clustering is to first perform dimensionality reduction using algorithms such as Principal
Component Analysis (PCA) and kernel PCA (Mika et al.,
1998) as a pre-processing step, followed by a standard clustering method in the lower dimensional space. However,
Johnstone (2007) showed that when n < d, PCA fails because it is unable to distinguish signal from noise. Another limitation of these dimensionality reduction approaches
is that they assume the data points from different clusters
share the same subspace, which may not hold in many realworld applications. Subspace clustering (Agrawal et al.,
1998) addresses this limitation by trying to identify a lowdimensional subspace for each cluster that captures most
of the data variance in the cluster. The main shortcoming of subspace clustering is that it has to make a strong
assumption about data and is usually computationally expensive. Since the number of candidate subspaces is exponential in the dimensionality, a naive implementation of
subspace clustering algorithm will be computationally infeasible for high dimensional data. Several clustering algorithms have been proposed to improve the computational efficiency by exploring the property of sparsity. Pan &
Shen (2007) applied penalized mixture models to conduct
variable selection and clustering simultaneously. Witten &
Tibshirani (2010) developed a lasso-type penalty to perform feature selection in both k-means and hierarchical clustering. Sun et al. (2012) explored adaptive group lasso for
data clustering. However, none of these approaches provide
a theoretical guarantee on how the sparsity assumption can
be used to enhance clustering performance.
Gaussian mixture model Assuming that data points are
sampled from a mixture of Gaussian distributions, a Gaussian mixture model (GMM) can be used for clustering. The
most popular approach for learning a GMM is the EM algo-

A Single-Pass Algorithm for Efficiently Recovering Sparse Cluster Centers of High-dimensional Data

rithm (Figueiredo & Jain, 2002), which is not guaranteed to
find the global optimal. Over the past decade, many studies have examined the learnability of GMM. Among them,
pairwise methods (Dasgupta, 1999; Dasgupta & Schulman,
2000; Arora & Kannan, 2001) were first proposed to estimate the mixture distribution. However, these methods
require a larger distance between centers with increasing
dimensionality. To address this problem, spectral methods (Vempala & Wang, 2004; Achlioptas & McSherry, 2005;
Kannan et al., 2005; Brubaker & Vempala, 2008; Hsu &
Kakade, 2013) were introduced to estimate a mixture of
Gaussians with a mean separation that is independent of
data dimensionality. In (Belkin & Sinha, 2010; Kalai et al.,
2012), the authors use the method of moments to estimate
the Gaussian mixtures without requiring a large separation
between Gaussian components. However, a major limitation of these studies is their high sample complexity, i.e.,
the number of samples required for accurately recovering
the underlying mixture components is at least polynomial in dimensionality. Although this issue was addressed
in (Azizyan et al., 2013) under the assumption of sparse
cluster centers, the result is restricted to only two clusters,
significantly limiting its potential applications.
In addition to Gaussian mixture models, several studies
have addressed general mixture models. Dasgupta et al.
(2005) studied the question of learning mixtures of distributions with heavy-tails. In (Achlioptas & McSherry,
2005; Kannan et al., 2005), the authors showed that their results can also be applied to mixtures of log-concave distributions. Moreover, Chaudhuri (2007); Blum et al. (2009)
examined the sample complexity problem associated with
learning mixtures of binary product distributions.
k-means The proposed algorithm is related to some of the
theoretical studies on the k-means algorithm. Chaudhuri
et al. (2009) presented a modified k-means algorithm that is
able to accurately recover the cluster centers for two clusters when the number of samples is at least linear in the
dimensionality. Balcan et al. (2009a;b; 2013) showed it is
possible to efficiently find a solution that is close to the true
data partition if all c-approximations to the global optimal
solution of k-means only differ from the true partition on at
most  fraction of data points. It is however unclear when
the assumption will hold in real-world applications.

3. High-dimensional Clustering as Iteratively
Refined Estimation
The proposed clustering algorithm for high-dimensional
data needs only one pass over the data points to be clustered to estimate the cluster centers. Let D = {x1 , . . . , xn }
be the set of n data points to be clustered into K clusters, where each xi ∈ Rd is a vector of d dimensions. To

accurately estimate the cluster centers, we develop an iteratively refined estimation procedure: it divides D into a
sequence of disjoint subsets whose sizes increase exponentially over the sequence; the cluster centers computed from
the first subset will be used as the initial solution, and then
be refined by using the data points from the second subset,
and so on. Below, we first present our procedure for iteratively refined estimation of sparse cluster centers, and then
discuss its theoretical properties in the next section.
The proposed algorithm is an iterative procedure. Without
loss of generality, we assume n = T (2m − 1) for some
integers T and m. The proposed algorithm first randomly
divides the collection of n data points into m subsets, denoted by S 1 , . . . , S m , with |S i | = T 2i−1 . The initial guess
for cluster centers is denoted by b
c11 , . . . , b
c1K .
Given the initial cluster centers, we iteratively update them.
At each iteration t, we use the data points in S t , and identify, for each data point xti ∈ S t , its closest cluster b
kit by
t
t
>
t
b
ki = arg max[b
cj ] x i .
j∈[K]

One major difference between the proposed algorithm and
the k-means algorithm is that we use a different subset of
data points at each iteration, which is the key to ensure that
the final cluster center estimates will be close to the optimal
cluster centers. While (Chaudhuri et al., 2009) also used
different subsets of data at each iteration, they keep the size
of subsets unchanged for all the iterations. Consequently,
they are only able to deal with two clusters. In contrast, we
increase the size of subset by a constant factor p > 1, and
are able to address the K clusters problem, K ≥ 2.
Given computed cluster memberships, our next step is to
update the cluster centers. To take advantage of the sparsity of cluster centers, we introduce an `1 regularizer in estimating the new cluster centers. More specifically, given the
estimated cluster centers at iteration t, {b
ctk }K
k=1 , we denote
t
t
by Sbk the subset of data points in S that are assigned to b
ctk .
Instead of computing the new center as the average of data
points in Sbkt , we estimate the new cluster center b
ct+1
at itk
eration t+1 by solving the following optimization problem
min λt kck1 +

c∈Rd

1 X
kc − xti k2 ,
t
b
|S |

(1)

k xt ∈Sbt
i
k

where λt > 0 is the regularization parameter at iteration
t. The optimal solution of the k-th cluster center in (1) is
given by
λt
(2)
x̄tk − sign(x̄tk ) min(|x̄tk |, ),
2
P
where x̄tk = |Sb1t | xt ∈Sbt xti is the average of data points
in Skt .

k

i

k

Algorithm 1 shows the detailed steps of this approach. Note

A Single-Pass Algorithm for Efficiently Recovering Sparse Cluster Centers of High-dimensional Data

Algorithm 1 Clustering as Iteratively Refined Estimation
of Sparse Cluster Centers
Input: The number of clusters K, size T , and λ1
1: Randomly divide the collection of n data points into
S 1 , . . . , S m , with |S i | = T 2i−1 .
2: Compute the initial cluster centers b
c11 , . . . , b
c1K
3: for t = 1, . . . , m do
4:
//Find closest cluster for each data point in S t
5:
for i = 1, . . . , |S t | do
6:
Find the closet cluster b
kit for xti ∈ S t , i.e.,
b
kit = arg max[b
ctj ]> xti
j∈[K]

7:
8:
9:
10:
11:

end for
//Update cluster centers using data points in S t
for k = 1, . . . , K do
Set Sbkt = {xti ∈ S t : b
kit = k} includes all the
data points assigned to cluster b
ctk
Update the k-th cluster center
b
ct+1
= arg min λt kck1 +
k
c∈Rd

12:

end for

1 X
kc − xti k2
b
|Skt | t bt
xi ∈Sk

√

13:
λt+1 = λt / 2.
14: end for

Return The cluster centers b
cm+1
,...,b
cm+1
1
K

the GMM model to make our analysis comparable to previous work. We however emphasize that according to our
empirical study, the proposed algorithm also works well for
a wide range of domains even when the assumption of normality does not hold. We will investigate in the future the
theoretical property of the proposed algorithm for mixture
model beyond GMM.
We assume that the data points in D are generated by a mixture of K Gaussians with centers c1 , . . . , cK and mixing
weights µ1 , µ2 , · · · , µK . Similar to most studies on clustering, we assume that the number of clusters K is known
apriori. Following (Chaudhuri et al., 2009), we assume that
each cluster center is a unit vector, i.e., kci k = 1, ∀i ∈ [K].
We denoted by ρ the maximum overlap between different
clusters, i.e.,
ρ = max c>
i cj .
i6=j

It is easy to verify
p that the minimum distance between any
two centers is 2(1 − ρ). We note that the introduction of
ρ is closely related to the minimum separation requirement
used in the theoretical analysis of learning a GMM (Huggins, 2011). Similar to GMM, we assume that each data
point xi is generated by the addition of a selected cluster center cki and an independent Gaussian random noise
gi ∼ N (0, σ 2 I), i.e., xi = cki + gi .
For simplicity, we first assume that the initial centers are
not too far away from the true centers. More specifically,
the maximum distance between the initial centers and the
true centers, defined as
∆1 = max kb
c1i − ci k,

that in Algorithm 1, the regularization
coefficient λt is re√
duced by a constant factor 2 at each iteration. This is similar to other algorithms for sparse recovery (Wright et al.,
2009; Hale et al., 2008). We note that although the regularization parameter is reduced over iterations, the estimated
cluster centers will be `1 sparse (instead of `0 sparsity), as
shown in (Jin et al., 2013). This is because at the beginning
of the iterations, we would expect the estimated centers to
be far away from the true cluster centers, and therefore only
the entries with large magnitude are kept. With more iterations, we expect the estimated cluster centers to be close
to the true ones, and we thus need to reduce the threshold
(i.e., the regularization
parameter). Since in each iteration,
√
λt is reduced by 2 and the sample sizep
|S t | is increased
t
by a factor of 2, λ is proportional to 1/( |S t |), which is
consistent with the classical theory on Lasso (Tibshirani,
1996). Finally, we choose to use `1 regularizer instead of
`1 constraint because of its computational efficiency.

4. Main Theoretical Result
In this analysis, we discuss the sample complexity of recovering sparse centers in Algorithm 1. We will focus on

1≤i≤K

should be smaller than
p
1−ρ
− σ 5 ln (3K).
2
Note that in order to ensure a sufficiently large value
for ∆max , σ has to be reasonably small, indicating that
the proposed algorithm will not work appropriately with
large noise. Similar restriction on clustering can be found
in (Vempala & Wang, 2004; Brubaker & Vempala, 2008;
Azizyan et al., 2013).
∆max :=

For clustering with sparse centers, we denote by ∆∗ the
solution to the following nonlinear equation


√
∆
(1 − 2∆∗ − ρ)2
√∗ = c1 exp −
(η
+
σ
ln n), (3)
0
8(1 + ∆∗ )2 σ 2
6 2s
where c1 is some universal constant. The definitions of
∆max and ∆∗ arise from our theoretical analysis; see the
detailed steps in the supplementary material. Following the
analysis of compressive sensing (Donoho, 2006), we define the incoherence measure η0 for all the cluster centers
{ck }K
k=1 as
η0 = max kck k∞ ,
1≤i≤K

A Single-Pass Algorithm for Efficiently Recovering Sparse Cluster Centers of High-dimensional Data

where kck k∞ measures the largest element in ck . Finally,
we define
µ0 = min µi ,
1≤i≤K

as the smallest mixing weight of K Gaussian mixtures.
Now, the performance of our algorithm can be characterized by the following theorem.
Theorem 1. Let  ≤ 1/(6m) be a parameter that controls
the success probability. Assume
∆∗ ≤ ∆1 ≤ ∆max ,
1

(4)

1

∆
∆
√ ≤ λ1 ≤ c √ ,
2 2s
2 2s
18 2K 3c2 η0
,
T ≥ max
ln
,
µ0

λ1

(5)


6c3 σ
λ1

!
2
(ln n + ln d) (6)

where c, c2 and c3 are some universal constants that are
defined in the supplementary material. Then, with a probability at least 1 − 6m, we have


c∆1
m+1
m+1
∆
= max kb
ci
− ci k ≤ max ∆∗ , √
.
1≤i≤K
2m
Based on Theorem 1, we have the following corollary regarding the convergence rate of the proposed algorithm.
Corollary 1. The convergence rate for ∆, the maximum
difference betweenp
the optimal cluster centers and the estimated ones, is O( (s log d)/n) before reaching the optimal difference ∆∗ .
The proof and detailed analysis are shown in the supplementary file.
p
Remark First, the O( (s log d)/n) convergence rate
implies that the sample complexity for accurately recovering s-sparse cluster centers is O(s log d), which is significantly lower than the dimensionality d. Similar results on sample complexity have also been obtained in
sparse supervised learning (e.g. Lasso regression (Tibshirani, 1996; Zhao & Yu, 2006) and compressive sensing (Donoho, 2006)). Compared to the sample complexity
O(d) for accurately recovering cluster centers (Chaudhuri
et al., 2007; 2009), O(s log d) is a significant improvement
for high-dimensional data and sparse cluster centers. Compared to the minimax sample complexity O(s2 log d) developed in (Azizyan et al., 2013), our sample complexity
has a lower dependence on s. However, we note that our
sample complexity is developed for recovering cluster centers, while the sample complexity developed in (Azizyan
et al., 2013) is for unsupervised classification error.
Second, ∆∗ is defined as the best recovery accuracy that
can be achieved by the proposed algorithm. To bound ∆∗ ,

using the condition ∆∗ ≤ (1 − ρ)/2, we have


√
√ √
−(1 − 2∆∗ − ρ)2 √
( sη0 + sσ ln n)
∆∗ ≤ 6 2c1 exp
2
2
2(3 − ρ) σ
√
In the case when σ d = Ω(1), namely the length of the
random vector gi is on the same order as the cluster center,
we have ∆∗ ≤ O(exp(−O(d)), which is a small value for
high-dimensional data. We note that the residual error ∆∗
cannot be removed even with increasing number of samples. This is mostly due to the greedy nature of our algorithm, i.e. each data point is assigned to the closest cluster,
even when it is separated by a similar distance from all the
clusters. In contrast, for GMM, it is possible to recover the
cluster centers with arbitrary accuracy provided sufficiently
large number of samples.

5. Experiments
In this section, we first conduct experiments with simulated data to verify that the initial centers computed by hierarchical clustering algorithm are not too far away from the
true centers. We then compare the proposed clustering algorithm to several clustering algorithms that are used for
high-dimensional data on several benchmark datasets.
According to our analysis, we need to ensure that the initial centers are not too far away from the true centers (i.e.,
∆1 ≤ ∆max ). To satisfy this condition, we find the initial
cluster centers by applying a hierarchical clustering algorithm (Murtagh, 1984) to a small subset of data, a practice
commonly used in many clustering algorithms such as kmeans (Jain et al., 1999). In more detail, we first randomly
sample [5K log n] instances, and run the hierarchical clustering algorithm against the sampled data instances. Since
the sample size used by the hierarchical clustering is relatively small, its running time is miniscule when compared
to clustering the entire dataset.
Experimental Results We first conduct experiments
with simulated data to verify that the initial centers determined by hierarchical clustering algorithm are not too far
away from the true centers, i.e., they satisfy ∆1 ≤ ∆max .
To this end, for a fixed dimensionality d, we create 2 ddimensional binary sparse cluster centers c1 and c2 . In the
representation of each cluster center, we randomly select
1, 000 entries from the d dimensional vector, and set their
values to be 1; the remaining entries are set to 0. We further
normalize the centers onto the sphere of a unit ball. In addition, for each cluster center ci , we generate 10, 000 data
points by adding Gaussian noise (sampled from N (0, σ 2 I)
with σ = 0.002) to the cluster center ci . A hierarchical clustering algorithm is applied to the randomly sampled data points to compute the initial cluster centers. We
vary dimensionality d in range {20,000, 50,000, 100,000,

A Single-Pass Algorithm for Efficiently Recovering Sparse Cluster Centers of High-dimensional Data
Table 1. A comparison of ∆1 and ∆max with different dimensionality d. The number of samples n is set to 10, 000.
d

∆1
∆max

20K
0.097
0.474

50K
0.161
0.484

100K
0.236
0.488

200K
0.338
0.492

400K
0.459
0.493

200,000, 400,000}. Table 1 shows the magnitudes of ∆1
and ∆max with different values of d. We observe that in
all the cases, ∆1 < ∆max holds, verifying that the hierarchical clustering algorithm is a promising way to select the
initial cluster centers.
We now report experimental results on four real-world
high-dimensional benchmark datasets where the dimensionalities are significantly larger than the numbers of samples. Below, we briefly describe each of the testbeds.
• Yale database1 contains 165 grayscale face images of
15 people. For each people, 11 images were taken
with one per different facial expressions or configurations. Each image has size 64 × 64, leading to a
4, 096-dimensional vector.
• Reuters-21578 dataset2 contains 21, 578 documents
in 135 categories. After discarding the documents belonging to multiple categories, 8, 293 documents are
left and they belong to 65 imbalanced clusters.
• TDT2 dataset contains the top 30 categories, in terms
of size, of TDT2 corpus3 . These 30 categories are
comprised of 9, 394 documents in a 36, 771 dimensional space.
• TREC 05 dataset (Cormack & Lynam, 2005) contains
823, 470 binary variables describing the presence of
word tokens in 92, 189 email messages. All the emails
belong to one of the two classes: spam or non-spam.
Table 2 summarizes the statistics of all the testbeds used in
our study.
We compare the proposed clustering algorithm to the following five clustering approaches that are applicable to
high-dimensional data. They are (a) KM, the k-means algorithm (Lloyd, 1982), (b) PCAKM, that first applies PCA to project data points to a low-dimensional space, with
95% of variance kept, before applying the k-means algorithm, (c) LDA, the latent Dirichlet allocation (LDA) al1

http://vision.ucsd.edu/content/
yale-face-database
2
http://www.daviddlewis.com/resources/
testcollections/reuters21578/
3
http://projects.ldc.upenn.edu/TDT2/
data-release.html

Table 2. Description of Datasets

Name
Yale
Reuters-21578
TDT2
TREC 05

#Instances
165
8, 293
9, 394
92, 189

#Features
4, 096
18, 933
36, 771
823, 470

#Clusters
15
65
30
2

gorithm (Blei et al., 2003), (d) LSC, the large scale spectral clustering with landmark-based representation (Chen
& Cai, 2011), and (e) RegKM (Sun et al., 2012), a group
lasso regularized k-means algorithm. Some of the stateof-the-art subspace clustering algorithms (e.g. sparse subspace clustering (SCC) (Elhamifar & Vidal, 2009) and generalized principal component analysis (GPCA) (Vidal et al.,
2005)) were not included in our comparative study because
of their very high computational cost for high-dimensional
data. We refer to the proposed clustering algorithm as
High-dimensional Clustering with Sparse Centers, or HDSC for short. The proposed clustering algorithm as well
as all the baseline algorithms are implemented in Matlab
and all the experiments are performed on a Xeon 2.40 GHz
processor with 16 GB memory. Each experiment is repeated five times, and the clustering performance as well as
the running time averaged over five trials are reported. We
mark the results as N/A if an algorithm did not output the
results within 5 hours.
Table 3 summarizes the performance of the proposed clustering algorithm HDSC and the baseline algorithms. We
first observe that the proposed clustering algorithm HDSC
is significantly more efficient than all the baseline clustering algorithms on all the four datasets. For example, HDSC clusters the TDT2 database in less than 1 second. As
a comparison, all of the five baseline algorithms take more
than 40 seconds to partition this dataset. Although we note
that the running time of spectral clustering can be significantly reduced by applying randomized methods (Halko
et al., 2011), it usually works only in the case of approximate low rank matrices. Unfortunately, this assumption
does not hold for document data, whose eigenspectrums
usually have a long tail. In addition, compared to the standard k-means algorithm, the proposed HDSC algorithm is
at least 50 times more efficient, due to the fact that HDSC only needs one pass over data points for cluster center
estimation. In addition to efficiency, we also observe that
HDSC outperforms the baseline methods in three out of
four benchmark datasets. We note that although PCAKM
improves the performance of standard k-means by dimensionality reduction, it still takes the longest running time
and yields worse results than the proposed algorithm and
LSC. This result indicates that blind dimensionality reduction may not be optimal for clustering high-dimensional data with sparse cluster centers. Overall, the empirical result-

A Single-Pass Algorithm for Efficiently Recovering Sparse Cluster Centers of High-dimensional Data
Table 3. Average performance of the proposed algorithm (HDSC) and the baseline algorithms (KM (Lloyd, 1982), PCAKM, LDA (Blei
et al., 2003), LSC (Chen & Cai, 2011), and RegKM (Sun et al., 2012)) on four benchmark datasets

Datasets
Yale
Reuters-21578
TDT2
TREC 05

NMI
CPU time (s)
NMI
CPU time (s)
NMI
CPU time (s)
NMI
CPU time (s)

HDSC
0.51
0.06
0.43
0.5
0.66
0.9
0.22
7.8

KM
0.49
5.8
0.40
29
0.62
52
0.16
412

s demonstrate both the efficiency and effectiveness of the
proposed algorithm for high-dimensional data clustering.

6. Conclusions
In this paper, we propose a framework for efficient clustering of high dimensional data with sparse cluster centers.
The key idea is to cast the high-dimensional data clustering
problem into the problem of recovering the optimal cluster
centers, and iteratively estimating the cluster centers using
disjoint subsets with exponentially increasing number of
data points. This is a key step to ensure that the estimated
cluster centers will be close to the optimal cluster centers.
To satisfy the assumption that the true cluster centers are sparse with no more than s non-zero elements, we introduce
an `1 regularizer when updating the cluster centers. We
show that with a high probability, the proposed clustering
algorithm can accurately recover the optimal cluster centers by only going through O(s log d) data instances. This
logarithmic dependence on data dimensionality is a significant improvement over state of the art, making the proposed clustering algorithm both efficient and effective for
high-dimensional clustering problem. Our empirical studies with several real-world high-dimensional datasets show
the promising performance of the proposed clustering algorithm. We plan to further improve the algorithm for streaming data where all the data points can not be stored in the
memory.

Acknowledgement:
This work was supported in part by the National Science
Foundation (IIS-1251031) and the Office of Naval Research (N00014-11-1-0100 and N00014-12-1-0431).

A. Proof of Theorem 1
Our analysis is based on induction. Let b
c1 , . . . , b
cK be the
K cluster centers obtained at the t-th iteration. Define ∆t

PCAKM
0.50
7.4
0.41
79
0.65
221
N/A
N/A

LDA
0.49
6.7
0.41
66
0.66
115
0.21
932

LSC
0.51
2.9
0.42
21
0.68
47
0.20
614

RegKM
0.49
3.0
0.40
32
0.65
101
0.19
671

to be the maximum difference between the estimated cluster centers and the true ones, i.e.,
∆t = max kb
ci − ci k.
i∈[K]

We denote by Ck the support of ck . Let s = max |Ck | be
the maximal number of non-zero entries in all the sparse
centers.
We develop the following lemma to guarantee the correctness of the induction step.
Lemma 1. Let ∆t be the maximum difference between the
optimal cluster centers and the ones estimated at iteration
t, and  ∈ (0, 1) be the failure probability. Assume
∆t ≤∆max ,
(7)
18 2K
,
(8)
|S t | ≥ ln
µ0



p
(1 − 2∆t − ρ)2
λt ≥c1 exp −
ln |S t |)
(η
+
σ
0
8(1 + ∆t )2 σ 2
p
√
ln |S t | + ln d
c2 η0
p
+ t + c3 σ
,
(9)
|S |
|S t |
for some universal constants c1 , c2 and c3 . Then with a
probability 1 − 6, we have
√
∆t+1 ≤ 2 sλt .
The detailed proof of this Lemma can be found in the supplementary materials.
To prove Theorem 1, we need to show that if
{∆1 , . . . , ∆m } ≥ ∆∗ , (9) is always true. Consequently,
we can apply Lemma 1 in each epoch, leading to
√
√ m
√ 2λ1 (5) c∆1
m+1
∆
≤ 2 sλ = 2 s √
= √ .
2m
2m
We show that (9) is true by induction. Given the definition

A Single-Pass Algorithm for Efficiently Recovering Sparse Cluster Centers of High-dimensional Data

of ∆∗ and ∆1 ≥ ∆∗ , it naturally follows that


√
(1 − 2∆1 − ρ)2
(η0 + σ ln n)
c1 exp −
1
2
2
8(1 + ∆ ) σ
(3) ∆1 (5) λ1
≤ √ ≤
.
3
6 2s
From the definition of T in (6), we have
√
√
2λ1
c2 η0
ln T + ln d
√
+ c3 σ
≤
.
T
3
T

Azizyan, M., Singh, A., and Wasserman, L. A. Minimax
theory for high-dimensional gaussian mixtures with sparse mean separation. In NIPS, pp. 2139–2147, 2013.
(10)

Balcan, M., Blum, A., and Gupta, A. Approximate clustering without the approximation. In SODA, pp. 1068–
1077, 2009b.
(11)

Following (10) and (11), we know (9) holds for t = 1.
Assume that with a probability at least 1 − 6(t − 1),


√
(1 − 2∆t − ρ)2
(η0 + σ ln n)
λt ≥c1 exp −
t
2
2
8(1 + ∆ ) σ
p
√
ln |S t | + ln d
c2 η0
p
+ t + c3 σ
,
|S |
|S t |

Balcan, M., Blum, A., and Gupta, A. Clustering under
approximation stability. Journal of the ACM, 60(2):8:1–
8:34, 2013.
Belkin, M. and Sinha, K. Polynomial learning of distribution families. In FOCS, pp. 103–112, 2010.
Blei, David M., Ng, Andrew Y., and Jordan, Michael I.
Latent dirichlet allocation. JMLR, 3:993–1022, 2003.

holds for some t ≥ 1. Then, based on Lemma 1, with a
probability at least 1 − 6t, we have
√
(12)
∆t+1 ≤ 2 sλt .
Given the definition of ∆∗ , we know that for any ∆t+1 ≥
∆∗ , we have


√
(1 − 2∆t+1 − ρ)2
c1 exp −
(η0 + σ ln n)
t+1
2
2
8(1 + ∆ ) σ
(13)
∆t+1 (12) λt
λt+1
≤ √
≤ √ =
.
3
6 2s
3 2
Similar to (11), we have
p
√
ln |S t+1 | + ln d
c2 η 0
p
+
c
σ
3
|S t+1 |
|S t+1 |
!
√
√
ln n + ln d (6) 2λt+1
1
c2 η0
√
≤
+ c3 σ
.
≤√
T
3
T
2t

Balcan, M., Blum, A., and Gupta, A. Finding low error
clusterings. In COLT, 2009a.

(14)

Combining (13) and (14), we have, with a probability at
least 1 − 6t, (9) holds for t + 1.

References
Achlioptas, D. and McSherry, F. On spectral learning of
mixtures of distributions. In COLT, pp. 458–469, 2005.
Agrawal, R., Gehrke, J., Gunopulos, D., and Raghavan, P.
Automatic subspace clustering of high dimensional data
for data mining applications. In SIGMOD, pp. 94–105,
1998.
Arora, Sanjeev and Kannan, Ravi. Learning mixtures of
arbitrary gaussians. In STOC, pp. 247–257, 2001.

Blum, A., Coja-Oghlan, A., Frieze, A., and Zhou, S. Separating populations with wide data: a spectral analysis.
Electronic Journal of Statistics, 3:73–113, 2009.
Brubaker, S. C. and Vempala, S. Isotropic pca and affineinvariant clustering. In FOCS, pp. 551–560, 2008.
Chaudhuri, K. Learning mixtures of distributions. PhD
dissertation, EECS department, UC Berkeley, 2007.
Chaudhuri, K., Halperin, E., Rao, S., and Zhou, S. A rigorous analysis of population stratification with limited
data. In SODA, pp. 1046–1055, 2007.
Chaudhuri, K., Dasgupta, S., and Vattani, A. Learning mixtures of gaussians using the k-means algorithm. CoRR,
abs/0912.0086, 2009.
Chen, Xinlei and Cai, Deng. Large scale spectral clustering
with landmark-based representation. In AAAI, 2011.
Cormack, Gordon V. and Lynam, Thomas R. Spam corpus
creation for TREC. In CEAS, 2005.
Dasgupta, A., Hopcroft, J. E., Kleinberg, J. M., and Sandler, M. On learning mixtures of heavy-tailed distributions. In FOCS, pp. 491–500, 2005.
Dasgupta, Sanjoy. Learning mixtures of gaussians. In
FOCS, pp. 634–644, 1999.
Dasgupta, Sanjoy and Schulman, Leonard J. A two-round
variant of em for gaussian mixtures. In UAI, pp. 152–
159, 2000.
De Smet, Frank, Mathys, Janick, Marchal, Kathleen, Thijs, Gert, De Moor, Bart, and Moreau, Yves. Adaptive quality-based clustering of gene expression profiles.
Bioinformatics, 18(5):735–746, 2002.

A Single-Pass Algorithm for Efficiently Recovering Sparse Cluster Centers of High-dimensional Data

Donoho, D.L. Compressed sensing. IEEE Transactions on
Information Theory, 52(4):1289–1306, 2006.
Elhamifar, E. and Vidal, R. Sparse subspace clustering. In
CVPR, pp. 2790–2797, 2009.
Ertöz, Levent, Steinbach, Michael, and Kumar, Vipin.
Finding clusters of different sizes, shapes, and densities
in noisy, high dimensional data. In SDM. SIAM, 2003.
Figueiredo, M. and Jain, A. K. Unsupervised learning of
finite mixture models. PAMI, 24(3):381–396, 2002.
Hale, E. T., Wotao, Y., and Zhang, Y. Fixed-point continuation for L1-minimization: methodology and convergence. SIAM J. on Optimization, 19(3):1107–1130,
2008.
Halko, N., Martinsson, P., and Tropp, J. A. Finding structure with randomness: Probabilistic algorithms for constructing approximate matrix decompositions. SIAM Review, 53(2):217–288, 2011.
Hsu, Daniel and Kakade, Sham M. Learning mixtures of
spherical gaussians: moment methods and spectral decompositions. In ITCS, pp. 11–20, 2013.
Huggins, J. Provably learning mixtures of gaussians and
more. Technical report, Columbia University, 2011.
Jain, A. K., Murty, M. N., and Flynn, P. J. Data clustering:
A review. ACM Comput. Surv., 31(3):264–323, 1999.
Jin, R., Yang, T., and Zhu, S. A new analysis of compressive sensing by stochastic proximal gradient descent.
CoRR, abs/1304.4680, 2013.
Johnstone, Iain M. High dimensional statistical inference
and random matrices. In Proceedings of the international congress of mathematicians (ICM), pp. 307–333,
2007.
Kalai, A. T., Moitra, A., and Valiant, G. Disentangling
gaussians. Commun. ACM, 55(2):113–120, 2012.
Kannan, R., Salmasian, H., and Vempala, S. The spectral
method for general mixture models. In COLT, pp. 444–
457, 2005.
Keerthi, S. Sathiya and DeCoste, Dennis. A modified finite Newton method for fast solution of large scale linear
svms. JMLR, 6:341–361, 2005.

Mika, S., Schölkopf, B., Smola, A. J., Müller, K., Scholz,
M., and Rätsch, G. Kernel pca and de-noising in feature
spaces. In NIPS, pp. 536–542, 1998.
Murtagh, F. Complexities of hierarchic clustering algorithms: state of the art. Computational Statistics Quarterly, 1(2):101–113, 1984.
Pan, W. and Shen, X. Penalized model-based clustering
with application to variable selection. JMLR, 8:1145–
1164, 2007.
Sculley, D. Web-scale k-means clustering. In WWW, pp.
1177–1178, 2010.
Srebro, N., Shakhnarovich, G., and Roweis, S. T. An
investigation of computational and informational limits
in gaussian mixture clustering. In ICML, pp. 865–872,
2006.
Srebro, Nathan. Are there local maxima in the infinitesample likelihood of gaussian mixture estimation? In
COLT, pp. 628–629, 2007.
Sun, W., Wang, J., and Fang, Y. Regularized k-means
clustering of high-dimensional data and its asymptotic
consistency. Electronic Journal of Statistics, 6:148–167,
2012.
Tibshirani, Robert. Regression shrinkage and selection via
the lasso. Journal of the Royal Statistical Society. Series
B (Methodological), 58(1):267–288, 1996.
Tsybakov, Alexandre B. Introduction to Nonparametric
Estimation. Springer, 2008.
Vempala, S. and Wang, G. A spectral algorithm for learning
mixture models. J. Comput. Syst. Sci., 68(4):841–860,
2004.
Vidal, René, Ma, Yi, and Sastry, Shankar. Generalized
principal component analysis (gpca). PAMI, 27(12):
1945–1959, 2005.
Wang, Wei and Yang, Jiong. Mining high-dimensional data. In Data Mining and Knowledge Discovery Handbook, pp. 793–799. Springer, 2005.
Witten, Daniela M and Tibshirani, Robert. A framework
for feature selection in clustering. Journal of the American Statistical Association, 105(490), 2010.

Lindsey, B. G. Mixture Models: Theory, Geometry and
Applications. IMS, 1996.

Wright, S. J., Nowak, R. D., and Figueiredo, M. A. T. Sparse reconstruction by separable approximation. IEEE
Transactions on Signal Processing, 57(7):2479–2493,
2009.

Lloyd, Stuart P. Least squares quantization in pcm. IEEE
Transactions on Information Theory, 28(2):129–136,
1982.

Zhao, Peng and Yu, Bin. On model selection consistency
of lasso. JMLR, 7:2541–2563, 2006.

