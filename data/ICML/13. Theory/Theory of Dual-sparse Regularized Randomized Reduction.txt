Theory of Dual-sparse Regularized Randomized Reduction

Tianbao Yang
Department of Computer Science, the University of Iowa, Iowa City, USA

TIANBAO - YANG @ UIOWA . EDU

Lijun Zhang
ZHANGLJ @@ LAMDA . NJU . EDU . CN
National Key Laboratory for Novel Software Technology, Nanjing University, Nanjing, China
Rong Jin
RONGJIN @ CSE . MSU . EDU
Department of Computer Science and Engineering, Michigan State University, East Lansing, USA
Institute of Data Science and Technologies at Alibaba Group, Seattle, USA
Shenghuo Zhu
Institute of Data Science and Technologies at Alibaba Group, Seattle, USA

Abstract
In this paper, we study randomized reduction
methods, which reduce high-dimensional features into low-dimensional space by randomized
methods (e.g., random projection, random hashing), for large-scale high-dimensional classification. Previous theoretical results on randomized
reduction methods hinge on strong assumptions
about the data, e.g., low rank of the data matrix or
a large separable margin of classification, which
hinder their applications in broad domains. To
address these limitations, we propose dual-sparse
regularized randomized reduction methods that
introduce a sparse regularizer into the reduced
dual problem. Under a mild condition that the
original dual solution is a (nearly) sparse vector, we show that the resulting dual solution is
close to the original dual solution and concentrates on its support set. In numerical experiments, we present an empirical study to support
the analysis and we also present a novel application of the dual-sparse regularized randomized
reduction methods to reducing the communication cost of distributed learning from large-scale
high-dimensional data.

1. Introduction
As the scale and dimensionality of data continue to grow
in many applications (e.g., bioinformatics, finance, comProceedings of the 32 nd International Conference on Machine
Learning, Lille, France, 2015. JMLR: W&CP volume 37. Copyright 2015 by the author(s).

SHENGHUO @ GMAIL . COM

puter vision, medical informatics) (Sánchez et al., 2013;
Mitchell et al., 2004; Simianer et al., 2012; Bartz et al.,
2011), it becomes critical to develop efficient and effective algorithms to solve big data machine learning problems. Randomized reduction methods for large-scale or
high-dimensional data analytics have received a great deal
of attention in recent years (Mahoney & Drineas, 2009; Shi
et al., 2012; Paul et al., 2013; Weinberger et al., 2009; Mahoney, 2011). By either reducing the dimensionality (referred to as feature reduction) or reducing the number of
training instances (referred to as instance reduction), the
resulting problem has a smaller size of training data that is
not only memory-efficient but also computation-efficient.
While randomized instance reduction has been studied a
lot for fast least square regression (Drineas et al., 2008;
2006; 2011; Ma et al., 2014), randomized feature reduction
is more popular for linear classification (Blum, 2005; Shi
et al., 2012; Paul et al., 2013; Weinberger et al., 2009; Shi
et al., 2009a) (e.g., random hashing is a noticeable built-in
tool in Vowpal Wabbit 1 , a fast learning library, for solving
high-dimensional problems.). In this paper, we focus on the
latter technique and refer to randomized feature reduction
as randomized reduction for short.
Although several theoretical properties have been examined for randomized reduction methods when applied to
classification, e.g., generalization performance (Paul et al.,
2013), preservation of margin (Blum, 2005; Balcan et al.,
2006; Shi et al., 2012) and the recovery error of the
model (Zhang et al., 2014), these previous results reply
on strong assumptions about the data. For example, both
(Paul et al., 2013) and (Zhang et al., 2014) assume the
data matrix is of low-rank, and (Blum, 2005; Balcan et al.,
1

http://hunch.net/˜vw/

Dual-sparse Regularized Randomized Reduction (DSRR)

2006; Shi et al., 2012) make a assumption that all examples in the original space are separated with a positive margin (with a high probability). Another analysis in (Zhang
et al., 2014) assumes the weight vector for classification is
sparse. These assumptions are too strong to hold in many
real applications.
Contributions. To address these limitations, we propose
dual-sparse regularized randomized reduction methods referred to as DSRR by leveraging the (near) sparsity of dual
solutions for large-scale high-dimensional (LSHD) classification problems (i.e., the number of (effective) support
vectors is small compared to the total number of examples).
In particular, we add a dual-sparse regularizer into the reduced dual problem. We present a novel theoretical analysis of the recovery error of the dual variables and the primal
variable and study its implication for different randomized
reduction methods (e.g., random projection, random hashing and random sampling).
Novelties. Compared with previous works (Blum, 2005;
Balcan et al., 2006; Shi et al., 2012; Paul et al., 2013), our
theoretical analysis demands a mild assumption about the
data and directly provides guarantee on a small recovery error of the obtained model, which is critical for subsequent
analysis, e.g., feature selection (Guyon et al., 2002; Brank
et al., 2002) and model interpretation (Rätsch et al., 2005;
Sonnenburg & Franc, 2010; Rtsch et al., 2005; Sonnenburg
et al., 2007; Ben-Hur et al., 2008). For example, when exploiting a linear model to classify people into sick or not
sick based on genomic markers, the learned weight vector
is important for understanding the effect of different genomic markers on the disease and for designing effective
medicine (Jostins & Barrett, 2011; Kang & Cho, 2011).
In addition, the recovery could also increase the predictive
performance, in particular when there exists noise in the
original features (Goldberger et al., 2005).
Compared with (Zhang et al., 2014) that proposes to recover a linear model in the original feature space by dual
recovery, i.e., constructing a weight vector using the dual
variables learned from the reduced problem and the original feature vectors, our methods are better in that (i) we rely
on a more realistic assumption of the sparsity of dual variables (e.g., in support vector machine (SVM)); (ii) we analyze both smooth loss functions and non-smooth loss functions (they focused on smooth functions); (iii) we study
different randomized reduction methods in the same framework not just the random projection.
In numerical experiments, we present an empirical study
on a real data set to support our analysis and we also
demonstrate a novel application of the reduction and recovery framework in distributed learning from LSHD data,
which combines the benefits of the two complementary
techniques for addressing big data problems. Distributed

learning/optimization recently receives significant interest
in solving big data problems (Jaggi et al., 2014; Li et al.,
2014; Yang, 2013; Agarwal et al., 2011). However, it is notorious for high communication cost, especially when the
dimensionality of data is very high. By solving a dimensionality reduced data problem and using the recovered solution as an initial solution to the distributed optimization
on the original data, we can reduce the number of iterations and the communication cost. In practice, we employ
the recently developed distributed stochastic dual coordinate ascent algorithm (Yang, 2013), and observe that using
the recovered solution as an initial solution we are able to
attain almost the same performance with only one or two
communications of high dimensional vectors among multiple machines.

2. Preliminaries
Let (xi , yi ), i = 1, . . . , n denote a set of training examples, where xi ∈ Rd , yi ∈ {1, −1}. Assume both n and
d are very large. The goal of classification is to solve the
following optimization problem:
n
λ
1X
`(w> xi yi ) + kwk22
(1)
w∗ = arg min
d
2
w∈R n
i=1
where `(zy) is a convex loss function and λ is a regularization parameter. Using the conjugate function, we can turn
the problem into a dual problem:
n
1X ∗
1
` (αi ) −
αT X > Xα (2)
α∗ = arg maxn −
α∈R
n i=1 i
2λn2
where X = (x1 , . . . , xn ) is the data matrix and `∗i (α) is
the convex conjugate function of `(zyi ). Given the optimal
dual solution α∗ , the optimal primal solution can be com1
puted by w∗ = − λn
Xα∗ . For LSHD problems, directly
solving the primal problem (1) or the dual problem (2)
could be very expensive. We aim to address the challenge
by randomized reduction methods. Let A(·) : Rd → Rm
denote a randomized reduction operator that reduces a ddimensional feature vector into m-dimensional feature vecb = A(x) denote the reduced feature vector. With
tor. Let x
b1 , . . . , x
bn of the training exthe reduced feature vectors x
amples, a conventional approach is to solve the following
reduced primal problem
n
1X
λ
bi yi ) + kuk22
u∗ = arg minm
`(u> x
(3)
u∈R n
2
i=1
or its the dual problem
n
1
1X ∗
b > Xα
b
α
b∗ = arg maxn −
` (αi ) −
αT X
α∈R
n i=1 i
2λn2

(4)

b = (b
bn ) ∈ Rm×n . Previous studies
where X
x1 , . . . , x
have analyzed the reduced problems for random projection methods and proved the preservation of margin (Blum,
2005; Shi et al., 2012) and the preservation of minimum

Dual-sparse Regularized Randomized Reduction (DSRR)

enclosing ball (Paul et al., 2013). Zhang et al. (2014) proposed a dual recovery approach
Pn that constructs a recov1
b ∗ = − λn
α∗ ]i xi and proved the
ered solution by w
i=1 [b
recovery error for random projection under the assumption of low-rank data matrix or sparse w∗ . In addition,
they also showed that the naive recovery by A> u∗ (when
A(x) = Ax) has a large recovery error.
One deficiency with the simple dual recovery approach is
that due to the reduction in the feature space, many nonsupport vectors for the original optimization problem will
become support vectors, which could result in the corruption in the recovery error. As a result, the original analysis
of dual recovery method requires a strong assumption of
data (i.e., the low rank assumption). In this work, we plan
to address this limitation in a different way, which allows
us to relax the assumption significantly.

3. DSRR and its Guarantee
To reduce the number of or the contribution of training instances that are non-support vectors in the original optimization problem and are transformed into support vectors
due to the reduction of the feature space, we employ a simple trick that adds a dual-sparse regularization to the reduced dual problem. In particular, we solve the following
problem:
α
e∗ =
(5)
n
1
1X ∗
b > Xα
b − 1 R(α)
` (αi ) −
αT X
arg maxn −
α∈R
n i=1 i
2λn2
n
where R(α) = τ kαk1 , and τ > 0 is a regularization parameter, whose theoretical value will be revealed later.
To further understand the added dual-sparse regularizer, we
consider SVM, where the loss function can be either the
hinge loss (a non-smooth function) `(zy) = max(0, 1−zy)
or the squared hinge loss (a smooth function) `(zy) =
max(0, 1 − zy)2 . We first consider the hinge loss, where
`∗i (αi ) = αi yi for αi yi ∈ [−1, 0]. Then the new dual problem is equivalent to
n
1X
1
b > Xα
b − τ kαk1
max n
−αi yi −
αT X
2
2λn
n
α◦y∈[−1,0] n
i=1
Using variable transformation −αi yi → βi , the above
problem is equivalent to
n
1
1X
b > X(β
b ◦ y)
βi (1 − τ ) −
max
(β ◦ y)T X
2
2λn
β∈[0,1]n n
i=1
Changing into the primal form, we have
n
1X
λ
bi yi ) + kuk22
`1−τ (u> x
maxm
u∈R n
2
i=1

(6)

where `γ (z) = max(0, γ − z) is a max-margin loss with
margin given by γ. It can be understood that adding the `1
regularization in the reduced problem of SVM is equivalent

to using a max-margin loss with a smaller margin, which is
intuitive because examples become difficult to separate after dimensionality reduction and is consistent with several
previous studies that the margin is reduced in the reduced
feature space (Blum, 2005; Shi et al., 2012). Similarly for
squared hinge loss, the equivalent primal problem is
n
λ
1X 2
bi yi ) + kuk22
`1−τ (u> x
(7)
maxm
u∈R n
2
i=1
where `2γ (z) = max(0, γ − z)2 .
Although adding a dual-sparse regularizer is intuitive and
can be motivated from previous results, we emphasize that
the proposed dual-sparse formulation provides a new perspective and bounding the dual recovery error ke
α∗ − α∗ k is
a non-trivial task, which is a major contribution of this paper. We first state our main result in Theorem 1 for smooth
loss functions.
Theorem 1. Let α
e∗ be the optimal dual solution to (5).
Assume α∗ is s-sparse with the support set given by S. If
2
b ∗ k∞ , then we have
b > X)α
k(X > X − X
τ ≥ λn
k[e
α∗ ]S c k1 ≤ 3k[e
α∗ ]S − [α∗ ]S k1
(8)
2
Furthermore, if `(z) is a L-smooth loss function , we have
√
ke
α∗ − α∗ k2 ≤ 3τ L s, ke
α∗ − α∗ k1 ≤ 12τ Ls
(9)
k[e
α∗ ]S − [α∗ ]S k1 ≤ 3τ Ls, k[e
α∗ ]S c k1 ≤ 9τ Ls (10)
where S c is the complement of S, and [α]S is a vector that
only contains the elements of α in the set S.
Remark 1: The proof is presented at the end of Section 4. It can be seen that the dual recovery error is proportional to the value of τ which is dependent on k(X > X −
b > X)α
b ∗ k∞ , which we can bound without using any asX
sumption about the data matrix or the optimal dual variable α∗ . In contrast, previous bounds (Zhang et al., 2013;
b 2,
b > Xk
2014; Paul et al., 2013) depend on kX > X − X
which requires the low rank assumption on X. In next
1
section, we provide an upper bound of λn
k(X > X −
b > X)α
b ∗ k∞ that will allow us to understand how the reX
duced dimensionality m affects the recovery error. Essentially, the results indicate that for random projection,
randomized Hadamard transform q
and random hashing,
1
b > X)α
b ∗ k∞ ≤ O( log(n/δ) )kw∗ k2 with
k(X > X − X
λn

m

a high probability
1 − δ, and thus the recovery error will be
p
scaled as 1/m in terms of m - the same order of recovery
error as in (Zhang et al., 2013; 2014) that assumes low rank
of the data matrix.
Remark 2: We would like to make a connection with
LASSO for sparse signal recovery. In sparse signal
recovery under noise measurements f = U w∗ + e,
where e denotes the noise in measurements, if a LASSO
2
A function is L-smooth if its gradient is L-Lipschitz continuous.

Dual-sparse Regularized Randomized Reduction (DSRR)

minw 12 kU w−f k22 +λkwk1 is solved for the solution, then
the regularization parameter λ is required to be larger than
the quantity kU > ek∞ that depends on the noise in order to
have an accurate recovery (Eldar & Kutyniok, 2012). Similarly in our formulation, the added `1 regularization τ kαk1
bX
b > as compared with XX >
is to counteract the noise in X
and the value of τ is dependent on the noise.
To present the theoretical result on the non-smooth loss
functions, we need to introduce restricted eigen-value conditions similar to those used in the sparse recovery analysis for LASSO (Bickel et al., 2009; Xiao & Zhang, 2013).
In particular, we introduce the following definition of restricted eigen-value condition.
Definition 2. Given an integer s > 0, we define
√
Kn,s = {α ∈ Rn : kαk2 ≤ 1, kαk1 ≤ s}.
We say that X satisfies the restricted eigenvalue condition
at sparsity level s if there exist positive constants ρ+
s and
ρ−
s such that
α> X > Xα
α> X > Xα
ρ+
, ρ−
.
s = sup
s = inf
α∈Kn,s
n
n
α∈Kn,s
We also define another quantity that measures the restricted
b namely
b > X,
eigen-value of X > X − X
>
b
b > X)α|
|α (X > X − X
σs = sup
.
(11)
n
α∈Kn,s
Theorem 3. Let α
e∗ be the optimal dual solution to (5).
Assume α∗ is s-sparse with the support set given by S. If
2
b > X)α
b ∗ k∞ , then we have
k(X > X − X
τ ≥ λn
k[e
α∗ ]S c k1 ≤ 3k[e
α∗ ]S − [α∗ ]S k1
Assume the data matrix X satisfies the restricted eigenvalue condition at sparsity level 16s and σ16s < ρ−
16s , we
have
√
3λ
ke
α∗ − α∗ k2 ≤
τ s
−
2(ρ16s − σ16s )
6λ
ke
α∗ − α∗ k1 ≤ −
τs
(ρ16s − σ16s )
Remark 3: The proof appears in the full version of the
paper 3 . Compared to smooth loss functions, the conditions that guarantee a small recovery for non-smooth loss
functions are more restricted. In next section, we will
provide a bound on σ16s to further understand the condition
≤ ρ−
essentially implies that m ≥
16s , which
of σ16s


2
ρ+
16s
Ω
s log(n/s) .
ρ−
16s

Last but not least, we provide a theoretical result on the recovery error for the nearly sparse optimal dual variable α∗ .
We state the result for smooth loss functions. To quantify
the near sparsity, we let α∗s ∈ Rn denote a vector that zeros
all entries in α∗ except for the top-s elements in magnitude
3

http://arxiv.org/abs/1504.03991

and assume α∗s satisfies the following condition:

 ∗ s

∇` (α∗ ) + 1 X > Xα∗s  ≤ ξ
(12)


λn
∞
where ∇`∗ (α) = (∇`∗1 (α1 ), . . . , ∇`∗n (αn ))> . The above
condition can be considered as a sub-optimality condition (Boyd & Vandenberghe, 2004) of α∗s measured in
the infinite norm. For the optimal solution α∗ , we have
1
X > Xα∗ = 0.
∇`∗ (α∗ ) + λn
Theorem 4. Let α
e∗ be the optimal dual solution to (5).
Assume α∗ is nearly s-sparse such that (12) holds with
2
the support set of α∗s given by S. If τ ≥ λn
k(X > X −
>
b X)α
b ∗ k∞ + 2ξ, then we have
X
k[e
α∗ ]S c k1 ≤ 3k[e
α∗ ]S − [α∗ ]S k1
Furthermore, if `(z) is a L-smooth loss function, we have
√
α∗ − α∗s k1 ≤ 12τ Ls (13)
ke
α∗ − α∗s k2 ≤ 3τ L s, ke
k[e
α∗ ]S − [α∗ ]S k1 ≤ 3τ Ls,

k[e
α∗ ]S c k1 ≤ 9τ Ls

(14)

Remark 4: The proof appears in the full version of the
paper. Compared to Theorem 1 for exactly sparse optimal dual solution, the dual recovery error bound√for nearly
sparse optimal dual solution is increased by 6L sξ for `2
norm and by 24Lsξ for `1 norm.
Finally, we note that with the recovery error bound for the
dual solution, we can easily derive an error bound for the
1
e ∗ = − λn
Xα
e∗ . Below we present a theprimal solution w
orem for smooth loss functions. One can easily extend the
result to non-smooth loss functions.
e ∗ be the recovered primal solution using
Theorem 5. Let w
α
e∗ the optimal dual solution to (5). Assume α∗ is s-sparse
2
and `(z) is a L-smooth loss function. If τ ≥ λn
k(X > X −
>
b ∗ k∞ then we have
b X)α
X
√
σ1
e ∗ − w∗ k2 ≤
3Lτ s
kw
λn
where σ1 is the maximum singular value of X. Furthermore if n1 X > X has a restricted eigen-value ρ+
16s at sparq
sity level 16s, then
ρ+
√
16s
e ∗ − w∗ k2 ≤ √ 3Lτ s
kw
λ n
Remark 5: Since ρ+
is
always
less than σ12 /n, the sec16s
ond result if the restricted eigen-value condition holds is
always better than the first result. With the bound of τ as
e ∗ scales as
revealed
p s later, we can see that the error of w
O( m
kw∗ k2 ) in terms of sparsity s of α∗ , the reduced
dimensionality m and the magnitude of w∗ . A similar order of error bound was established in (Zhang et al., 2014)
assuming w∗ is s-sparse and X is approximately low rank.
In contrast, we do not assume X is approximately low rank.

4. Analysis
In this section, we first provide upper bound analysis of
2
>
b> b
λn k(X X − X X)α∗ k∞ and σs , and then present the

Dual-sparse Regularized Randomized Reduction (DSRR)

proof of Theorem 1 for smooth loss functions. To facilitate
our analysis, we define
1 b> b
∆=
(X X − X > X)α∗
λn
4.1. Bounding k∆k∞
A critical condition in both Theorem 1 and Theorem 3 is
τ > k∆k∞ . In order to reveal the theoretical value of τ
and its implication for various randomized reduction methods, we need to bound k∆k∞ . We first provide a general
analysis and then study its implication for various randomized reduction methods separately. The analysis is based
on the following assumption, which essentially is indicated
by Johnson-Lindenstrauss (JL)-type lemmas.
Assumption 1 (A1). Let A(x) = Ax be a linear projection
operator where A ∈ Rm×d such that for any given x ∈ Rd
with a high probability
1 − δ, we

 have
kAxk22 − kxk22  ≤ A,δ kxk22
where A,δ depends on m, δ and possibly d.
With this assumption, we have the following theorem regarding the upper bound of k∆k∞ .
Theorem 6. Suppose A ∈ Rm×d satisfies Assumption A,
then with a high probability 1 − 2δ we have
k∆k∞ ≤ Rkw∗ k2 A,δ/n
where R = maxi kxi k2 .
Proof.
1
1 b> b
(X X − X > X)α∗ =
(X > A> AX − X > X)α∗
λn
λn
1 > >
X (A A − I)Xα∗ = X > (I − A> A)w∗
=
λn
1
where we use the fact w∗ = − λn
Xα∗ . Then
1 b> b
>
>
[(X X − X X)α∗ ]i = x>
i (I − A A)w∗
λn
Therefore in order to bound k∆k∞ , we need to bound
>
x>
i (I − A A)w∗ for all i ∈ [n]. We first bound for inei and w
e∗
dividual i and then apply the union bound. Let x
ei = xi /kxi k2
be normalized version of xi and w∗ , i.e., x
e ∗ = w∗ /kw∗ k2 . Suppose Assumption A is satisfied,
and w
then with a probability 1 − δ,
e ∗ )k22
e i )k22 − kA(e
kA(e
xi + w
xi − w
>
e>
e∗ − x
e>
e∗ =
x
i A Aw
i w
4
A,δ
2
>
ei w
e∗ ≤
e ∗ k22 ) ≤ A,δ
−x
(ke
xi k2 + kw
2
Similarly with a probability 1 − δ,
e ∗ )k22 − kA(e
e ∗ )k22
xi − w
kA(e
xi + w
>
>
e>
e
e
e
x
A
A
w
−
x
w
=
∗
i
i
4
A,δ
2
e>
e
e ∗ k22 ) ≥ −A,δ
−x
w
≥
−
(ke
x
k
+
kw
∗
∗ 2
i
2
Therefore with a probability 1 − 2δ, we have
>
>
|x>
i A Aw∗ − xi w∗ |
>
e∗ − x
e> w
e ∗ | ≤ kxi k2 kw∗ k2 A,δ
≤ kxi k2 kw∗ k2 |e
x>
i A Aw
Then applying union bound, we complete the proof.

Next, we discuss four classes of randomized reduction operators, namely random projection, randomized Hadamard
transform, random hashing and random sampling, and
study the corresponding A,δ and their implications for the
recovery error.
Random Projection. Random projection has been employed widely for dimension reduction. The projection
operator A is usually sampled from sub-Gaussian distributions with mean 0 and variance 1/m, e.g., (i) Gaussian
distribution: Aij ∼ N
√ (0, 1/m), (ii) Rademacher distribution: Pr(Aij p
= ±1/ m) = 0.5, (iii) discrete distribution:
Pr(Aij = ± 3/m) = 1/6 and Pr(Aij = 0) = 2/3. The
last two distributions for dimensionality reduction were
proposed and analyzed in (Achlioptas, 2003). The following lemma is the general JL-type lemma for A with subGaussian entries, which reveals the value of A,δ in Assumption A.
Lemma 1. (Nelson) Let A ∈ Rm×d be a random matrix
with subGaussian entries of mean 0 and variance 1/m .
For any given x with a probability 1 − δ, we have
r


kAxk22 − kxk22  ≤ c log(1/δ) kxk22
m
where c is some small universal constant.
Randomized Hadamard Transform.
Randomized
Hadamard transform was introduced to speed-up random
projection, reducing the computational time 4 of random
projection from O(dm) to O(d log d) or even O(d log m).
The projection matrix A is of the form A = P HD, where
• D ∈ Rd×d is a diagonal matrix with Dii = ±1 with
equal probabilities.
• H is the d × d Hadamard
√ matrix (assuming d is a
power of 2), scaled by 1/ d.
• P ∈ Rm×d is typically a sparse matrix that facilities computing P x. Several choices of P are possible (Nelson; Ailon & Chazelle, 2009; Tropp, 2011).
Below we provide a JL-type lemma for a randomized
m×d
Hadamard transform
that samples m
q with P ∈ R
d
m HDx

with replacement.
q
d
m×d
Lemma 2. (Nelson) Let A =
be a
m P HD ∈ R
randomized Hadamard transform with P being a random
sampling matrix. For any given x with a probability 1 − δ,
we have
r


kAxk22 − kxk22  ≤ c log(1/δ) log(d/δ) kxk22
m
where c is some small universal constant.
coordinates from

Remark 6:pCompared to random projection, there is an
additional
log(d/δ) factor in A,δ . However, it can
4

refers to the running time of computing Ax.

Dual-sparse Regularized Randomized Reduction (DSRR)

be removed by applying an additional
random projection.
q
d 0
m×d
In particular, if we let A =
,
m P P HD ∈ R
where P ∈ Rt×d is a random sampling matrix with t =
m log(d/δ) and P 0 ∈ Rm×t is a random projection matrix that satisfies Lemma 1, then we have the same order of
A,δ . Please refer to (Nelson) for more details.
Random Hashing. Another line of work to speed-up random projection is random hashing which makes the projection matrix A much sparser and takes advantage of the
sparsity of feature vectors. It was introduced in (Shi et al.,
2009b) for dimensionality reduction and later was improved to an unbiased version by (Weinberger et al., 2009)
with some theoretical analysis. Dasgupta et al. (2010) provided a rigorous analysis of the unbiased random hashing.
Recently, Kane & Nelson (2014) proposed two new random hashing algorithms with a slightly sparser random matrix A. Here we provide a JL-type lemma for the random
hashing algorithm in (Weinberger et al., 2009; Dasgupta
et al., 2010). Let h : N → [m] denote a random hashing function, and ξ = (ξ1 , . . . , ξd ) denote a Rademacher
random variable, i.e., ξi , i = 1, . . . , d are independent and
ξi ∈ {1, −1} with equal probabilities. The projection matrix A can be written as A = HD, where D ∈ Rd×d
is a diagonal matrix with Djj = ξj , and H ∈ Rm×d
with Hij = δi,h(j) 5 . Under the random matrix A, the
b ∈ Rm , where
feature P
vector x ∈ Rd is reduced to x
[b
x]i = j:h(j)=i [x]j ξj . The following JL-type Lemma is
a basic result from (Dasgupta et al., 2010) with a rephrasing.
Lemma 3. Let A = HD ∈ Rm×d be a random hashing
∞
√1 ,
matrix. For any given vector x ∈ Rd such that kxk
kxk2 ≤
c
for δ < 0.1, with a probability 1 − 3δ, we have
r


2
2
kAxk2 − kxk2  ≤ 12 log(1/δ) kxk22
m
p
where c = 8 m/3 log1/2 (1/δ) log2 (m/δ).
Remark 7: Compared to random projection, there is an
√ 2.
additional condition on the feature vector kxk∞ ≤ kxk
c
However, it can be removed by applying an extra preconditioner P to x before applying the projection matrix A, i.e.,
b = HDP x. Two preconditioners were discussed in (Dasx
gupta et al., 2010), with one √
corresponding to duplicating
x c times and scaling it by 1/ c and another one given by
P ∈ Rd×d which consists of d/b diagonal blocks of b × b
randomized Hadamard matrix, where b = 6c log(3c/δ).
The running time of the reduction using the later preconditioner is O(d log c log log c).
Random Sampling. Last we discuss random sampling
and compare with the aforementioned randomized reduction methods. In fact, the JL-type lemma for random sam5

δij = 1 if i = j, and 0 otherwise.

pling is implicit in the proof of Lemma 2. We make it explicit in the following lemma.
q
d
Lemma 4. Let A = m
P ∈ Rm×d be a scaled random
sampling matrix where P ∈ Rm×d samples m coordinates
with replacement. Then with a probability 1 − δ, we have
r


kAxk22 − kxk22  ≤ kxk∞ 3d log(1/δ) kxk22
kxk2
m
Remark 8: Compared with other three randomized
re√
kxk∞
duction methods, there is an additional kxk2 d factor in
A,δ , which could result in a much larger A,δ and consequentially a larger recovery error. That is why the randomized Hadamard transform was introduced to make this
additional factor close to a constant.
From the above discussions, we can conclude that with random projection, randomized Hadamard transform and random hashing, with a probability 1 − δ we have,
>
k∆k∞ = max |x>
i (I − A A)w∗ |
i
r
log(n/δ)
kw∗ k2 .
≤ cR
m
q
which essentially indicates that τ ≥ 2cR

log(n/δ)
kw∗ k2 .
m

4.2. Bounding σs for non-smooth case
Another condition in Theorem 3 is to require σ16s ≤ ρ−
16s .
Since ρ−
16s is dependent on the data, we provide an upper
bound of σ16s to further understand the condition.
In the
q

). Refollowing analysis, we assume A,δ = O( log(1/δ)
m
call the definition of σs :
b > X)α|
b
|α> (X > X − X
σs = sup
.
(15)
n
α∈Kn,s
We provide a bound of σs below.
The key idea is to use the convex relaxation of Kn,s . Define
Sn,s = {α ∈ Rn : kαk2 ≤ 1, kαk0 ≤ s}. It was shown
in (Plan & Vershynin, 2011) that conv(Sn,s ) ⊂ Kn,s ⊂
2conv(Sn,s ), where conv(S) is the convex hull of the set
S. It is not difficult to show that (see the supplement)
max |(Xα)> (I − A> A)(Xα)|
α∈Kn,s

≤4

max

α1 ,α2 ∈Sn,s

|(Xα1 )> (I − A> A)(Xα2 )|

Let u1 = Xα1 and u2 = Xα2 . For any fixed α1 , α2 ∈
Sn,s , with a probability 1 − δ we can have
!
r
log(1/δ)
1
>
>
+
|(Xα1 ) (I − A A)(Xα2 )| = O ρs
n
m
where we use
kXαk22
kXαk22
max
≤ max
= ρ+
s
α∈Sn,s
α∈Kn,s
n
n
Then by using Lemma 3.3 in (Plan & Vershynin, 2011)
about the entropy of Sn,s and the union bound, we can ar-

Dual-sparse Regularized Randomized Reduction (DSRR)

rive at the following upper bound for σs .
Theorem 7. With a probability 1 − δ, we have !
r
(log(1/δ) + s log(n/s))
+
σs ≤ O ρs
m
Remark 9: With above result, we can further understand
the condition σ16s ≤ ρ−
to
16s , which amounts!
r
(log(1/δ) + s log(n/s))
≤ ρ−
O ρ+
16s ,
16s
m
i.e., m ≥ Ω(κ216s (log(1/δ) + s log(n/s))) where κ16s =
−
ρ+
16s /ρ16s is the restricted condition number of the data matrix.
4.3. Proof Sketch of Theorem 1
We present a proof sketch of Theorem 1. Due to limitation
of space, other proofs are provided in the supplement. Let
Fb(α) be defined as
n
1
1X ∗
b > Xα
b + τ kαk1
`i (αi ) +
αT X
Fb(α) =
2
n i=1
2λn
n
Since α
e∗ = arg min Fb(α) therefore for any g∗ ∈ ∂kα∗ k1
0 ≥F̂ (e
α∗ ) − F̂ (α∗ )


1 ∗
1 b> b
≥(e
α∗ − α∗ )>
∇` (α∗ ) +
X
Xα
∗
n
λn2
1
τ
α∗ − α∗ )> g∗ +
ke
α∗ − α∗ k22
+ (e
n
2nL
where we used the strong convexity of `∗i and its strong
convexity modulus 1/L. By the optimality condition of
α∗ , we can have


1 ∗
1
>
0 ≥ (α∗ − α
e∗ )>
∇` (α∗ ) +
X
Xα
(16)
∗
n
λn2
Combining the above two inequalities we have
τ
1
1
α∗ − α∗ )> g∗ +
ke
α∗ − α∗ k22
0 ≥(e
α∗ − α∗ )> ∆ + (e
n
n
2nL
Since the above inequality holds for any g∗ ∈ ∂kα∗ k1 , if
we choose [g∗ ]i = sign([e
α∗ ]i ), i ∈ S c , then we have
>
(e
α∗ − α∗ ) g∗ ≥ −k[e
α∗ ]S − [α∗ ]S k1 + k[e
α∗ ]S c k1
Combining the above inequalities leads to
(τ + k∆k∞ )k[e
α∗ ]S − [α∗ ]S k1 ≥(τ − k∆k∞ )k[e
α∗ ]S c k1
1
ke
α∗ − α∗ k22
+
2L
Assuming τ ≥ 2k∆k∞ , we have
ke
α∗ − α∗ k22 ≤ 3τ Lk[e
α∗ ]S − [α∗ ]S k1
(17)
k[e
α∗ ]S c k1 ≤ 3k[e
α∗ ]S − [α∗ ]S k1
Therefore,
k[e
α∗ − α∗ ]S k21 ≤ ske
α∗ − α∗ k22 ≤ 3τ Lsk[e
α∗ ]S − [α∗ ]S k1
leading to the result
k[e
α∗ ]S − [α∗ ]S k1 ≤ 3τ Ls.
Combing this inequality with inequalities in (17) we have
√
k[e
α∗ ]S c k1 ≤ 9τ Ls, ke
α∗ − α∗ k2 ≤ 3τ L s.

5. Numerical Experiments
In this section, we provide a case study in support of DSRR
and the theoretical analysis, and a demonstration of the application of DSRR to distributed optimization.
A case study on text classification. We use the RCV1binary data (Lewis et al., 2004) to conduct a case study.
The data contains 697, 641 documents and 47, 236 features.
We use a splitting 677, 399/20, 242 for training and testing. The feature vectors were normalized such that the `2
norm is equal to 1. We only report the results using random
hashing since it is the most efficient, while other randomized reduction methods (except for random sampling) have
similar performance. For the loss function, we use both
the squared hinge loss (smooth) and the hinge loss (nonsmooth). We aim to examine two questions related to our
analysis and motivation (i) how does the value of τ affect
the recovery error? (ii) how does the number of samples m
affect the recovery error?
We vary the value of τ among 0, 0.1, 0.2, . . . , 0.9, the value
of m among 1024, 2048, 4096, 8192, and the value of λ
among 0.001, 0.00001. Note that τ = 0 corresponds to
the randomized reduction approach without the sparse regularizer. The results averaged over 5 random trials are
shown in Figure 1 for the squared hinge loss and in Figure 2 for the hinge loss. We first analyze the results in
Figure 1. We can observe that when τ increases the rak[e
α∗ ]S c k1
tio of k[e
α∗ ]S −[α∗ ]S k1 decreases indicating that the magnitude of dual variables for the original non-support vectors
decreases. This is intuitive and consistent with our motivation. The recovery error of the dual solution (middle)
first decreases and then increases. This can be partially explained by the theoretical result in Theorem 1. When the
value of τ becomes larger than a certain threshold making
τ > k∆k∞ hold, then Theorem 1 implies that a larger τ
will lead to a larger error. On the other hand, when τ is less
than the threshold, the dual recovery error will decrease as
τ increases. In addition, the figures exhibit that the thresholds for larger m are smaller
p which is consistent with our
analysis of k∆k∞ = O( 1/m). The difference between
λ = 0.001 and λ = 0.00001 is because that smaller λ will
lead to larger kw∗ k2 . In terms of the hinge loss, we observe
similar trends, however, the recovery is much more difficult
than that for squared hinge loss especially when the value
of λ is small.
An application to distributed learning. Although in some
cases the solution learned in the reduced space can provide
sufficiently good performance, it usually performs worse
than the optimal solution that solves the original problem
and sometimes the performance gap between them can not
be ignored as seen in following experiments. To address
this issue, we combine the benefits of distributed learning
and the proposed randomized reduction methods for solv-

0.3

0.5

τ

0.7

0.9

0.2

0 0.1

1.5

m=1024
m=2048
m=4096
m=8192

1

0.5

0 0.1

0.3

0.5
τ

0.5

0.7

0.9

λ=0.00001

0.7

0.9

m=1024
m=2048
m=4096
m=8192

1.6
1.4
1.2
1
0.8
0.6
0.4
0 0.1

0.3

0.5
τ

0.7

0.9

m=1024
m=2048
m=4096
m=8192

0.4
0.2
0 0.1

τ

λ=0.00001

0

0.3

0.6

0.3

0.5

0.7

τ

0.9

λ=0.00001
30

m=1024
m=2048
m=4096
m=8192

25
20

Name
RCV1
KDD

15
10

8
6
4
2

0.3

0.5
τ

0.7

0.9

0

0 0.1

0.3

0.5

0.7

0.9

0.7

0.6
m=1024
m=2048
m=4096
m=8192

0.5

0.4

0 0.1

0.3

τ

λ=0.00001
6

m=1024
m=2048
m=4096
m=8192

5
4
3
2
1
0

0 0.1

0.3

0.5
τ

0.7

0.9

0.5
τ

0.7

0.9

λ=0.00001
1.4
m=1024
m=2048
m=4096
m=8192

1.3
1.2
1.1
1
0.9
0.8
0.7
0 0.1

0.3

0.5
τ

0.7

0.9

relative−primal−error−L2−norm

0.5

0.8

relative−primal−error−L2−norm

1

relative−dual−error−L2−norm

m=1024
m=2048
m=4096
m=8192

relative−dual−error−L2−norm

no−support−error/support−error no−support−error/support−error

1.5

λ=0.001

15

10

5

0

rcv1

time (s)

15

DSRR
DSRR−Rec
DSRR−DisDCA−1
DSRR−DisDCA−2
DisDCA

10
5
0

#Nodes
5
10

kdd

0
0 0.1

Figure 1. Recovery error for squared hinge loss. From left to
e ∗ −w∗ k2
α
e ∗ ]S c k1
∗ −α∗ k2
vs τ , kαekα
vs τ , and kw
vs
right: k[αek[
kw∗ k2
∗ ]S −[α∗ ]S k1
∗ k2
τ.
λ=0.001

DSRR
DSRR−Rec
DSRR−DisDCA−1
DSRR−DisDCA−2
DisDCA

10

20

λ=0.001

Statistics of datasets
#Testing #Features
20,242
47, 236
748,401
29,890,095

rcv1

5
0

Table 1.
#Training
677,399
8,407,752

Testing Error (%)

0 0.1

m=1024
m=2048
m=4096
m=8192

0.4

0.8

DSRR
DSRR−Rec
DSRR−DisDCA−1
DSRR−DisDCA−2
DisDCA

kdd
250
200

time (s)

0

0.6

λ=0.001
1

Testing Error (%)

0.05

0.8

relative−primal−error−L2−norm

0.1

1

relative−primal−error−L2−norm

λ=0.001
m=1024
m=2048
m=4096
m=8192

relative−dual−error−L2−norm

λ=0.001
0.15

relative−dual−error−L2−norm

no−support−error/support−error

non−support−error/support−error

Dual-sparse Regularized Randomized Reduction (DSRR)

150

DSRR
DSRR−Rec
DSRR−DisDCA−1
DSRR−DisDCA−2
DisDCA

100
50
0

0.8
m=1024

0.7

m=2048

0.6

m=4096

0.5

m=8192

0.4
0.3
0.2
0.1

0 0.1

0.3

0.5
τ

0.7

0.9

λ=0.00001
15

m=1024
m=2048
m=4096
m=8192

10

5

0

0 0.1

0.3

0.5
τ

0.7

0.9

Figure 2. Same curves as above but for non-smooth hinge loss.

ing big data problems. When data is too large and sits on
multiple machines, distributed learning can be employed
to solve the optimization problem. In distributed learning,
individual machines iteratively solve sub-problems associated with the subset of data on them and communicate
some global variables (e.g., the primal solution w ∈ Rd )
among them. When the dimensionality d is very large, the
total communication cost could be very high. To reduce the
total communication cost, we propose to first solve the reduced data problem and then use the found solution as the
initial solution to the distributed learning for the original
data.
Below, we demonstrate the effectiveness of DSRR for the
recently proposed distributed stochastic dual coordinate ascent (DisDCA) algorithm (Yang, 2013). The procedure is
(1) reduce original high-dimensional data to very low dimensional space on individual machines; (2) use DisDCA
to solve the reduced problem; (3) use the optimal dual solution to the reduce problem as an initial solution to DisDCA
for solving the original problem. We record the running
time for randomized reduction in step 1 and optimization
of the reduced problem in step 2, and the optimization of
the original problem in step 3. We compare the performance of four methods (i) the DSRR method that uses the
model of the reduced problem solved by DisDCA to make
predictions, (ii) the method that uses the recovered model

Figure 3. Top: Testing error for different methods. Bottom:
Training time for different methods. The value of λ = 10−5 and
the value of τ = 0.9. The high-dimensional features are reduced
to m = 1024-dimensional space using random hashing. The loss
function is the squared hinge loss.

in the original space, referred to as DSRR-Rec; (iii) the
method that uses the dual solution to the reduced problem
as an initial solution of DisDCA and runs it for the original problem with k = 1 or 2 communications (the number
of updates before each communication is set to the number of examples in each machine), referred to as DSRRDisDCA-k; and (iv) the distributed method that directly
solves the original problem by DisDCA. For DisDCA to
solve the original problem, we stop running when its performance on the testing data does not improve. Two data
sets are used, namely RCV1-binary, KDD 2010 Cup data.
For KDD 2010 Cup data, we use the one available on LibSVM data website. The statistics of the two data sets are
summarized in Table 1. The results averaged over 5 trials
are shown in Figure 3, which exhibit that the performance
of DSRR-DisDCA-1/2 is remarkable in the sense that it
achieves almost the same performance of directly training
on the original data (DisDCA) and uses much less training
time. In addition, DSRR-DisDCA performs much better
than DSRR and has small computational overhead.

6. Conclusions
In this paper, we have proposed dual-sparse regularized
randomized reduction methods for classification. We presented rigorous theoretical analysis of the proposed dualsparse randomized reduction methods in terms of recovery
error under a mild condition that the optimal dual variable is (nearly) sparse for both smooth and non-smooth
loss functions, and for various randomized reduction approaches. The numerical experiments validate our theoretical analysis and also demonstrate that the proposed reduction and recovery framework can benefit distributed optimization by providing a good initial solution.

Dual-sparse Regularized Randomized Reduction (DSRR)

Acknowledgements
The authors would like to thank the anonymous reviewers for their helpful and insightful comments. T. Yang
was supported in part by NSF (IIS-1463988). R. Jin
was partially supported by NSF IIS-1251031 and ONR
N000141410631.

References
Achlioptas, Dimitris. Database-friendly random projections: Johnson-lindenstrauss with binary coins. Journal
of Computer and System Sciences., 66:671–687, 2003.
Agarwal, Alekh, Chapelle, Olivier, Dudk, Miroslav, and
Langford, John. A reliable effective terascale linear
learning system. CoRR, 2011.
Ailon, Nir and Chazelle, Bernard. The fast johnson–
lindenstrauss transform and approximate nearest neighbors. SIAM J. Comput., 39(1):302–322, 2009.
Balcan, Maria-Florina, Blum, Avrim, and Vempala, Santosh. Kernels as features: On kernels, margins, and lowdimensional mappings. Machine Learning, 65:79–94,
2006.
Bartz, Daniel, Hatrick, Kerr, Hesse, Christian W., Müller,
Klaus-Robert, and Lemm, Steven. Directional variance
adjustment: improving covariance estimates for highdimensional portfolio optimization. arXiv:1109.3069,
2011.
Ben-Hur, Asa, Ong, Cheng Soon, Sonnenburg, Sören,
Schölkopf, Bernhard, and Rätsch, Gunnar. Support
vector machines and kernels for computational biology.
PLoS Comput Biology, 4:e1000173, 2008.
Bickel, Peter J., Ritov, Ya’acov, and Tsybakov, Alexandre B. Simultaneous analysis of lasso and dantzig selector. ANNALS OF STATISTICS, 37(4), 2009.
Blum, Avrim. Random projection, margins, kernels, and
feature-selection. In Proceedings of the 2005 International Conference on Subspace, Latent Structure and
Feature Selection, volume 3940, pp. 52–68. Springer,
2005.
Boyd, Stephen and Vandenberghe, Lieven. Convex Optimization. Cambridge University Press, 2004.
Brank, Janez, Grobelnik, Marko, Milić-Frayling, Natasa,
and Mladenić, D. Feature selection using support vector
machines. In Proceedings of the International Conference on Data Mining Methods and Databases for Engineering, Finance, and Other Fields, pp. 84–89, 2002.

Dasgupta, Anirban, Kumar, Ravi, and Sarlós, Tamás. A
sparse johnson–lindenstrauss transform. In Proceedings
of the 42nd ACM symposium on Theory of computing,
STOC ’10, pp. 341–350, 2010.
Drineas, Petros, Mahoney, Michael W., and Muthukrishnan, S. Sampling algorithms for l2 regression and applications. In ACM-SIAM Symposium on Discrete Algorithms (SODA), pp. 1127–1136, 2006.
Drineas, Petros, Mahoney, Michael W., and Muthukrishnan, S. Relative-error cur matrix decompositions.
SIAM Journal Matrix Analysis Applications, 30:844–
881, 2008.
Drineas, Petros, Mahoney, Michael W., Muthukrishnan,
S., and Sarlós, Tamàs. Faster least squares approximation. Numerische Mathematik, 117(2):219–249, February 2011.
Eldar, Yonina C. and Kutyniok, Gitta. Compressed Sensing: Theory and Applications. Compressed Sensing:
Theory and Applications. Cambridge University Press,
2012. ISBN 9781107005587.
Goldberger, Jacob, Roweis, Sam, Hinton, Geoffrey, and
Salakhutdinov, Ruslan. Neighbourhood components
analysis. In Advances in Neural Information Processing
Systems (NIPS), pp. 513–520, 2005.
Guyon, Isabelle, Weston, Jason, Barnhill, Stephen, and
Vapnik, Vladimir. Gene selection for cancer classification using support vector machines. Machine Learning
(ML), 46:389–422, 2002.
Jaggi, Martin, Smith, Virginia, Takác, Martin, Terhorst,
Jonathan, Krishnan, Sanjay, Hofmann, Thomas, and Jordan, Michael I. Communication-efficient distributed
dual coordinate ascent. In Advances in Neural Information Processing Systems (NIPS), pp. 3068–3076, 2014.
Jostins, Luke and Barrett, Jeffrey C. Genetic risk prediction in complex disease. Human Molecular Genetics, 20
(R2):R182–R188, 2011.
Kane, Daniel M. and Nelson, Jelani. Sparser johnsonlindenstrauss transforms. Journal of the ACM, 61:4:1–
4:23, 2014.
Kang, J., Kugathasan S. Georges M. Zhao H. and Cho,
J.H. Improved risk prediction for crohn’s disease with
a multi-locus approach. Human Molecular Genetics, 20:
2435–2442, 2011.
Lewis, David D., Yang, Yiming, Rose, Tony G., and Li,
Fan. Rcv1: A new benchmark collection for text categorization research. Journal of Machine Learning Research (JMLR), 5:361–397, 2004.

Dual-sparse Regularized Randomized Reduction (DSRR)

Li, Mu, Andersen, David G, Smola, Alex J, and Yu, Kai.
Communication efficient distributed machine learning
with the parameter server. In Advances in Neural Information Processing Systems (NIPS), pp. 19–27. 2014.
Ma, Ping, Mahoney, Michael W., and Yu, Bin. A statistical
perspective on algorithmic leveraging. In Proceedings of
the 31th International Conference on Machine Learning
(ICML), pp. 91–99, 2014.
Mahoney, Michael W. Randomized algorithms for matrices
and data. Foundations and Trends in Machine Learning,
3(2):123–224, 2011.
Mahoney, Michael W. and Drineas, Petros. Cur matrix decompositions for improved data analysis. Proceedings
of the National Academy of Sciences, 106(3):697–702,
2009.
Mitchell, Tom M., Hutchinson, Rebecca, Niculescu,
Radu S., Pereira, Francisco, Wang, Xuerui, Just, Marcel,
and Newman, Sharlene. Learning to decode cognitive
states from brain images. Machine Learning, 57(1-2):
145–175, 2004.
Nelson, Jelani. Johnson-lindenstrauss notes. Technical report, MIT.
Paul, Saurabh, Boutsidis, Christos, Magdon-Ismail, Malik,
and Drineas, Petros. Random projections for support
vector machines. In Proceedings of the International
Conference on Artificial Intelligence and Statistics (AISTATS), pp. 498–506, 2013.
Plan, Yaniv and Vershynin, Roman. One-bit compressed
sensing by linear programming. CoRR, abs/1109.4299,
2011.
Rätsch, G., Sonnenburg, S., and Schölkopf, B. RASE:
recognition of alternatively spliced exons in c.elegans.
Bioinformatics, 21:i369–i377, 2005.
Rtsch, Gunnar, Sonnenburg, Sren, and Schlkopf, Bernhard. Rase: recognition of alternatively spliced exons
in c.elegans. In Proceedings of the International Conference on Intelligent Systems for Molecular Biology
(ISMB) (Supplement of Bioinformatics), pp. 369–377,
2005.
Sánchez, Jorge, Perronnin, Florent, Mensink, Thomas, and
Verbeek, Jakob J. Image classification with the fisher
vector: Theory and practice. International Journal of
Computer Vision, 105(3):222–245, 2013.
Shi, Qinfeng, Petterson, James, Dror, Gideon, Langford,
John, Smola, Alex, and Vishwanathan, S.V.N. Hash kernels for structured data. Journal of Machine Learning
Research (JMLR), 10:2615–2637, 2009a.

Shi, Qinfeng, Petterson, James, Dror, Gideon, Langford,
John, Smola, Alexander J., Strehl, Alexander L., and
Vishwanathan, Vishy. Hash kernels. In Proceedings
of the International Conference on Artificial Intelligence
and Statistics (AISTATS), pp. 496–503, 2009b.
Shi, Qinfeng, Shen, Chunhua, Hill, Rhys, and van den Hengel, Anton. Is margin preserved after random projection?
In Proceedings of the International Conference on Machine Learning (ICML), 2012.
Simianer, Patrick, Riezler, Stefan, and Dyer, Chris. Joint
feature selection in distributed stochastic learning for
large-scale discriminative training in smt. In Proceedings of Annual Meeting of the Association for Computational Linguistics (ACL), pp. 11–21, 2012.
Sonnenburg, Sren and Franc, Vojtech. Coffin: A computational framework for linear svms. In Proceedings of the
International Conference on Machine Learning (ICML),
pp. 999–1006, 2010.
Sonnenburg, Sren, Schweikert, Gabriele, Philips, Petra,
Behr, Jonas, and Rtsch, Gunnar. Accurate splice site
prediction using support vector machines. BMC Bioinformatics, 8, 2007.
Tropp, Joel A. Improved analysis of the subsampled randomized hadamard transform. Advances in Adaptive
Data Analysis, 3(1-2):115–126, 2011.
Weinberger, Kilian Q., Dasgupta, Anirban, Langford, John,
Smola, Alexander J., and Attenberg, Josh. Feature hashing for large scale multitask learning. In Proceedings
of the International Conference on Machine Learning
(ICML), pp. 1113–1120, 2009.
Xiao, Lin and Zhang, Tong. A proximal-gradient homotopy method for the sparse least-squares problem. SIAM
Journal on Optimization, 23(2):1062–1091, 2013.
Yang, Tianbao. Trading computation for communication: Distributed stochastic dual coordinate ascent. In
Advances in Neural Information Processing Systems
(NIPS), pp. 629–637, 2013.
Zhang, Lijun, Mahdavi, Mehrdad, Jin, Rong, Yang, Tianbao, and Zhu, Shenghuo. Recovering the optimal solution by dual random projection. In Proceedings of Conference of Learning Theory, pp. 135–157, 2013.
Zhang, Lijun, Mahdavi, Mehrdad, Jin, Rong, Yang, Tianbao, and Zhu, Shenghuo. Random projections for classification: A recovery approach. IEEE Transactions on Information Theory (IEEE TIT), 60(11):7300–7316, 2014.

