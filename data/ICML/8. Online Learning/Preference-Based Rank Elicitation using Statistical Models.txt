Preference-Based Rank Elicitation using Statistical Models:
The Case of Mallows
Róbert Busa-Fekete1
Eyke Hüllermeier2
Balázs Szörényi1,3
1
2
3

BUSAROBI @ INF. U - SZEGED . HU
EYKE @ UPB . DE
SZORENYI @ INF. U - SZEGED . HU

MTA-SZTE Research Group on Artificial Intelligence, Tisza Lajos krt. 103., H-6720 Szeged, Hungary
Department of Computer Science, University of Paderborn, Warburger Str. 100, 33098 Paderborn, Germany
INRIA Lille - Nord Europe, SequeL project, 40 avenue Halley, 59650 Villeneuve d’Ascq, France

Abstract
We address the problem of rank elicitation assuming that the underlying data generating process is characterized by a probability distribution on the set of all rankings (total orders) of a
given set of items. Instead of asking for complete
rankings, however, our learner is only allowed to
query pairwise preferences. Using information
of that kind, the goal of the learner is to reliably
predict properties of the distribution, such as the
most probable top-item, the most probable ranking, or the distribution itself. More specifically,
learning is done in an online manner, and the goal
is to minimize sample complexity while guaranteeing a certain level of confidence.

1. Introduction
Exploiting revealed preferences to learn a ranking over a
set of options is a challenging problem with many practical applications. For example, think of crowd-sourcing
services like the Amazon Mechanical Turk, where simple
questions such as pairwise comparisons between decision
alternatives are asked to a group of annotators. The task
is to approximate an underlying target ranking on the basis
of these pairwise comparisons, which are possibly noisy
and partially inconsistent (Chen et al., 2013). Another application worth mentioning is the ranking of XBox gamers
based on their pairwise online duels; the ranking system of
XBox is called TrueSkillTM (Guo et al., 2012).
In this paper, we focus on a problem that we call
preference-based rank elicitation. In the setting of this
problem, we proceed from a finite set of items I =
{1, . . . , M } and assume a fixed but unknown probability
Proceedings of the 31 st International Conference on Machine
Learning, Beijing, China, 2014. JMLR: W&CP volume 32. Copyright 2014 by the author(s).

distribution P(·) to be defined on the set of all rankings (total orders) r of these items; for example, one may think of
P(r) as the probability that an individual, who is randomly
chosen from a population, reports the preference order r
over the items I. However, instead of asking for full rankings, we are only allowed to ask for the comparison of pairs
of items. The goal, then, is to quickly gather enough information so as to enable the reliable prediction of properties
of the distribution P(·), such as the most probable top-item,
the most probable ranking, or the distribution itself. More
specifically, learning is done in an online manner, and the
goal is to minimize sample complexity while guaranteeing
a certain level of confidence.
After a brief survey of related work, we introduce notation
in Section 3 and describe our setting more formally in Section 4. In Section 5, we recall the well-known Mallows
-model, which is the model we assume for the distribution P(·) in this paper. In Section 6, we introduce and analyze rank elicitation algorithms for the problems mentioned
above. In Section 7, we present an experimental study, and
finally conclude the paper in Section 8.

2. Related work
Pure exploration algorithms for the stochastic multi-armed
bandit problem sample the arms a certain number of times
(not necessarily known in advance), and then output a
recommendation, such as the best arm or the m best
arms (Bubeck et al., 2009; Even-Dar et al., 2002; Bubeck
et al., 2013; Gabillon et al., 2011; Cappé et al., 2012).
While our algorithm can be seen as a pure exploration strategy, too, we do not assume that numerical feedback can be
generated for individual options; instead, our feedback is
qualitative and refers to pairs of options.
Different types of preference-based multi-armed bandit setups have been studied in a number of recent publications.
Like in our case, the (online) learner compares arms in a
pairwise manner, and the (stochastic) outcome of a com-

Preference-Based Rank Elicitation using Statistical Models

parison essentially informs about whether or not an option
is preferred to an other one. We can classify these works
into two main groups. Approaches from first group, such
as (Yue et al., 2012) and (Yue & Joachims, 2011), assume
certain regularity properties for the pairwise comparisons,
such as strong stochastic transitivity, thereby assuring the
existence of a natural target ranking. The second group
does not make such assumptions, and instead derives a target ranking from the pairwise relation by means of a ranking rule; for example, (Busa-Fekete et al., 2013) and (Urvoy et al., 2013) are of that kind. Our work is obviously
closer to the first group, since we assume that preferences
are generated by the Mallows model (Mallows, 1957)—as
will be seen later on, this assumption implies specific regularity properties on the pairwise comparisons, too.
There is a vast array of papers that devise algorithms related to the Mallows -model. Our work is specifically related to Lu & Boutilier (2011), who aim at learning the
Mallows model based on pairwise preferences. Their technique allows for sampling the posterior probabilities of the
Mallows model conditioned on a set of pairwise observations. In this paper, however, we consider the online setting, where the learner needs to decide which pairs of options to compare next.
Braverman & Mossel (2008) solve the Kemeny (rank aggregation) problem when the distribution of rankings belongs to the family of Mallows. The authors prove that, in
this special case, the problem is less complex than in the
general case and can be solved in polynomial time.
Jamieson & Nowak (2011) consider an online learning
setup with the goal to learn an underlying ranking via sampling of noisy pairwise preferences. However, they assume that the objects to be ranked can be embedded in a ddimensional Euclidean space, and that the rankings reflect
their relative distances from a common reference point in
Rd . The authors introduce an adaptive sampling algorithm,
which has an expected sample complexity of order d log n.

are replaced with each other. We denote by L(ri =
j) = {r 2 SM | ri = j} the subset of permutations for
which the rank of item i is j, and by L(rj > ri ) =
{r 2 SM | rj > ri } those for which the rank of j is higher
than the rank of i, that is, item i is preferred to j, written
i j.
We assume SM to be equipped with a probability distribution P : SM ! [0, 1]; thus, for each ranking r, we denote
by P(r) the probability to observe this ranking. Moreover,
for each pair of items i and j, we denote by
X
pi,j = P(i j) =
P(r)
(1)
r2L(rj >ri )

the probability that i is preferred to j (in a ranking randomly drawn according to P). We denote the matrix of pi,j
values by P = [pi,j ]1i,jM .

4. Preference-based rank elicitation
Our learning problem consists of making a good prediction
about P. Concretely, we consider three different goals of
the learner, depending on whether the application calls for
the prediction of a single item, a full ranking of items or the
entire probability distribution:
MPI: Find the most preferred item i⇤ , namely the
item whose probability of being top-ranked is maximal:
i⇤ = argmax Er⇠P Jri = 1K
1iM

= argmax
1iM

X

P(r)

r2L(ri =1)

q y
where · is the indicator function which is 1 if its
argument is true and 0 otherwise.
MPR: Find the most probable ranking r⇤ :
r⇤ = argmax P(r)
r2SM

3. Notation
A set of options/objects/items to be ranked is denoted by I.
To keep the presentation simple, we assume that items are
identified by natural numbers, so I = [M ] = {1, . . . , M }.
A ranking is a bijection r on I, which can also be represented as a vector r = (r1 , . . . , rM ) = (r(1), . . . , r(M )),
where rj = r(j) is the rank of the jth item. The set of
rankings can be identified with the symmetric group SM of
order M . Each ranking r naturally defines an associated
ordering o = (o1 , . . . , oM ) 2 SM of the items, namely the
inverse o = r 1 defined by or(j) = j for all j 2 [M ].

For a permutation r, we write r(i, j) for the permutation in which ri and rj , the ranks of items i and j,

b of the distribution
KLD: Produce a good estimate P
P, that is, an estimate with small KL divergence:
⇣
⌘
b <✏
KL P, P

All three goals are meant to be achieved with probability at
least 1
. Our learner operates in an online setting. In
each iteration, it is allowed to gather information by asking
for a single pairwise comparison between two items. Thus,
it selects two items i and j, and then observes either preference i j or j i; the former occurs with probability pi,j
as defined in (1), the latter with probability pj,i = 1 pi,j .
Based on this observation, the learner updates its estimates
and decides either to continue the learning process or to

Preference-Based Rank Elicitation using Statistical Models

terminate and return its prediction. What we are mainly
interested in is the sample complexity of the learner, that
is, the number of pairwise comparisons it queries prior to
termination.

5. Mallows -model
So far, we did not make any assumptions about the probability distribution P on SM . Without any restriction,
however, efficient learning is arguably impossible. Subsequently, we shall therefore assume that P is a Mallows
model (Mallows, 1957), one of the most well-known and
widely used statistical models of rank data (Marden, 1995).
The Mallows model or, more specifically, Mallow’s distribution is a parameterized, distance-based probability
distribution that belongs to the family of exponential distributions:
1
P(r | ✓, e
r) =
Z( )

d(r,e
r)

1i<jM

The normalization factor in (2) can be written as
X

r2SM

P(r | ✓, e
r) =

M
i
Y1 X

j

i=1 j=0

and thus only depends on the spread (Fligner & Verducci,
1986). Note that, since d(r, e
r) = 0 is equivalent to r = e
r,
the center ranking e
r is the mode of P(· | ✓, e
r), that is, the
most probable ranking according to the Mallows model.

6. Algorithms

Before tackling the problems introduced above (MPI,
MPR, KLD), we need some additional notation. The pair of
items chosen by the learner in iteration t is denoted (it , j t ),
and the feedback received is defined as ot = 1 if it
jt
and ot = 0 if j t it . The set of steps among the first t iterations in which the learner decides to compare items i and
t
j is denoted by Ii,j
= {` 2 [t] | (i` , j ` ) = (i, j)}, and the
t 1
size of this set by nti,j = #Ii,j
. The proportion of “wins”
of item i against item j up to iteration t is then given by

1

t
pbi,j
=

6.1. The most preferred item (MPI)

We start with a simple observation on the Mallows -model
regarding item i⇤ , which is ranked first with the highest
probability.
Proposition 1. For a Mallows -model with parameters
and e
r, it holds that rei⇤ = 1.

Proof. Let rei = 1 for some i, and consider the following
difference for some j 6= i:
X
X
P(r | , e
r)
P(r | , e
r) =
r2L(ri =1)

=

1 X `
o .
nti,j
t
`2Ii,j

We omit the index t if there is no danger of confusion.

X

r2L(rj =1)

r2L(ri =1)

(2)

where
and e
r are the parameters of the model: e
r =
(r̃1 , . . . , r̃M ) 2 SM is the location parameter (center ranking) and 2 (0, 1] the spread parameter. Moreover, d(·, ·)
is the Kendall distance on rankings, that is, the number of
discordant item pairs:
X q
y
d(r, e
r) =
(ri rj )(r̃i r̃j ) < 0 .
Z( ) =

t
Since our samples are i.i.d., pbi,j
is an estimate of the pairwise probability (1).

=

1
Z( )

P(r | , e
r)

X

d(r,e
r)

P(r(i, j) | , e
r)
d(r(i,j),e
r)

,

r2L(ri =1)

which is always always bigger than zero, if d(r, e
r) <
d(r(i, j), e
r) for all r 2 L(ri = 1). To show that d(r, e
r) <
d(r(i, j), e
r) for a r 2 L(ri = 1) is very technical, thus the
proof of this claim is deferred to the supplementary material (see Appendix A). This completes the proof.
Next, we recall a result of Mallows (1957), stating that the
matrix P has a special form for a Mallows -model: permutating its rows and columns based on the center ranking,
it is Toeplitz, and its entries can be calculated analytically
as functions of the model parameters and e
r.
Theorem 2. Assume the Mallows model with parameters
and e
r. Then, for any pair of items i and j such that rei < rej ,
the marginal probability (1) is given by pi,j = g(e
ri , rej , ),
where
g(i, j, ) = h(j

with h(k, ) = k/(1

i + 1, )

k

h(j

i, )

).

The following corollary summarizes some consequences of
Theorem 2 that we shall exploit in our implementation.
Corollary 3. For a given Mallows -model with parameters and e
r, the following claims hold:

1. For any pair of items i, j 2 [M ] such that rei < rej , the
1
pairwise marginal probabilities satisfy pi,j
1+ >
1/2 with equality holding iff rei = rej 1. Moreover,
for items i, j, k satisfying rei = rej ` = rek ` 1
with 1 < `, it holds that pi,j pi,k = O(` ` ).
2. For any pair of items i, j 2 [M ] such that rei  rej +
1 the pairwise marginal probabilities satisfy pi,j 

Preference-Based Rank Elicitation using Statistical Models

< 1/2 with equality holding iff rei = rej + 1.
1+
Moreover, for items i, j, k satisfying rei = rej + ` =
rek +`+1 with 1 < `, it holds that pi,k pi,j = O(` ` ).

M = 10, φ = 0.6

1

3. For any i, j 2 [M ] such that i 6= j, pi,j > 1/2 iff
rei < rej , and pi,j < 1/2 iff rei > rej . Therefore for any
item i 2 [M ], #Ai+ = rei 1, and #Ai = M rei
where Ai+ = {j 2 [M ]|pi,j > 1/2} and Ai = {j 2
[M ]|pi,j < 1/2}.

0.5

0
10
10
5

Proof. To show the first claim, consider a pair of items
i, j 2 [M ] for which rei = rej 1. Then, based on Theorem 2, a simple calculation yields pi,j = g(e
ri , rej , ) =
h(2, ) h(1, ) = 1+1 . It is also easy to show that
h(·, ) is a strictly increasing convex function for any
2 (0, 1]. This can be checked by showing first that
h(x) = x/(1 ex ) is a strictly increasing convex function,
x
and then by applying the transformation2 x/(1
) =
h(x log(1/ ))/ log(1/ ). And thus h(` + 2, ) h(` +
1, ) > h(` + 1, ) h(`, ) for any ` > 0. From this,
using induction, one obtains that pi,k > pi,j whenever
rek > rej > rei . To complete the proof for the first claim define f (x) = x x/(1 + x ) = x x /(1 + ), and note that
for indices i, j, k satisfying the requirements of the claim it
holds that pi,j pi,k = f (` + 2) + f (`) 2f (` + 1).
The proof of the second claim is analogous to the first one,
noting that pi,j = 1 pj,i for all i, j 2 [M ]. The third
claim is a consequence of the first two claims.
Based on Theorem 2 and Corollary 3, one can devise an
efficient algorithm for identifying the most preferred item
when the underlying distribution is Mallows. The pseudocode of this algorithm, called M ALLOWS MPI, is shown in
Algorithm 1. It maintains a set of active indices A, which
is initialized with all items [M ]. In each iteration, it picks
an item j 2 A at random and compares item i to j until
the confidence interval of pbi,j does not contain 1/2. Finally, it keeps the winner of this pairwise duel (namely
item i if pbi,j is significantly bigger than 1/2 and item j
otherwise).3 This simple strategy is suggested by Corollary 3, which shows that the “margin” mini6=j |1/2 pi,j |
around 1/2 is relatively wide; more specifically, there is no
pi,j 2 ( 1+ , 1+1 ). Moreover, deciding whether an item j
has higher or lower rank than i (with respect to e
r) is easier
than selecting the preferred option from two candidates j
and k for which j, k 6= i (see Corollary 3).
As an illustration, Figure 1 shows a plot of the matrix P for
a Mallows -model. As can be seen, the surface is steepest
close to the diagonal, which is in agreement with our above
2

Throughout the paper, log(x) denotes a natural logarithm.
In contrast to the I NTERLEAVED F ILTER (Yue et al., 2012),
which compares all active options to each other, we only compare
two options at a time.

5
0 0

Figure 1. The pairwise marginal probability matrix P for a Mallows -model (with e
r the identity, = 0.6, M = 10) calculated
based on Theorem 2.

remarks about the “margin”.
Algorithm 1 M ALLOWS MPI( )
1: Set A = {1, . . . , M }
2: Pick a random index i 2 A and set A = A \ {i}
3: while A 6= ; do
4:
Pick a random index j 2 A and set A = A \ {j}
5:
repeat
6:
Observe o = J ri < rj K
7:
pbi,j = r
pbi,j + o, ni,j = ni,j + 1
8:

ci,j =

1
2ni,j

log

4M n2i,j

until 1/2 2
/ [b
pi,j ci,j , pbi,j + ci,j ]
if 1/2 > pbi,j + ci,j then
. rej < rei w.h.p.
i=j
12: return i
9:
10:
11:

Similarly to the sample complexity analysis given by EvenDar et al. (2002) for PAC-bandits, we can upper-bound the
number of pairwise comparisons taken by M ALLOWS MPI
with high probability.
Theorem 4. Assume the Mallows model with parameters
and e
r as an underlying ranking distribution. Then, for
any 0 < < 1, M ALLOWS MPI outputs the most preferred
item with probability at least 1 , and the number of pairwise comparison taken is
✓
◆
M
M
O
log
,
⇢2
⇢
where ⇢ = 11+ .
Proof. First note that by setting
the length of the confiq
dence interval to ci,j =
1/2ni,j log(4M n2i,j / ) , we
have

3

P (|pi,j

pbi,j |

ci,j )  2 exp( 2c2i,j ni,j ) =

2M n2i,j

Preference-Based Rank Elicitation using Statistical Models

for any time step. Therefore, pi,j 2 [b
pi,j ci,j , pbi,j + ci,j ]
for any pair of items in every time step with probability
at least 1
/M . Moreover, according to Corollary 3, if
pi,j > 1/2, then rei < rej , and pi,j < 1/2 implies rei > rej ,
therefore we always keep the item which has lower rank
with respect to re with probability at least 1
/M . In
addition, since at most M 1 distinct pairs of items are
compared (always retaining the more preferred one), the
algorithm outputs the most preferred item with probability
at least 1
.
To calculate the sample complexity, based on Corollary 3,
we know that pi,j 2
/ ( 1+ , 1+1 ). Therefore to achieve
that 1/2 2
/ [b
pi,j ci,j , pbi,j + ci,j ] where pi,j > 1/2, the
following has to be satisfied:
s
✓
◆
4M n2i,j
1
1
1
1
log
<
=
2ni,j
1+
2
2(1 + )
To achieve this, simple calculation yields that the number
of samples that is needed, is
⇠
✓
◆⇡
✓
◆
4
4M
4
4
1
M
log
+ 2 1 + 2 log 2
=O
log
⇢2
⇢
⇢
⇢2
⇢
if pi,j 2 [b
pi,j ci,j , pbi,j + ci,j ]. A similar argument applies
in the case pi,j < 1/2, which completes the proof.
6.2. The most probable ranking (MPR)

For a Mallows -model, the center ranking coincides with
the mode of the distribution. Moreover, based on Corollary 3, we know that pi,j > 1/2 if (and only if) an item i
precedes an item j in the center ranking e
r. Therefore, finding the most probable ranking amounts to solving a sorting problem in which the order of two items needs to be
decided with high probability. The implementation of our
method is shown in Algorithm 2, which is based on the
well-known merge sort algorithm. Accordingly, it calls a
recursive procedure MMR EC, given in Procedure 3, which
divides the unsorted set of items into two subsets, calls itself recursively, and finally merges the two sorted list returned by calling the procedure M ALLOWS M ERGE shown
in Algorithm 4. The M ALLOWS M ERGE procedure merges
the sorted item lists, and whenever the order of two items
i and j is needed, it compares these items until the confidence interval for pi,j no longer overlaps 1/2.
Algorithm 2 M ALLOWS MPR( )
1: for i = 1 ! M do ri = i, ri0 = 0
2: (r0 , r) = MMR EC(r, r0 , , 1, M )
3: for i = 1 ! M do rri0 = i
4: return r

One can upper-bound the sample complexity of M AL LOWS MPR in a similar way as for M ALLOWS MPI.

Procedure 3 MMR EC(r, r0 , , i, j)
1: if j i > 0 then
2:
k = d(i + j)/2e
3:
(r, r0 ) = MMR EC(r, r0 , , i, k 1)
4:
(r, r0 ) = MMR EC(r, r0 , , k, j)
5:
(r, r0 ) = M ALLOWS M ERGE(r, r0 , , i, k, j)
6:
for ` = i ! j do r` = r`0
7: return (r, r0 )
Procedure 4 M ALLOWS M ERGE(r, r0 , , i, k, j)
1: ` = i, `0 = k
2: for q = i ! j do
3:
if (` < k)&(`0  j) then
4:
repeat
5:
Observe o = I{r` < r`0 }
6:
pb`,`0 = r
pb`,`0 + o, n`,`0 = n`,`0 + 1
7:

8:
9:
10:
11:
12:
13:
14:
15:
16:
17:
18:

c`,`0 =

1
2n`,`0

log

4n2`,`0 CM

with CM = dM log2 M 0.91392 · M + 1e
until 1/2 2
/ [b
p`,`0 c`,`0 , pb`,`0 + c`,`0 ]
if 1/2 < pb`,`0 c`,`0 then
rq0 = r` , ` = ` + 1
else
rq0 = r`0 , `0 = `0 + 1

else
if (` < k) then
rq0 = r` , ` = ` + 1
else
rq0 = r`0 , `0 = `0 + 1

19: return (r, r0 )

Theorem 5. Assume the Mallows model with parameters
and e
r as an underlying ranking distribution. Then, for any
0 < < 1, M ALLOWS MPR outputs the most probable
ranking with probability at least 1
, and the number of
pairwise comparison taken by the algorithm is
✓
◆
M log2 M
M log2 M
O
log
⇢2
⇢
where ⇢ = 11+ .
Proof. We adapted the two-way top-down merge sort algorithm whose worst case performance is upper bounded
by CM = dM log2 M 0.91392 · M + 1e (Theorem 1,
Flajolet & Golin (1994)). Analogously to the proof of
Theorem
4, by setting the confidence interval ci,j to
q
1/2ni,j log(n2i,j 4CM / ), it holds that for any pairs of

items i and j, pi,j 2 [b
pi,j
ci,j , pbi,j + ci,j ] for every
time step with probability at least 1
/CM . According
to Corollary 3, pi,j > 1/2 implies rei < rej , and pi,j < 1/2
implies rei > rej , in addition, at most CM distinct pairs of

Preference-Based Rank Elicitation using Statistical Models

1
pbi,j + ci,j
|
{z

items are compared at most, therefore the algorithm outputs
the most probable ranking with probability at least 1
.
Analogously to the proof of Theorem 4, the number of pairwise comparisons required by the M ALLOWS MPR procedure to assure 1/2⇣2
/ [b
pi,j ci,j , pb⌘
i,j + ci,j ] for a pair of
items i and j is O

1
⇢2

log

M log2 M
⇢

. Moreover, the worst

case performance of merge sort is O(M log2 M ), which
completes the proof.
In principle, sorting algorithms other than merge sort could
be applied, too. For example, we put the implementation of
the popular quick sort algorithm, called M ALLOWS Q UICK,
in the supplementary material (see Appendix B), although
its worst case complexity is not as good as the one of
merge sort (O(M 2 ) instead of O(M log M )). Provided
knowledge about how much the distribution of the number of pairwise comparisons concentrates around its mean
for fixed M , one could also make use of the expected performance of sorting algorithms to prove PAC sample complexity bounds (like Theorem 5). As far as we know, however, there is no concentration result for its average performance with a fixed M .4 For M ALLOWS Q UICK, we
can⇣ therefore only
⌘ prove a sample complexity bound of
M2
M2
O ⇢2 log ⇢ . In Appendix E.1, we empirically compared M ALLOWS Q UICK with M ALLOWS MPR in terms of
sample complexity.
Remark 6. The leading factor of sample complexity of
M ALLOWS M ERGE differs from the one of M ALLOWS MPI
by a log factor. This was to be expected, and simply reflects
the difference in worst case complexity for finding the best
element in an array and sorting an array by using merge
sort algorithm.
6.3. Kullback-Leibler divergence (KLD)
In order to produce a model estimation that is close to the
true Mallows model in terms of KL divergence, the parameters and e
r must be estimated with an appropriate precision and confidence. First, by using M ALLOWS MPR (see
Algorithm 2), the center ranking e
r can be found with probability at least 1
. For the sake of simplicity, we subsequently assume that this has already been done (actually
with a corrected , as will be explained later).
Based on Corollary 3, we know that pi,j = 1+1 for a pair
of items i and j such that rei = rej + 1. Assume that we are
given an estimate pbi,j with a confidence interval ci,j such
that rei < M . Then,
1
pbi,j ci,j 
 pbi,j + ci,j
1+
implies the following confidence interval for :
4

Although results on rates of convergence for the distribution
of pairwise comparisons when M ! 1 are available (Fill &
Janson, 2002).

=

L

1
}



1
pbi,j
|

ci,j
{z

1
}

+ log

Z(
Z(

=

U

(3)

Next, we upper-bound the KL divergence between two
Mallows distributions P(· | 2 , e
r) and P(· | 2 , e
r) sharing
the same center ranking:
KL(P( · |

r), P( · | 2 , e
r))
1, e
M (M

2



1)

1

log

2

2)

(4)

1)

Since the derivation of this result is fairly technical, it is
deferred to the supplementary material (see Appendix C).
Equipped with a confidence interval [ L , U ] for according to (3), we can upper-bound KL(P(· | , e
r), P(· | b, e
r))
for any b 2 [ L , U ] thanks to (4). Thus, with high probability, we have
KL(P(· | , e
r), P(· | b, e
r))


M (M
2

1)



M (M
2

1)

(5)

log
log

b

+ log

U

Z( b)
Z( )

+ log

L

Z(
Z(

U)
L)

,

because Z(.) is a monotone function. Based on (5), we
can empirically test whether the confidence bound for is
tight enough, such that any value in [ L , U ] will define a
distribution that is close to the true one (for this, we have
to be aware of the center ranking with probability at least
1
/2).
Algorithm 5 M ALLOWS KLD( , ✏)
1: b
r =M ALLOWS MPR( /2)
2: Pick a random pair of indices i and j for which rbi < M
and rbi = rbj + 1
3: repeat
4:
Observe o = I{ri < rj }
5:
pbi,j = r
pbi,j + o, ni,j = ni,j + 1
6:
7:
8:

8n2i,j
1
2ni,j log
1
1, U = pbi,j 1 ci,j
L = p
bi,j +ci,j
U)
until M (M2 1) log UL + log Z(
Z( L ) < ✏

ci,j =

9: return b
r and any b 2 [

L,

1

U]

Our implementation is shown in Algorithm 5. In a first step,
it identifies the center ranking using M ALLOWS MPR with
probability at least 1
/2. Then, it gradually estimates
and terminates if the stopping condition based on (5) is satisfied. The sample complexity of M ALLOWS KLD can be
analyzed in the same way as for M ALLOWS MPI and M AL LOWS MPR. Due to space limitations, the proof is deferred
to the supplementary material (see Appendix D).

Preference-Based Rank Elicitation using Statistical Models

where ⇢ =

1
1+

D(✏) =

and

6( + 1)2

0

@1

exp

⇣

2
✏
M (M

1)

⌘

+1

1

A .

Remark 8. The factor 1/D(✏)2 in the sample complexity
bound of M ALLOWS KLD grows fast with M . Therefore
this algorithm is practical only for small M (< 10). It is an
interesting open question whether the KLD problem can be
solved in a more efficient way for Mallows.

7. Experiments
The experimental studies presented in this section are
mainly aimed at showing advantages of our approach in
situations where its model assumptions are indeed valid.
To this end, we work with synthetic data. Yet, experiments
with real data are presented in the supplementary material.
Doignon et al. (2004) introduced an efficient technique for
sampling from the Mallows distribution. Based on Theorem 2, however, one can readily calculate the pairwise
marginals for given parameters and e
r. Therefore, sampling the pairwise comparisons for a particular pair of objects i and j is equivalent to sampling a Bernoulli distribution with parameter g(e
ri , rej , ).
7.1. The most preferred item (MPI)
We compared our M ALLOWS MPI algorithm with other
preference-based algorithms applicable in our setting,
namely I NTERLEAVED F ILTER (IF) introduced by Yue
et al. (2012) and B EAT T HE M EAN (BTM) by Yue &
Joachims (2011)5 . While both algorithms follow a successive elimination strategy and discard items one by one, they
differ with regard to the sampling strategy they follow.
Since the time horizon must be given in advance for IF, we
run it with T 2 {100, 1000, 5000, 10000}, subsequently
5

The most naive solution would be to run the S UCCE algorithm (Even-Dar et al., 2002) with
Yi,1 , . . . , Yi,M as arms for some randomly selected i, where
Yi,j = I{ri < rj , where r ⇠ P (.| , re)}. The problem with this
approach is that by selecting i such that rei = M , the gap between
the mean of the best and second best arm is very small (namely
pM,1 pM,2  (2(M 1) M 1 )/(1 + ) based on Corollary
3). Therefore, the sample complexity of S UCCESIVE E LIMINA TION becomes huge.
SIVE E LIMINATION

referred to as IF(T ). The BTM algorithm can be accommodated into our setup as is (see Algorithm 3 in (Yue &
Joachims, 2011)).
We compared the algorithms in terms of their empirical
sample complexity (the number of pairwise comparison until termination). In each experiment, the center ranking
of the Mallows model was selected uniformly at random
(since Mallows is invariant with respect to the center ranking, the complexity of the task is always the same). Moreover, we varied the parameter between 0.05 and 0.8. In
Figure 2, the sample complexity of the algorithms is plotted
against the parameter . As expected, the higher the value
of , the more difficult the task. As can be seen from the
plot, the complexity of M ALLOWS MPI is an order of magnitude smaller than for the other methods. The empirical
accuracy (defined to be 1 in a single run if the most preferred object was found, and 0 otherwise) was significantly
bigger than 1
throughout.
The above experiment was conducted with M = 10 items.
However, quite similar results are obtained for other values
of M . The corresponding plots are shown in the supplementary material (see Appendix E).

M = 10

N umb er of pai rwi se compari sons

Theorem 7. Assume that the ranking distribution is Mallows with parameters and e
r. Then, for any ✏ > 0 and
0 < < 1, M ALLOWS KLD returns parameter estimates b
r
and b for which KL(P(· | , e
r), P(· | b, b
r)) < ✏, and the
number of pairwise comparisons requested by the algorithm is
✓
◆
M log2 M
M log2 M
1
1
O
log
+
log
,
⇢2
⇢
D(✏)2
D(✏)

5

10

4

10

3

10

2

10

0

Mal l owsMPI
BTM
IF(100)
IF(1000)
IF(5000)
IF(10000)

0.2
0.4
0.6
0.8
φ = {0.05, 0.1, 0.3, 0.5, 0.7.0.8}

1

Figure 2. The sample complexity for M = 10, = 0.05 and
different values of the parameter . The results are averaged over
100 repetition.

7.2. The most probable ranking (MPR)
Cheng et al. (2009) introduced a parameter estimation
method for the Mallows model based on the maximum
likelihood (ML) principle. Since this method can handle
incomplete rankings, it is also able to deal with pairwise
comparisons as a special case. Therefore, we decided to
use this method as a baseline.
We generated datasets of various size, consisting of only
pairwise comparisons produced by a Mallows model. More
specifically, we first generated random rankings according
to Mallows (with fixed and center ranking selected uniformly at random) and then took the order of the two items

Preference-Based Rank Elicitation using Statistical Models

8. Conclusion and future work

1

Accuracy

0.8
0.6
0.4

φ
φ
φ
φ

0.2

=
=
=
=

0.1
0.3
0.5
0.7

0 2
4
10
10
Num. of pairwise comparisons
(a) M = 10.

1

Accuracy

0.8
0.6
0.4

φ
φ
φ
φ

0.2

=
=
=
=

0.1
0.3
0.5
0.7

0 3
4
5
10
10
10
Num. of pairwise comparisons
(b) M = 20.
Figure 3. The accuracy of the ML estimator versus the number
of pairwise comparisons for various parameters . The horizontal dashed lines show the empirical sample complexity of M AL LOWS MPR for
= 0.05. The results are averaged over 100
repetitions.

that were selected uniformly from [M ]. We defined the
accuracy of an estimate to be 1 if the center ranking was
found, and 0 otherwise.
The solid lines in Figure 3 plot the accuracy against the
sample size (namely the number n of pairwise comparisons) for different values
2 {0.1, 0.3, 0.5, 0.7}. We
also run our M ALLOWS MPR algorithm and determined the
number of pairwise comparisons it takes until it terminates.
The horizontal dashed lines in Figure 3 show the empirical sample complexity achieved by M ALLOWS MPR for
various . In accordance with Theorem 5, the accuracy of
M ALLOWS MPR was always significantly higher than 1
(close to 1).
As can be seen, M ALLOWS MPR outperforms the ML estimator for smaller , in the sense of achieving the required
accuracy of 1
, whereas the accuracy of ML is still below 1
for the same sample complexity. Only for larger
, the ML approach does not need as many pairwise comparisons as M ALLOWS MPR to achieve an accuracy higher
than 1 . For M = 20, the advantage of M ALLOWS MPR
is even more pronounced (see Figure 3(b)).

The framework of rank elicitation introduced and analyzed
in this paper differs from existing ones in several respects.
In particular, sample information is provided in the form
of pairwise preferences (instead of individual evaluations),
an assumption that is motivated by practical applications.
Moreover, we assume a data generating process in the form
of a probability distribution on total orders. This assumptions has (at least) two advantages. First, since there is a
well-defined “ground truth”, it suggests clear targets to be
estimated and learning problems to be tackled, like those
considered in this paper (MPI, MPR, KLD). Second, exploiting the properties of models such as Mallows, it is
possible to devise algorithms that are more efficient than
general purpose solutions.
Of course, this last point requires the model assumptions to
hold in practice, at least approximately. This is similar to
methods in parametric statistics, which are more efficient
than non-parametric methods provided their assumptions
are valid. An important topic of future work, therefore, is
to devise a (Kolmogorov-Smirnov type) hypothesis test for
deciding, based on data in the form of pairwise comparisons, whether the underlying distribution could indeed be
Mallows. Although this is a challenging problem, it is arguably simpler than testing the validity of strong stochastic
transitivity and stochastic triangle inequality as required by
methods such as IF and BTM.
Apart from that, there is a number of interesting variants of our setup. First, ranking models other than Mallows can be used, notably the Plackett-Luce model (Plackett, 1975; Luce, 1959), which has already been used for
other machine learning problems, too (Cheng et al., 2010;
Guiver & Snelson, 2009); since this model is less restrictive
than Mallows, sampling algorithms and complexity analysis will probably become more difficult. Second, going
beyond pairwise comparisons, one may envision a setting
in which the learner is allowed to query arbitrary subsets
of items (perhaps at a size-dependent cost) and receive the
top-ranked item as feedback.

Acknowledgments
This work was supported by the German Research Foundation (DFG) as part of the Priority Programme 1527, and
by the European Union and the European Social Fund
through project FuturICT.hu (grant no.: TAMOP-4.2.2.C11/1/KONV-2012-0013).

References
Braverman, M. and Mossel, E. Noisy sorting without resampling. In Proceedings of the nineteenth annual ACM-

Preference-Based Rank Elicitation using Statistical Models

SIAM Symposium on Discrete algorithms, pp. 268–276,
2008.
Bubeck, S., Munos, R., and Stoltz, G. Pure exploration
in multi-armed bandits problems. In Proceedings of
the 20th ALT, ALT’09, pp. 23–37, Berlin, Heidelberg,
2009. Springer-Verlag. ISBN 3-642-04413-1, 978-3642-04413-7.
Bubeck, S., Wang, T., and Viswanathan, N. Multiple identifications in multi-armed bandits. In Proceedings of The
30th ICML, pp. 258–265, 2013.
Busa-Fekete, R., Szörényi, B., Weng, P., Cheng, W., and
Hüllermeier, E. Top-k selection based on adaptive sampling of noisy preferences. In Proceedings of the 30th
ICML, JMLR W&CP, volume 28, 2013.
Cappé, O., Garivier, A., Maillard, O.-A., Munos, R., and
Stoltz, G. Kullback-Leibler upper confidence bounds for
optimal sequential allocation. Submitted to the Annals of
Statistics, 2012.
Chen, X., Bennett, P. N, Collins-Thompson, K., and
Horvitz, E. Pairwise ranking aggregation in a crowdsourced setting. In Proceedings of the sixth ACM international conference on Web search and data mining, pp.
193–202, 2013.
Cheng, W., Hühn, J., and Hüllermeier, E. Decision tree and
instance-based learning for label ranking. In Proceedings of the 26th International Conference on Machine
Learning, pp. 161–168, 2009.
Cheng, W., Dembczynski, K., and Hüllermeier, E. Label
ranking methods based on the plackett-luce model. In
27th ICML, pp. 215–222, 2010.
Doignon, J., Pekeč, A., and Regenwetter, M. The repeated insertion model for rankings: Missing link between two subset choice models. Psychometrika, 69(1):
33–54, 2004.
Even-Dar, E., Mannor, S., and Mansour, Y. PAC bounds
for multi-armed bandit and markov decision processes.
In Proceedings of the 15th COLT, pp. 255–270, 2002.
Fill, J. A. and Janson, S. Quicksort asymptotics. Journal
of Algorithms, 44(1):4 – 28, 2002.
Flajolet, P. and Golin, M. J. Mellin transforms and asymptotics: The mergesort recurrence. Acta Inf., 31(7):673–
696, 1994.
Fligner, M. A. and Verducci, J. S. Distance based ranking
models. Journal of the Royal Statistical Society. Series
B (Methodological), 48(3):359–369, 1986.

Gabillon, V., Ghavamzadeh, M., Lazaric, A., and Bubeck,
S. Multi-bandit best arm identification. In Advances in
NIPS 24, pp. 2222–2230, 2011.
Guiver, J. and Snelson, E. Bayesian inference for plackettluce ranking models. In Proceedings of the 26th ICML,
pp. 377–384, 2009.
Guo, S., Sanner, S., Graepel, T., and Buntine, W. Scorebased bayesian skill learning. In European Conference
on Machine Learning, pp. 1–16, September 2012.
Hoeffding, W. Probability inequalities for sums of bounded
random variables. Journal of the American Statistical
Association, 58:13–30, 1963.
Jamieson, K.G. and Nowak, R.D. Active ranking using
pairwise comparisons. In Advances in Neural Information Processing Systems 24, pp. 2240–2248, 2011.
Lu, T. and Boutilier, C. Learning mallows models with
pairwise preferences. In Proceedings of the 28th International Conference on Machine Learning, pp. 145–152,
2011.
Luce, R. D. Individual choice behavior: A theoretical analysis. Wiley, 1959.
Mallows, C. Non-null ranking models. Biometrika, 44(1):
114–130, 1957.
Marden, John I. Analyzing and Modeling Rank Data.
Chapman & Hall, 1995.
Plackett, R. The analysis of permutations. Applied Statistics, 24:193–202, 1975.
Urvoy, T., Clerot, F., Féraud, R., and Naamane, S. Generic
exploration and k-armed voting bandits. In Proceedings
of the 30th ICML, JMLR W&CP, volume 28, pp. 91–99,
2013.
Yue, Y., Broder, J., Kleinberg, R., and Joachims, T. The
k-armed dueling bandits problem. Journal of Computer
and System Sciences, 78(5):1538–1556, 2012.
Yue, Yisong and Joachims, Thorsten. Beat the mean bandit.
In Proceedings of the ICML, pp. 241–248, 2011.

