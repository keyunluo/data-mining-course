An Adaptive Accelerated Proximal Gradient Method and its Homotopy
Continuation for Sparse Optimization

Qihang Lin
The University of Iowa, Iowa City, IA 52245 USA

QIHANG - LIN @ UIOWA . EDU

Lin Xiao
Microsoft Research, Redmond, WA 98052 USA

Abstract
We first propose an adaptive accelerated proximal gradient (APG) method for minimizing
strongly convex composite functions with unknown convexity parameters. This method incorporates a restarting scheme to automatically estimate the strong convexity parameter and
achieves a nearly optimal iteration complexity. Then we consider the ℓ1 -regularized leastsquares (ℓ1 -LS) problem in the high-dimensional
setting. Although such an objective function
is not strongly convex, it has restricted strong
convexity over sparse vectors. We exploit this
property by combining the adaptive APG method
with a homotopy continuation scheme, which
generates a sparse solution path towards optimality. This method obtains a global linear rate of
convergence and its overall iteration complexity
has a weaker dependency on the restricted condition number than previous work.

1. Introduction
We consider first-order methods for minimizing composite
objective functions, i.e., the problem of
n
o
φ(x)
,
f
(x)
+
Ψ(x)
,
(1)
minimize
n
x∈R

where f (x) and Ψ(x) are lower-semicontinuous, proper
convex functions (Rockafellar, 1970, Section 7). We assume that f is differentiable on an open set containing
dom Ψ and its gradient ∇f is Lipschitz continuous on
dom Ψ, i.e., there exists a constant Lf such that
k∇f (x) − ∇f (y)k2 ≤ Lf kx − yk2, ∀ x, y ∈ dom Ψ. (2)
Proceedings of the 31 st International Conference on Machine
Learning, Beijing, China, 2014. JMLR: W&CP volume 32. Copyright 2014 by the author(s).

LIN . XIAO @ MICROSOFT. EDU

We also assume Ψ(x) is simple (Nesterov, 2013), meaning
that for any y ∈ dom Ψ, the following auxiliary problem
can be solved efficiently or in closed-form:

L
2
TL (y) = arg min ∇f (y) x + kx − yk2 + Ψ(x) .
2
x
(3)
This is the case, e.g., when Ψ(x) = λkxk1 for any λ > 0,
or Ψ(x) is the indicator function of a closed convex set that
admits an easy projection mapping.


T

The so-called proximal gradient (PG) method simply uses (3) as its update rule: x(k+1) = TL (x(k) ), for k =
0, 1, 2, . . ., where L is set to Lf or determined by a linear search procedure. The iteration complexity for the PG
method is O(Lf /ǫ) (Nesterov, 2004; 2013), which means, to obtain an ǫ-optimal solution (whose objective value is
within ǫ of the optimum), the PG method needsp
O(Lf /ǫ)

iterations. A far better iteration complexity, O Lf /ǫ ,
can be obtained by accelerated proximal gradient (APG)
methods (Nesterov, 2013; Beck & Teboulle, 2009; Tseng,
2008).
The iteration complexities above imply that both PG and
APG methods have a sublinear convergence rate. However,
if f is strongly convex, i.e., there exists a constant µf > 0
(the convexity parameter) such that
f (x) ≥ f (y) + h∇f (y), x − yi +

µf
kx − yk22 ,
2

(4)

for all x, y ∈ dom Ψ, then both PG and APG methods will achieve a linear convergence rate with the iteration
√
complexities being O(κf log(1/ǫ)) and O( κf log(1/ǫ))
(Nesterov, 2004; 2013), respectively. Here, κf = Lf /µf
is called condition number of the function f . Since κf is
typically a large number, the iteration complexity of the
APG methods can be significantly better than that of the
PG method for ill-conditioned problems. However, in order to obtain this better complexity, the APG methods need
to use the convexity parameter µf , or a lower bound of it,

An Adaptive APG method and its Homotopy Continuation for Sparse Optimization

explicitly in their updates. In many applications, an effective lower bound of µf can be hard to estimate.
To address this problem, our first contribution in this paper is an adaptive APG method for solving problem (1)
when f is strongly convex but µf is unknown. This method
incorporates a restart scheme that can automatically estian iteration complexity of
mate µf on the fly and achieves

√
O κf log κf · log(1/ǫ) .

Even if f is not strongly convex (µf = 0), problem (1) may
have special structure that may still allow the development
of first-order methods with linear convergence. This is the
case for the ℓ1 -regularized least-squares (ℓ1 -LS) problem,
defined as
minimize
x

φλ (x) ,

1
kAx − bk22 + λkxk1 ,
2

(5)

where A ∈ Rm×n and b ∈ Rm are the problem data, and
λ > 0 is a regularization parameter. The problem has important applications in machine learning, signal processing, and statistics; see, e.g., Tibshirani (1996); Chen et al.
(1998); Bruckstein et al. (2009). We are especially interested in solving this problem in the high-dimensional case
(m < n) and when the solution, denoted as x⋆ (λ), is sparse.
In terms of the general model in (1), we have f (x) =
(1/2)kAx − bk22 and Ψ(x) = λkxk1 . Here f (x) has a
constant Hessian ∇2 f (x) = AT A, and we have Lf =
ρmax (AT A) and µf = ρmin (AT A) where ρmax (·) and
ρmin (·) denote the largest and smallest eigenvalues, respectively, of a symmetric matrix. Under the assumption
m < n, the matrix AT A is singular, hence µf = 0 (i.e., f is
not strongly convex). Therefore, we only expect sublinear
convergence rates (at least globally) when using first-order
optimization methods.
Nevertheless, even in the case of m < n, when the solution x⋆ (λ) is sparse, the PG method often exhibits fast
convergence when it gets close to the optimal solution. Indeed, local linear convergence can be established for the
PG method provided that the active submatrix (columns
of A corresponding to the nonzero entries of the sparse iterates) is well conditioned (Luo & Tseng, 1992; Hale et al.,
2008; Bredies & Lorenz, 2008). To explain this more formally, we define the restricted eigenvalues of A at the sparsity level s as
 T T

x A Ax
ρ+ (A, s) = sup
: x 6= 0, kxk0 ≤ s ,
xT x
 T T

x A Ax
ρ− (A, s) = inf
: x 6= 0, kxk0 ≤ s ,
xT x
(6)
where s is a positive integer and kxk0 denotes the number
of nonzero entries of a vector x ∈ Rn . From the above

definitions, we have
µf ≤ ρ− (A, s) ≤ ρ+ (A, s) ≤ Lf ,

∀ s > 0.

As discussed before, we have µf = 0 for m < n. But it is
still possible that ρ− (A, s) > 0 holds for some s < m.
In this case, we say that the matrix A satisfies the restricted eigenvalue condition at the sparsity level s. Let
supp(x) = {j : xj 6= 0}, and assume that x, y ∈ Rn
satisfy |supp(x) ∪ supp(y)| ≤ s. Then it can be shown
(Xiao & Zhang, 2013, Lemma 3) that
f (x) ≥ f (y) + h∇f (y), x − yi +

ρ− (A, s)
kx − yk22 .
2

The above inequality gives the notion of restricted strong
convexity (cf. strong convexity defined in (4)). Intuitively, if
the iterates of the PG method become sparse and their supports do not fluctuate much from each other, then restricted
strong convexity leads to (local) linear convergence. This
is exactly what happens when the PG method speeds up
while getting close to the optimal solution.
Moreover, such a local linear convergence can be exploited
by a homotopy continuation strategy to obtain much faster
global convergence (Hale et al., 2008; Wright et al., 2009;
Xiao & Zhang, 2013). The basic idea is to solve the ℓ1 -LS
problem (5) with a large value of λ first, and then gradually decreases the value of λ until the target regularization is reached. For each value of λ, Xiao & Zhang (2013)
employ the PG method to solve (5) up to an adequate precision, and then use the resulting approximate solution to
warm start the PG method for (5) with the next value of λ.
It is shown (Xiao & Zhang, 2013) that under suitable assumptions for sparse recovery (mainly the restricted eigenvalue condition), an appropriate homotopy strategy can ensure all iterates of the PG method be sparse, hence linear
convergence at each stage can be established. As a result,
the overall iteration complexity of such a proximal-gradient

e κs log(1/ǫ) where κs dehomotopy (PGH) method is O
notes the restricted condition number at some sparsity level
s > 0, i.e.,
κs , κ(A, s) =

ρ+ (A, s)
,
ρ− (A, s)

e hides additional log(κs ) factors.
and the notation O(·)

(7)

Our second contribution in this paper is to show that, by
using the adaptive APG method developed in this paper in
a homotopy continuation scheme, we can further improve
the iteration complexity
for solving the ℓ1 -LS problem to

e √κs′ log(1/ǫ) , where the sparsity level s′ is slightly
O
larger than the one for the PGH method. We note that this
result is not a trivial extension from the convergence results
for the PGH method in Xiao & Zhang (2013). In particular,
the adaptive APG method does not have the property of

An Adaptive APG method and its Homotopy Continuation for Sparse Optimization

monotone decreasing, which was important for the analysis
of the PGH method. In order to overcome this difficulty, we
had to show a “non-blowout” property of our adaptive APG
method, which is interesting in its own right.

2. An APG method for minimizing strongly
convex functions
The main iteration of the APG method is based on a
composite gradient mapping introduced by Nesterov in
(Nesterov, 2013). For any fixed point y and a given constant L > 0, we define a local model of φ(x) around y
using a quadratic approximation of f but keeping Ψ intact:
ψL (y; x) = f (y) + ∇f (y)T (x − y) +

L
kx − yk22 + Ψ(x).
2

According to (3), we have
TL (y) = arg min ψL (y; x).

(8)

x

Then the composite gradient mapping of f at y is defined
as
gL (y) = L(y − TL (y)).
Following (Nesterov, 2013), we also define a local Lipschitz parameter
SL (y) =

k∇f (TL (y)) − ∇f (y)k2
.
kTL (y) − yk2

With the machinery of composite gradient mapping,
Nesterov (2004; 2013) developed several variants of the
APG methods. As discussed in the introduction, compared
to the PG method, the iteration complexity of the accelerated methods have a better dependence on the accuracy ǫ
when f is not strongly convex, and a better dependence on
the condition number κf when f is strongly convex. However, in contrast with the PG method, the better complexity
bound of the APG method in the strongly convex case relies on the knowledge of the convexity parameter µf , or an
effective lower bound of it, both of which can be hard to
obtain in practice.
To address this problem, we propose an adaptive APG
method that can be applied without knowing µf and still
obtains a linear convergence rate. To do so, we first present
an APG method in Algorithm 1 and in Algorithm 2 upon which the development of the adaptive APG method is
based. We name this method scAPG, where “sc” stands for
“strongly convex.”
To use this algorithm, we need to first choose an initial
optimistic estimate Lmin for the Lipschitz constant Lf :
0 < Lmin ≤ Lf , and two adjustment parameters γdec ≥ 1
and γinc > 1. In addition, this method requires an input parameter µ > 0, which is an estimate of the true convexity

Algorithm 1 {x̂, M̂ } ← scAPG(x(0) , L0 , µ, ǫ̂)
parameter: Lmin ≥ µ > 0, γdec ≥ 1
x(−1) ← x(0)
α−1 = 1
repeat
( for k = 0, 1, 2, . . .)
{x(k+1) , Mk , αk , g (k) , Sk }
← AccelLineSearch(x(k) , x(k−1) , Lk , µ, αk−1 )
Lk+1 ← max{Lmin, Mk /γdec }
until ω(x(k+1) ) ≤ ǫ̂
x̂ ← x(k+1)
M̂ ← Mk
Algorithm 2 {x(k+1) , Mk , αk , g (k) , Sk }
← AccelLineSearch(x(k) , x(k−1) , Lk , µ, αk−1 )
parameter: γinc > 1
L ← Lk /γinc
repeat
L ← Lγ
pinc
µ
αk ← L
k (1−αk−1 )
(k)
y (k) ← x(k) + α
− x(k−1) )
αk−1 (1+αk ) (x
x(k+1) ← TL (y (k) )
until φ(x(k+1) ) ≤ ψL (y (k) ; x(k+1) )
Mk ← L
g (k) ← Mk (y (k) − x(k+1) )
Sk ← SL (y (k) )

parameter µf . The scAPG method generates the following
three sequences:
r
µ
,
αk =
Mk
αk (1 − αk−1 ) (k)
y (k) = x(k) +
(x − x(k−1) ), (9)
αk−1 (1 + αk )
x(k+1) = TMk (y (k) ).
where Mk is found by the line-search procedure in Algorithm 2. The line search procedure starts with an estimated Lipschitz constant Lk , and increases its value by the
factor γinc until φ(x(k+1) ) ≤ ψMk (y (k) ; x(k+1) ), which
is sufficient to guarantee the convergence. In each iteration of Algorithm 1, the scAPG method tries to start the
line search at a smaller initial value by setting Lk+1 to be
min{Lmin , Mk /γdec }.
The scAPG algorithm can be considered as an extension
of the constant step scheme of Nesterov (2004) for minimizing composite functions
pin (1) when µf > 0. Indeed, if
Mk = Lf , we have αk = µf /Lf for all k and the update
for y (k) becomes
p
√
Lf − µf (k)
(k)
(k)
(k−1)
y =x +p
),
(10)
√ (x − x
L f + µf

An Adaptive APG method and its Homotopy Continuation for Sparse Optimization

which is the same as Algorithm (2.2.11) in Nesterov
(2004). Note that, one can not directly apply Algorithm 1
or Nesterov’s constant scheme to problems without strongly convexity by simply setting µ = 0.
Another difference from Nesterov’s method is that Algorithm 1 has an explicit stopping criterion based on the optimality residue ω(x(k+1) ), which is defined as
ω(x) , min k∇f (x) + ξk∞ ,
ξ∈∂Ψ(x)

(11)

where ∂Ψ(x) is the subdifferential of Ψ at x. The optimality residue measures how close a solution x is to the
optimality condition of (1) in the sense that ω(x⋆ ) = 0 if
and only if x⋆ is an solution to (1).
The following theorem states that, if µ is a positive lower
bound of µf , the scAPG converges geometrically and it has
√
an iteration complexity O( κf log(1/ǫ)).
Theorem 1. Suppose x⋆ is the optimal solution of (1) and
0 < µ ≤ µf . Then Algorithm 1 guarantees that
h
i
µ
φ(x(k) )−φ(x⋆ ) ≤ τk φ(x(0) )−φ(x⋆ )+ kx(0) −x⋆ k22 ,
2
(12)
i
h
µ
µ (k)
ky −x⋆ k22 ≤ τk φ(x(0) )−φ(x⋆ )+ kx(0) −x⋆ k22 ,
2
2
(13)
where
τk =
Moreover,



1
Qk−1

τk ≤

i=0

k = 0,
(1 − αi ) k ≥ 1.


r
1−

µ
Lf γinc

k

(14)

.

In addition to the geometric convergence of φ(x(k) ), this
theorem states that the auxiliary sequence y (k) also converges to the unique optimizer x⋆ with a geometric rate.
If µ does not satisfies µ ≤ µf , Theorem 1 may not hold
anymore. However, we can show that, in this case, Algorithm 1 will at least not blowout. More precisely, we show
that φ(x(k) ) ≤ φ(x(0) ) for all k ≥ 1 as long as µ ≤ Lmin,
which can be easily enforced in implementation of the algorithm.
Lemma 1. Suppose 0 < µ ≤ Lmin. Then Algorithm 1
guarantees that
φ(x(k+1) ) ≤ φ(x(0) ) −


Mk 
x(k+1) − x(k) 2 .
2
2

(15)

The non-blowout property is also critical in our analysis of
the homotopy method for solving the ℓ1 -LS problem presented in Section 4. In particular, it helps to show the sparsity of x(k) once x(0) is sparse. (All proofs for our results
are given in the supporting materials).

3. An Adaptive APG method with restart
When applied to strongly convex minimization problems, Nesterov’s constant step scheme (10) needs to use Lf
and µf as input parameters. Thanks to the line-search technique, Algorithm 1 does not need to know Lf explicitly.
However, it still need to know the convexity parameter µf
or a nontrivial lower bound of it in order to guarantee the
geometric convergence rate given in Theorem 1.
Compared to line search on Lf , estimating µf on-the-fly
is much more sophisticated. Nesterov (2013) suggested a
restarting scheme to estimate µf , which does not require
any lower bound of µf , and can be shown to have linear
convergence (up to a logarithmic factor). In this section,
we adapt his restarting technique to Algorithm 1 and obtain
an adaptive APG method. This method has the same convergence guarantees as Nesterov’s scheme. However, there
are two important differences, which we will elaborate on
at the end of this section.
We first describe the basic idea of the restart scheme for
estimating µf . Suppose we simply run Algorithm 1 with
a guessed value µ. At each iteration, we can check if the
inequality (12) is satisfied. If not, we must have µ > µf according to Theorem 1, and therefore need to reduce µ to ensure Algorithm 1 converges in a linear rate. However, (12)
can not be evaluated because x⋆ is unknown. Fortunately,
we can show in the following lemma that, if µ ≤ µf , the
norm of the gradient mapping g (k) = gMk (y (k) ) generated
in Algorithm 1 also decreases at a linear rate.
Lemma 2. Suppose 0 < µ ≤ µf and the initial point x(0) of Algorithm 1 is obtained by calling Algorithm 2, i.e., {x(0) , M−1 , α−1 , g (−1) , S−1 } ←
AccelLineSearch(xini , xini , Lini , µ, 1) with an arbitrary xini ∈ Rn and Lini ≥ Lmin . Then, for any k ≥ 0
in Algorithm 1, we have


√
gM (y (k) ) ≤ 2 2τk Mk
k
2
µ




S−1 
g (−1)  .
1+
2
M−1

(16)

Unlike the inequality (12), the inequality (16) can be
checked explicitly and, if it does not hold, we know µ > µf
and need to reduce µ.
Now we are ready to develop the adaptive APG method.
Let θsc ∈ (0, 1) be a desired shrinking factor. We check the
following two conditions at iteration k of Algorithm 1:




• A: gMk (y (k) )2 ≤ θsc g (−1) 2 .


√
S−1
≤ θsc .
• B: 2 2τk Mµk 1 + M
−1
If A is satisfied first, then we restart Algorithm 1 with
x(k+1) as the new starting point, set k = 0, and update
the three quantities g (−1) , S−1 and M−1 accordingly (again use α−1 = 1 and τ0 = 1). If A is not satisfied but

An Adaptive APG method and its Homotopy Continuation for Sparse Optimization

Algorithm 3 {x̂, M̂ , µ̂} ← AdapAPG (xini , Lini, µ0 , ǫ̂)
parameter:Lmin ≥ µ0 , γdec ≥ 1, γsc > 1, θsc ∈ (0, 1)
{x(0) , M−1 , α−1 , g (−1) , S−1 }
← AccelLineSearch(xini , xini , Lini , µ0 , 1)
(−1)
x
← x(0) , L−1 ← M−1 , µ ← µ0
α−1 ← 1, τ0 ← 1, k ← 0
repeat
{x(k+1) , Mk , αk , g (k) , Sk }
← AccelLineSearch(x(k) , x(k−1) , Lk , µ, αk−1 )
τk+1 ← τk (1 − αk )
if condition A holds, then
x(0) ← x(k+1) , x(−1) ← x(k+1) , L−1 = Mk
g (−1) ← g (k) , M−1 ← Mk , S−1 ← Sk
k←0
else
if condition B holds, then
µ ← µ/γsc
k←0
else
Lk+1 ← max{Lmin, Mk /γdec }
k ←k+1
end if
end if
until ω(x(k+1) ) ≤ ǫ̂
x̂ ← x(k+1) , M̂ ← Mk , µ̂ ← µ
B is satisfied first, it means that µ is larger than µf . In
fact, if µ ≤ µf , then combining condition B with Lemma
2 would imply that A also holds. This contradiction indicates that if B is satisfied first, we must have µ > µf , and
we have to reduce µ, say by a factor γsc > 1. In this case,
we restart Algorithm 1 still at x(0) and keep g (−1) , S−1
and M−1 unchanged. If neither conditions are satisfied, we
continue Algorithm 1 to its next iterate until the optimality
residue is smaller than a prescribed value. We present the
above procedure formally in Algorithm 3, whose iteration
complexity is given by the following theorem.
Theorem 2. Assume µ0 > µf > 0. Let g ini denotes the
first g (−1) computed by Algorithm 3, and NA and NB the
number of times that conditions
A and
 B are satisfied,
l
 ini rem
Lf
spectively. Then NA ≤ log1/θsc 1+ Lmin kg ǫ̂ k2
 m
l
and the total number of iteraand NB ≤ logγsc µµf0
tions is at most
(NA +NB )

s

Lf γinc γsc
ln 8
µf



Lf γinc γsc
µf θsc

2 

1+

Lf
Lmin

2 !

Note that if 0 < µ0 ≤ µf , then NB = 0.
The total number of iterations given in Theorem 2 is
asymptotically

 κ 


f
1/2
1/2
O κf log(κf ) log
+ O κf log(κf ) .
ǫ̂

.

This is the same complexity as for the restart scheme proposed by Nesterov for his accelerated dual gradient (ADG)
method (Nesterov, 2013, Section 5.3). Despite using a similar restart scheme and having the same complexity bound,
here we elaborate on some important differences between
our method from Nesterov’s.
• Nesterov’s ADG method exploits strong convexity
in Ψ instead of f . In order to use it under our assumption (that f is strongly convex), one needs to relocate
a strong convexity term from f to Ψ, and this relocated term needs to be adjusted whenever the estimate µ
is reduced.
• The restart scheme suggested in (Nesterov, 2013, Section 5.3) uses an extra line-search at each iteration,
solely for the purpose of computing the gradient mapping at x(k) . Our method directly use the gradient
mapping at y (k) , which does not require the extra linesearch, therefore the computational cost per iteration
is lower.

4. Homotopy continuation for sparse
optimization
In this section, we focus on the ℓ1 -regularized least-squares
(ℓ1 -LS) problem (5) in the high-dimensional setting i.e.,
with m < n. This is a special case of (1), but the function f (x) = (1/2)kAx − bk22 is not strongly convex when
m < n. Therefore, we only expect a sublinear convergence
rate (at least globally) when using traditional first-order optimization methods.
Nevertheless, as explained in the introduction, one can use
a homotopy continuation strategy to obtain much faster
convergence. The key idea is to solve the ℓ1 -LS problem with a large regularization parameter λ0 first, and then
gradually decreases the value of λ until the target regularization is reached. In Xiao & Zhang (2013), the PG method
is employed to solve the ℓ1 -LS problem for a fixed λ up to
an adequate precision, then the solution is used to warm
start the next stage. It was shown that under a restricted
eigenvalue condition on A, such a homotopy scheme guarantees that all iterates generated by the method are sufficiently sparse, which implies restricted strong convexity. As a result, a linear rate of convergence can be established for each homotopy stage, and the overall complexity
e s log(1/ǫ)) for certain sparsity level s, where κs is
is O(κ
the restricted condition number defined in (7), and the noe hides additional log(κs ) factors.
tation O(·)

In this section, we show that, by combining the adaptive
APG method (Algorithm 3) with the same homotopy continuation scheme, the iteration complexity for solving
 the
e √κs′ log(1/ǫ) , with
ℓ1 -LS problem can be improved to O
s′ slightly larger than s.

An Adaptive APG method and its Homotopy Continuation for Sparse Optimization

Algorithm 4 x̂(tgt) ← APGHomotopy(A, b, λtgt , ǫ, L0 , µ̂0 )
input:A ∈ Rm×n , b ∈ Rn , L0 ≥ µ̂0 > 0
parameter: η ∈ (0, 1), δ ∈ (0, 1)
initialize: λ0 ← kAT bk∞ , x̂(0) ← 0, M̂0 ← L0
N ← ⌊ln(λ0 /λtgt ) / ln(1/η)⌋
for K = 0, 1, 2, . . . , N − 1 do
λK+1 ← ηλK
ǫ̂K+1 ← δλK+1
{x̂(K+1) , M̂K+1 , µ̂K+1 }

← AdapAPG x̂(K) , M̂K , µ̂K , ǫ̂K+1 , λK+1
end for

{x̂(tgt) , M̂tgt } ← AdapAPG x̂(N ) , M̂N , µ̂N , ǫ, λtgt
return:x̂(tgt)
The APG homotopy method is presented in Algorithm 4.
To avoid confusion over the notations, we use λtgt to denote the target regularization parameter in (5). The method
starts with λ0 = kAT bk∞ which is the smallestλ such that
the ℓ1 -LS problem has the trivial solution 0 (by examining the optimality condition). This method has two extra
parameters η ∈ (0, 1) and δ ∈ (0, 1). They control the
algorithm as follows:
• The sequence of values for the regularization parameter is determined as λk = η k λ0 for k = 1, 2, . . ., until
the target value λtgt is reached.
• For each λk except λtgt , we solve problem (5) with
a proportional precision δλk . For the last stage with
λtgt , we solve to the absolute precision ǫ.
Our convergence analysis of the APG homotopy method
is based on the following assumption, which involves the
restricted eigenvalues defined in (6).
Assumption 1. Suppose b = Ax̄ + z. Let S̄ = supp(x̄)
and s̄ = |S̄|. There exist γ > 0 and δ ′ ∈ (0, 0.2] such that
γ > (1 + δ ′ )/(1 − δ ′ ) and


γ +1
kAT zk∞ .
λtgt ≥ 4 max 2,
(1 − δ ′ )γ − (1 + δ ′ )
(17)
Moreover, we assume there exists an integer s̃ such that
ρ− (A, s̄ + 3s̃) > 0 and

24 γinc ρ+ (A, s̄ + 3s̃) + 3ρ+ (A, s̃)
s̃ >
(1 + γ)s̄. (18)
ρ− (A, s̄ + s̃)
We also assume that Lmin ≤ γinc ρ+ (A, s̄ + 3s̃).
According to Zhang & Huang (2008), the above assumption implies kx⋆ (λ)S̄ c k0 ≤ s̃ whenever λ ≥ λtgt (here
S̄ c denotes the complement of the support set S̄). We
will show that by choosing the parameters η and δ in Algorithm 4 appropriately, these conditions also imply that

all iterates along the solution path are sparse. We note
that Assumption 1 is very similar to Assumption 1 in
Xiao & Zhang (2013) (they differ only in the constants in
the conditions), and interpretations and remarks made there
also apply here. More specifically,
• The existence of s̃ satisfying the conditions like (18)
is necessary and standard in sparse recovery analysis.
It is closely related to the restricted isometry property (RIP) of Candès & Tao (2005) which assumes that
there exist some s > 0, and ν ∈ (0, 1) such that
κ(A, s) < (1 + ν)/(1 − ν). See Xiao & Zhang (2013,
Section 3) for an example of sufficient RIP conditions.
Another sufficient condition is κ(A, s̄ + 3s̃) ≤ C s̃/s̄
with C = 1/(24(1 + γ)(3 + γinc )), which is more
accessible but can be very conservative.
• The RIP-like condition (18) can be much stronger than
the corresponding conditions established in the sparse
recovery literature (see, e.g., Li & Mo (2011) and references therein), which are only concerned about the
recovery property of the optimal solution x⋆ . In contrast, our condition needs to guarantee sparsity for all
iterates along the solution path, thus is “dynamic” in
nature. In particular, in addition to the matrix A, it
also depends on algorithmic parameters γinc , η and δ
(Theorem 4 will relate η to δ and δ ′ ).
Our first result below concerns the local linear convergence
of Algorithm 3 when applied to solve the ℓ1 -LS problem
at each stage of the homotopy method. Basically, if the
starting point x(0) is sparse and the optimality condition
is satisfied with adequate precision, then all iterates along
the solution path are sparse. This implies that restricted
strong convexity holds and Algorithm 3 actually has linear
convergence.
Theorem 3. Suppose Assumption 1 holds. If the initial
point xini in Algorithm 3 satisfies
 ini 
x c  ≤ s̃,
ω(xini ) ≤ δ ′ λ,
(19)
S̄ 0

 (k) 
then for all k ≥ 0, we have xS̄ c 0 ≤ s̃. Moreover, all the
three conclusions of Theorem 2 holds by replacing Lf and
µf with ρ+ (A, s̄ + 3s̃) and ρ− (A, s̄ + 3s̃), respectively.
Our next result gives the overall iteration complexity of the
APG homotopy method in Algorithm 4. To simplify presentation, we let s′ = s̄ + 3s̃, and use the following notations:
ρ+ (s′ )
ρ− (s′ )

= ρ+ (A, s̄ + 3s̃),
= ρ− (A, s̄ + 3s̃),

κs′

= κ(A, s̄ + 3s̃) =

ρ+ (A, s̄ + 3s̃)
.
ρ− (A, s̄ + 3s̃)

An Adaptive APG method and its Homotopy Continuation for Sparse Optimization

Roughly speaking, if the parameters δ and η are chosen
appropriately, then the total number of proximal-gradient
steps in Algorithm 4 for finding an ǫ-optimal solution is
e √κs′ ln(1/ǫ)).
O(
Theorem 4. Suppose Assumption 1 holds for some δ ′ ,
γ and s̃, and the parameters δ and η in Algorithm 4
1+δ
≤ η < 1. Let N =
are chosen such that 1+δ
′


−1
ln (λ0 /λtgt ) / ln η
as in the algorithm. Then:

1. Condition (19) holds for each call of Algorithm 3. For
K = 0, . . . , N − 1, the number of gradient steps in
each call of Algorithm 3 is no more than
 


C
√
κs′ γinc γsc
+D
log θ1
sc
δ
2 
2 !

ρ+ (s′ )
κs′ γinc γsc
1+
,
× ln 8
θsc
Lmin


p
(s′ )
where C = 1 + ρL+min
8γinc κs′ (1 + γ)s̄ and

l
m
0
D = logγsc ρ−µ̂(s
+1. It is independent of λK .
′)
(K)

2. For each K ≥ 0, the outer iterates x̂
φλtgt (x̂(K) ) − φ⋆λtgt ≤ η 2(K+1)

satisfies

4.5(1 + γ)λ20 s̄
,
ρ− (A, s̄ + s̃)

and the following bound on sparse recovery holds
√
2λ0 s̄
.
kx̂(K) − x̄k2 ≤ η K+1
ρ− (A, s̄ + s̃)
3. When Algorithm 4 terminates, the total number
of

e √κs′ ln(1/ǫ) , Moreproximal-gradient steps is O
over, the output x̂(tgt) satisfies
(tgt)

φλtgt (x̂

)−

φ⋆λtgt

4(1 + γ)λtgt s̄
ǫ.
≤
ρ− (A, s̄ + s̃)


e √κs′ ln(1/ǫ) complexity of the APG homotopy
Our O
e (κs ln(1/ǫ)) complexity of PGH
method improves the O
in the dependence on restricted condition number. We
note that this result is not a simple extension of those in
Xiao & Zhang (2013). In particular, the AdapAPG method
do not have the property of monotone decreasing, which
is key for establishing the complexity of the PGH method
in Xiao & Zhang (2013). Instead, our proof relies on the
non-blowout property (Lemma 1) to show that all iterates
along the solution path are sparse (details are given in the
supporting materials).

5. Numerical experiments
In this section, we present preliminary numerical experiments to support our theoretical analysis. In addition to

the PG and PGH methods (Xiao & Zhang, 2013), we also
compare our method with FISTA (Beck & Teboulle, 2009)
and its homotopy variants.
We implemented FISTA with an adaptive line-search over
the Lipschitz constant Lf , but it does not use or estimate the convexityp
parameter µf . Hence it has a sublinear complexity O( Lf /ǫ). In our experiments, we also compare with a simple restart scheme for FISTA suggested by O’Donoghue & Candès (2012): restart FISTA
whenever it exhibits nonmonotone behaviors. In particular, we implemented the gradient scheme: restart whenever gLk (y (k−1) )T (x(k) − x(k−1) ) > 0, where x(k) and
y (k) are two sequences generated by FISTA, similar to
those in our AdapAPG method. O’Donoghue & Candès
(2012) show that for strongly convex pure quadratic functions, this restart scheme
 leads to the optimal complexi√
ty of O κf ln(1/ǫ) . However, their analysis does not
hold for the ℓ1 -LS problem or other non-quadratic functions. We call this method FISTA+RS (meaning FISTA
with ReStart).
For our AdapAPG method (Algorithm 3) and APG homotopy method (Algorithm 4), we use the following values of
the parameters unless otherwise stated:
parameters
values

γinc
2

γdec
2

θsc
0.1

γsc
10

η
0.8

δ
0.2

To make the comparison clear, we generate an illconditioned random matrix A following the experimental
setup in Agarwal et al. (2012):
• Generate a random matrix B ∈ Rm×n with Bij following i.i.d. standard normal distribution.
• Choose ω ∈ [0, 1), and for i √= 1, . . . , m, generate
each row Ai,: by Ai,1 = Bi,1 / 1 − ω 2 and Ai,j+1 =
ωAi,j + Bi,j for j = 2, . . . , n.
T
It can be shown
i of E[A A] lie within
h that the eigenvalues
2
1
the interval (1+ω)
2 , (1−ω)2 (1+ω) . If ω = 0, then A = B

and the covariance matrix AT A is well conditioned. As
ω → 1, it becomes progressively more ill-conditioned. In
our experiments, we generate the matrix A with m = 1000,
n = 5000, and ω = 0.9.

Figure 1 shows the computational results of the four different methods: PG, FISTA, FISTA+RS, AdapAPG, and
their homotopy continuation variants (denoted by “+H”).
For each method, we initialize the Lipschitz constant by
L0 = maxj∈{1,...,n} kA:,j k22 . For the AdapAPG method,
we initialize the estimate of convexity parameter with two
different values, µ0 = L0 /10 and µ0 = L0 /100, and denote their results by AdapAPG1 and AdapAPG2, respectively.

An Adaptive APG method and its Homotopy Continuation for Sparse Optimization
6

10

5000

PG
FISTA
FISTA+RS
AdapAPG1
AdapAPG2

3

φ(x(k) ) − φ⋆

10

0

10

PG
FISTA
FISTA+RS
AdapAPG1
AdapAPG2

4000

5

10

4

10

kx(k) k0

3000

−3

10

AdapAPG1Mk
AdapAPG1 µ
AdapAPG2Mk
AdapAPG2 µ

3

10

2000
2

10

−6

10

1000

1

10

−9

10

0

500

1000

1500

2000

2500

0
0

3000

500

1000

k

2000

2500

3000

0

500

1000

k

6

10

1500

2000

2500

3000

k

5000

PG+H
FISTA+H
FISTA+RS+H
AdapAPG1+H
AdapAPG2+H

3

10

φ(x(k) ) − φ⋆

1500

0

10

PG+H
FISTA+H
FISTA+RS+H
AdapAPG1+H
AdapAPG2+H

4000

5

10

4

10

kx(k) k0

3000

−3

10

AdapAPG1+HMk
AdapAPG1+H µ
AdapAPG2+HMk
AdapAPG2+H µ

3

10

2000
2

10

−6

10

1000

1

10

−9

10

0

300

600

900

1200

1500

1800

0
0

300

600

k

900

1200

1500

k

1800

0

300

600

900

1200

1500

1800

k

Figure 1. Solving an ill-conditioned ℓ1 -LS problem. AdapAPG1 starts with µ0 = L0 /10, and AdapAPG2 uses µ0 = L0 /100.

From the top-left plot, we observe that PG, FISTA+RS and
AdapAPG all go through a slow plateau before reaching
fast local linear convergence. FISTA without restart does
not exploit the strong convexity and is the slowest asymptotically. Their homotopy continuation variants shown in
the bottom-left plot are much faster. Each vertical jump
on the curves indicates a change in the value of λ in the
homotopy scheme. In particular, it is clear that all except FISTA+H enter the final homotopy stage with fast linear convergence. In the final stage, the PGH method has
a rather flat slope due to ill-conditioning of the A matrix;
in contrast, FISTA+RS and AdapAPG have much steeper
slopes due to their accelerated schemes. AdapAPG1 started with a modest slope, and then detected that the µ value
was too big and reduced it by a factor of γsc = 10, which
resulted in the same fast convergence rate as AdapAPG2
after that.
The two plots in the middle show the sparsity of each iterates along the solution paths of these methods. We observe
that FISTA+RS and AdapAPG entered fast local convergence precisely when their iterates became sufficiently sparse, i.e., when kx(k) k0 became close to that of the final
solution. In contrast, the homotopy variants of these algorithms kept all iterates sparse by using the warm start
from previous stages. Therefore, restricted strong convexity hold along the whole path and linear convergence was
maintained at each stage.
The right column shows the automatic tuning of the lo-

cal Lipschitz constant Mk and the restricted convexity parameter µ. We see that the homotopy methods (bottomright plot) have relatively smaller Mk and larger µ than the
ones without using homotopy continuation (top-right plot),
which means much better conditioning along the iterates.
In particular, the homotopy AdapAPG method used fewer
number of reductions of µ, for both initializations of µ0 .
Overall, we observe that for the ℓ1 -LS problem, the homotopy continuation scheme is very effective in speeding up
different methods. Even with the overhead of estimating
and tuning µ, the AdapAPG+H method is close in efficiency compared with the FISTA+RS+H method. If the initial
guess of µ is not far off, then AdapAPG+H gives the best
performance. Finally, we note that unlike the AdapAPG
method, the optimal complexity of the FISTA+RS method
has not been established for minimizing general strongly
convex functions (including ℓ1 -LS). Although often quite
competitive in practice, we have observed non-quadratic
cases in which FISTA+RS demonstrate less desirable convergence (see examples in the supporting materials and also
comments in O’Donoghue & Candès (2012)).

References
Agarwal, A., Negahban, S. N., and Wainwright, M. J.
Fast global convergence of gradient methods for highdimensional statistical recovery. The Annals of Statistics,
40(5):2452–2482, 2012.

An Adaptive APG method and its Homotopy Continuation for Sparse Optimization

Beck, A. and Teboulle, M. A fast iterative shrinkagethreshold algorithm for linear inverse problems. SIAM
Journal on Imaging Sciences, 2(1):183–202, 2009.

Xiao, L. and Zhang, T. A proximal-gradient homotopy
method for the sparse least-squares problem. SIAM Journal on Optimization, 23(2):1062–1091, 2013.

Bredies, K. and Lorenz, D. A. Linear convergence of iterative soft-thresholding. Journal of Fourier Analysis and
Applications, 14:813–837, 2008.

Zhang, C.-H. and Huang, J. The sparsity and bias of the lasso selection in high–dimensional linear regression. Annals of Statistics, 36:1567–1594, 2008.

Bruckstein, A. M., Donoho, D. L., and Elad, M. From
sparse solutions of systems of equations to sparse modeling of signals and images. SIAM Review, 51(1):34–81,
2009.
Candès, E. J. and Tao, T. Decoding by linear programming. IEEE Transactions on Information Theory, 51
(12):4203–4215, December 2005.
Chen, S. S., Donoho, D. L., and Saunders, M. A. Atomic
decomposition by basis pursuit. SIAM Journal on Scientific Computing, 20(1):33–61, 1998.
Hale, E. T., Yin, W., and Zhang, Y. Fixed-point continuation for ℓ1 -minimization: Methodology and convergence. SIAM Journal on Optimization, 19(3):1107–
1130, 2008.
Li, S. and Mo, Q. New bounds on the restricted isometry constant δ2k . Applied and Computational Harmonic
Analysis, 31(3):460–468, 2011.
Luo, Z.-Q. and Tseng, P. On the linear convergence of descent methods for convex essentially smooth minimization. SIAM Journal on Control and Optimization, 30(2):
408–425, 1992.
Nesterov, Y. Introductory Lectures on Convex Optimization: A Basic Course. Kluwer, Boston, 2004.
Nesterov, Y. Gradient methods for minimizing composite
functions. Mathematical Programming, Series B, 140:
125–161, 2013.
O’Donoghue, B. and Candès, E. J. Adaptive restart for accelerated gradient schemes. Manuscript, April 2012. To
appear in Foundations of Computational Mathematics.
Rockafellar, R. T. Convex Analysis. Princeton University
Press, 1970.
Tibshirani, R. Regression shrinkage and selection via the
lasso. Journal of the Royal Statistical Society: Series B
(Statistical Methodology), 58:267–288, 1996.
Tseng, P. On accelerated proximal gradient methods for
convex-concave optimization. Manuscript, 2008.
Wright, S. J., Nowad, R. D., and Figueiredo, M. A. T. Sparse reconstruction by separable approximation. IEEE
Transactions on Signal Processing, 57(7):2479–2493,
July 2009.

