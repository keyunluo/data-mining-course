Estimating Diffusion Network Structures: Recovery Conditions,
Sample Complexity & Soft-thresholding Algorithm

Hadi Daneshmand1
Manuel Gomez-Rodriguez1
Le Song2
Bernhard Schölkopf1
1
MPI for Intelligent Systems and 2 Georgia Institute of Technology

Abstract
Information spreads across social and technological networks, but often the network structures are hidden from us and we only observe
the traces left by the diffusion processes, called
cascades. Can we recover the hidden network
structures from these observed cascades? What
kind of cascades and how many cascades do we
need? Are there some network structures which
are more difficult than others to recover? Can we
design efficient inference algorithms with provable guarantees?
Despite the increasing availability of cascadedata and methods for inferring networks from
these data, a thorough theoretical understanding
of the above questions remains largely unexplored in the literature. In this paper, we investigate the network structure inference problem
for a general family of continuous-time diffusion
models using an `1 -regularized likelihood maximization framework. We show that, as long
as the cascade sampling process satisfies a natural incoherence condition, our framework can
recover the correct network structure with high
probability if we observe O(d3 log N ) cascades,
where d is the maximum number of parents of a
node and N is the total number of nodes. Moreover, we develop a simple and efficient softthresholding inference algorithm, which we use
to illustrate the consequences of our theoretical results, and show that our framework outperforms other alternatives in practice.
Proceedings of the 31 st International Conference on Machine
Learning, Beijing, China, 2014. JMLR: W&CP volume 32. Copyright 2014 by the author(s).

HADI . DANESHMAND @ TUE . MPG . DE
MANUELGR @ TUE . MPG . DE
LSONG @ CC . GATECH . EDU
BS @ TUE . MPG . DE

1. Introduction
Diffusion of information, behaviors, diseases, or more generally, contagions can be naturally modeled as a stochastic process that occur over the edges of an underlying network (Rogers, 1995). In this scenario, we often observe
the temporal traces that the diffusion generates, called cascades, but the edges of the network that gave rise to the
diffusion remain unobservable (Adar & Adamic, 2005).
For example, blogs or media sites often publish a new piece
of information without explicitly citing their sources. Marketers may note when a social media user decides to adopt
a new behavior but cannot tell which neighbor in the social
network influenced them to do so. Epidemiologist observe
when a person gets sick but usually cannot tell who infected
her. In all these cases, given a set of cascades and a diffusion model, the network inference problem consists of inferring the edges (and model parameters) of the unobserved
underlying network (Gomez-Rodriguez, 2013).
The network inference problem has attracted significant
attention in recent years (Saito et al., 2009; GomezRodriguez et al., 2010; 2011; Snowsill et al., 2011; Du
et al., 2012a), since it is essential to reconstruct and predict the paths over which information can spread, and to
maximize sales of a product or stop infections. Most previous work has focused on developing network inference
algorithms and evaluating their performance experimentally on different synthetic and real networks, and a rigorous theoretical analysis of the problem has been missing.
However, such analysis is of outstanding interest since it
would enable us to answer many fundamental open questions. For example, which conditions are sufficient to guarantee that we can recover a network given a large number
of cascades? If these conditions are satisfied, how many
cascades are sufficient to infer the network with high probability? Until recently, there has been a paucity of work
along this direction (Netrapalli & Sanghavi, 2012; Abrahao et al., 2013) which provide only partial views of the
problem. None of them is able to identify the recovery

Estimating Diffusion Network Structures

condition relating to the interaction between the network
structure and the cascade sampling process, which we will
make precise in our paper.
Overview of results. We consider the network inference problem under the continuous-time diffusion model
recently introduced by Gomez-Rodriguez et al. (2011).
We identify a natural incoherence condition for such a
model which depends on both the network structure, the
diffusion parameters and the sampling process of the cascades. This condition captures the intuition that we can
recover the network structure if the co-occurrence of a
node and its non-parent nodes is small in the cascades.
Furthermore, we show that, if this condition holds for
the population case, we can recover the network structure using an `1 -regularized maximum likelihood estimator and O(d3 log N ) cascades, and the probability of success is approaching 1 in a rate exponential in the number of cascades. Importantly, if this condition also holds
for the finite sample case, then the guarantee can be improved to O(d2 log N ) cascades. Beyond theoretical results, we also propose a new, efficient and simple proximal gradient algorithm to solve the `1 -regularized maximum likelihood estimation. The algorithm is especially
well-suited for our problem since it is highly scalable and
naturally finds sparse estimators, as desired, by using softthresholding. Using this algorithm, we perform various
experiments illustrating the consequences of our theoretical results and demonstrating that it typically outperforms
other state-of-the-art algorithms.
Related work.
Netrapalli & Sanghavi (2012) propose a maximum likelihood network inference method
for a variation of the discrete-time independent cascade
model (Kempe et al., 2003) and show that, for general networks satisfying a correlation decay, the estimator recovers
the network structure given O(d2 log N ) cascades, and the
probability of success is approaching 1 in a rate exponential in the number of cascades. The rate they obtained is
on a par with our results. However, their discrete diffusion
model is less realistic in practice, and the correlation decay
condition is rather restricted: essentially, on average each
node can only infect one single node per cascade. Instead,
we use a general continuous-time diffusion model (GomezRodriguez et al., 2011), which has been extensively validated in real diffusion data and extended in various ways
by different authors (Wang et al., 2012; Du et al., 2012a;b).
Abrahao et al. (2013) propose a simple network inference
method, First-Edge, for a slightly different continuoustime independent cascade model (Gomez-Rodriguez et al.,
2010), and show that, for general networks, if the cascade
sources are chosen uniformly at random, the algorithm
needs O(N d log N ) cascades to recover the network structure and the probability of success is approaching 1 only in

Figure 1. The diffusion network structure (left) is unknown and
we only observe cascades, which are N -dimensional vectors
recording the times when nodes get infected by contagions that
spread (right). Cascade 1 is (ta , tb , tc , ∞, ∞, ∞), where ta <
tc < tb , and cascade 2 is (∞, tb , ∞, td , te , tf ), where tb < td <
te < tf . Each cascade contains a source node (dark red), drawn
from a source distribution P(s), as well as infected (light red) and
uninfected (white) nodes, and it provides information on black
and dark gray edges but does not on light gray edges.

a rate polynomial in the number of cascades. Additionally,
they study trees and bounded-degree networks and show
that, if the cascade sources are chosen uniformly at random,
the error decreases polynomially as long as O(log N ) and
Ω(d9 log2 d log N ) cascades are recorded respectively. In
our work, we show that, for general networks satisfying a
natural incoherence condition, our method outperforms the
First-Edge algorithm and the algorithm for bounded-degree
networks in terms of rate and sample complexity.
Gripon & Rabbat (2013) propose a network inference
method for unordered cascades, in which nodes that are
infected together in the same cascade are connected by a
path containing exactly the nodes in the trace, and give
necessary and sufficient conditions for network inference.
However, they consider a restrictive, unrealistic scenario in
which cascades are all three nodes long.

2. Continuous-Time Diffusion Model
In this section, we revisit the continuous-time generative
model for cascade data introduced by Gomez-Rodriguez
et al. (2011). The model associates each edge j → i with
a transmission function, f (ti |tj ; αji ) = f (ti − tj ; αji ), a
density over time parameterized by αji . This is in contrast to previous discrete-time models which associate each
edge with a fixed infection probability (Kempe et al., 2003).
Moreover, it also differs from discrete-time models in the
sense that events in a cascade are not generated iteratively
in rounds, but event timings are sampled directly from the
transmission functions in the continuous-time model.
2.1. Cascade generative process
Given a directed contact network, G = (V, E) with N
nodes, the process begins with an infected source node,
s, initially adopting certain contagion at time zero, which
we draw from a source distribution P(s). The contagion is
transmitted from the source along her out-going edges to
her direct neighbors. Each transmission through an edge
entails a random transmission time, τ = tj − tj , drawn
from an associated transmission function f (τ ; αji ). We
assume transmission times are independent, possibly dis-

Estimating Diffusion Network Structures
Table 1. Functions.

InfectedP
node (ti < T )
log h(t; α) + j:tj <ti y(ti |tj ; αj )
−y 0 (ti |tk ; αk )
00
−y (ti |tk ; αk ) − h(t; α)−1 H 00 (ti |tk ; αk )

Function
gi (t; α)
[∇y(t; α)]k
[D(t; α)]kk

tributed differently across edges, and, in some cases, can
be arbitrarily large, τ → ∞. Then, the infected neighbors
transmit the contagion to their respective neighbors, and
the process continues. We assume that an infected node remains infected for the entire diffusion process. Thus, if a
node i is infected by multiple neighbors, only the neighbor
that first infects node i will be the true parent. Figure 1
illustrates the process.
Observations from the model are recorded as a set C n
of cascades {t1 , . . . , tn }. Each cascade tc is an N dimensional vector tc := (tc1 , . . . , tcN ) recording when
nodes are infected, tck ∈ [0, T c ] ∪ {∞}. Symbol ∞ labels nodes that are not infected during observation window
[0, T c ] – it does not imply they are never infected. The
‘clock’ is reset to 0 at the start of each cascade. We assume
T c = T for all cascades; the results generalize trivially.
2.2. Likelihood of a cascade
Gomez-Rodriguez et al. (2011) showed that the likelihood
of a cascade t under the continuous-time independent cascade model is
Y Y
f (t; A) =
S(T |ti ; αim )×
ti ≤T tm >T

Y
k:tk <ti

S(ti |tk ; αki )

X

H(ti |tj ; αji ), (1)

j:tj <ti

where A = {αji } denotes the collection of parameters,
Rt
S(ti |tj ; αji ) = 1 − tji f (t|tj ; αji ) dt is the survival function and H(ti |tj ; αji ) = f (ti |tj ; αji )/S(ti |tj ; αji ) is the
hazard function. The survival terms in the first line account
for the probability that uninfected nodes survive to all infected nodes in the cascade up to T and the survival and
hazard terms in the second line account for the likelihood
of the infected nodes. Then, assuming cascades are sampled independently, the likelihood of a set of cascades is the
product of the likelihoods of individual cascades given by
Eq. 1. For notational simplicity, weP
define y(ti |tk ; αki ) :=
log S(ti |tk ; αki ), and h(t; αi ) := k:tk ≤ti H(ti |tk ; αki )
if ti ≤ T and 0 otherwise.

3. Network Inference Problem
Consider an instance of the continuous-time diffusion
∗
∗
∗
model defined above with acontact
	 network G = (V , E )
∗
and associated parameters αji . We denote the set of pa∗
rents of node i as N − (i) = {j ∈ V ∗ : αji
> 0} with
−
cardinality di = |N (i)| and the minimum positive trans∗
∗
mission rate as αmin,i
= minj : α∗ji >0 αji
. Let C n be a set
of n cascades sampled from the model, where the source

Uninfected
node (ti > T )
P
y(T
|tj ; αj )
j:tj <T
−y 0 (T |tk ; αk )
−y 00 (T |tk ; αk )

s ∈ V ∗ of each cascade is drawn from a source distribution
P(s). Then, the network inference problem consists of finding the directed edges and the associated parameters using
only the temporal information from the set of cascades C n .
This problem has been cast as a maximum likelihood estimation problem (Gomez-Rodriguez et al., 2011)
P
minimizeA − n1 c∈C n log f (tc ; A)
(2)
subject to
αji ≥ 0, i, j = 1, . . . , N, i 6= j,
where the inferred edges in the network correspond to those
pairs of nodes with non-zero parameters, i.e. α̂ji > 0.
In fact, the problem in Eq. 2 decouples into a set of independent smaller subproblems, one per node, where we
infer the parents of each node and the parameters associated with these incoming edges. Without loss of generality,
for a particular node i, we solve the problem
minimizeαi
subject to

`n (αi )
αji ≥ 0, j = 1, . . . , N, i 6= j,

(3)

where αi := {αji | j = 1, . . . , N,
P i 6= j} are the relevant
variables, and `n (αi ) = − n1 c∈C n gi (tc ; αi ) corresponds to the terms in Eq. 2 involving αi (also see Table 1
for the definition of g( · ; αi )). In this subproblem, we only
need to consider a super-neighborhood Vi = Ri ∪ Ui of
i, with cardinality pi = |Vi | ≤ N , where Ri is the set of
upstream nodes from which i is reachable, Ui is the set of
nodes which are reachable from at least one node j ∈ Ri .
Here, we consider a node i to be reachable from a node j
if and only if there is a directed path from j to i. We can
skip all nodes in V\Vi from our analysis because they will
never be infected in a cascade before i, and thus, the maximum likelihood estimation of the associated transmission
rates will always be zero (and correct).
Below, we show that, as n → ∞, the solution, α̂i , of the
problem in Eq. 3 is a consistent estimator of the true parameter α∗i . However, it is not clear whether it is possible to
recover the true network structure with this approach given
a finite amount of cascades and, if so, how many cascades
are needed. We will show that by adding an `1 -regularizer
to the objective function and solving instead the following
optimization problem
minimizeαi
subject to

`n (αi ) + λn ||αi ||1
αji ≥ 0, j = 1, . . . , N, i 6= j,

(4)

we can provide finite sample guarantees for recovering
the network structure (and parameters). Our analysis also
shows that by selecting an appropriate value for the regularization parameter λn , the solution of Eq. 4 successfully re-

Estimating Diffusion Network Structures

covers the network structure with probability approaching
1 exponentially fast in n.

• What kind of cascades are needed for the network
structure recovery?

In the remainder of the paper, we will focus on estimating
the parent nodes of a particular node i. For simplicity, we
will use α = αi , αj = αji , N − = N − (i), R = Ri ,
∗
∗
U = Ui , d = di , pi = p and αmin
= αmin,i
.

The answers to these questions are intertwined. The difficulty of finite-sample recovery depends crucially on an incoherence condition which is a function of both network
structure, parameters of the diffusion model and the cascade sampling process. Intuitively, the sources of the cascades in a diffusion network have to be chosen in such
a way that nodes without parent-child relation should cooccur less often compared to nodes with such relation.
Many commonly used diffusion models and network structures can be naturally made to satisfy this condition.

4. Consistency
Can we recover the hidden network structures from the observed cascades? The answer is yes. We will show this by
proving that the estimator provided by Eq. 3 is consistent,
meaning that as the number of cascades goes to infinity,
we can always recover the true network structure.
More specifically, Gomez-Rodriguez et al. (2011) showed
that the network inference problem defined in Eq. 3 is convex in α if the survival functions are log-concave and the
hazard functions are concave in α. Under these conditions,
the Hessian matrix, Qn = ∇2 `n (α), can be expressed as
the sum of a nonnegative diagonal matrix D n and the outer
product of a matrix X n (α) with itself, i.e.,
(5)
Qn = D n (α) + n1 X n (α)[X n (α)]> .
P
1
c
n
Here the diagonal matrix D (α) = n c D(t ; α) is a
sum over a set of diagonal matrices D(tc ; α), one for each
cascade c (see Table 1 for the definition of its entries); and
X n (α) is the Hazard matrix


X n (α) = X(t1 ; α) | X(t2 ; α) | . . . | X(tn ; α) , (6)
with each column X(tc ; α) := h(tc ; α)−1 ∇α h(tc ; α).
Intuitively, the Hessian matrix captures the co-occurrence
information of nodes in cascades. Then, we can prove
Theorem 1 If the source probability P(s) is strictly positive for all s ∈ R, then, the maximum likelihood estimator
α̂ given by the solution of Eq. 3 is consistent.

More specifically, we first place two conditions on the
Hessian of the population log-likelihood, Ec [`n (α)] =
Ec [log g(tc ; α)], where the expectation here is taken over
the distribution P(s) of the source nodes, and the density f (tc |s) of the cascades tc given a source node
s. In this case, we will further denote the Hessian of
Ec [log g(tc ; α)] evaluated at the true model parameter α∗
as Q∗ . Then, we place two conditions on the Lipschitz
continuity of X(tc ; α), and the boundedness of X(tc ; α∗ )
and ∇g(tc ; α∗ ) at the true model parameter α∗ . For
simplicity, we will denote the subset of indexes associated
to node i’s true parents as S, and its complement as S c .
Then, we use Q∗SS to denote the sub-matrix of Q∗ indexed
by S and α∗S the set of parameters indexed by S.
Condition 1 (Dependency condition): There exists constants Cmin > 0 and Cmax > 0 such that Λmin (Q∗SS ) ≥
Cmin and Λmax (Q∗SS ) ≤ Cmax where Λmin (·) and
Λmax (·) return the leading and the bottom eigenvalue of its
argument respectively. This assumption ensures that two
connected nodes co-occur reasonably frequently in the cascades but are not deterministically related.

Proof We check the three criteria for consistency: continuity, compactness and identification of the objective
function (Newey & McFadden, 1994). Continuity is obvious. For compactness, since L → −∞ for both αij → 0
and αij → ∞ for all i, j so we lose nothing imposing upper
and lower bounds thus restricting to a compact subset. For
the identification condition, α 6= α∗ ⇒ `n (α) 6= `n (α∗ ),
we use Lemma 9 and 10 (refer to Appendices A and B),
which establish that X n (α) has full row rank as n → ∞,
and hence Qn is positive definite.

Condition 2 (Incoherence condition): There exists ε ∈
−1
∗
∗
(0, 1] such that |||Q
P S c S (QSS ) |||∞ ≤ 1 − ε, where
|||A|||∞ = maxj k |Ajk |. This assumption captures the
intuition that, node i and any of its neighbors should get
infected together in a cascade more often than node i and
any of its non-neighbors.

5. Recovery Conditions

where k1 is some positive constant. As a consequence, the
spectral norm of the difference, n−1/2 (X n (β) − X n (α)),
is also bounded (refer to appendix C), i.e.,

|||n−1/2 X n (β) − X n (α) |||2 ≤ k1 kβ − αk2 . (7)

In this section, we will find a set of sufficient conditions on
the diffusion model and the cascade sampling process under which we can recover the network structure from finite
samples. These results allow us to address two questions:
• Are there some network structures which are more
difficult than others to recover?

Condition 3 (Lipschitz Continuity): For any feasible cascade tc , the Hazard vector X(tc ; α) is Lipschitz conti∗
nuous in the domain {α : αS ≥ αmin
/2},
kX(tc ; β) − X(tc ; α)k2 ≤ k1 kβ − αk2 ,

Furthermore, for any feasible cascade tc , D(α)jj is Lipschitz continuous for all j ∈ V,
|D(tc ; β)jj − D(tc ; α)jj | ≤ k2 kβ − αk2 ,

Estimating Diffusion Network Structures
0

where k2 is some positive constant.

41

5

52

Condition 4 (Boundedness): For any feasible cascade t ,
the absolute value of each entry in the gradient of its loglikelihood and in the Hazard vector, as evaluated at the true
model parameter α∗ , is bounded,
kX(tc ; α∗ )k∞ ≤ k4 ,

where k3 and k4 are positive constants. Then the absolute value of each entry in the Hessian matrix Q∗ , is also
bounded |||Q∗ |||∞ ≤ k5 .
Remarks for condition 1 As stated in Theorem 1, as long
as the source probability P(s) is strictly positive for all
s ∈ R, the maximum likelihood formulation is strictly convex and thus there exists Cmin > 0 such that Λmin (Q∗ ) ≥
Cmin . Moreover, condition 4 implies that there exists
Cmax > 0 such that Λmax (Q∗ ) ≤ Cmax .
Remarks for condition 2 The incoherence condition depends, in a non-trivial way, on the network structure, diffusion parameters, observation window and source node distribution. Here, we give some intuition by studying three
small canonical examples.
First, consider the chain graph in Fig. 2(a) and assume that
we would like to find the incoming edges to node 3 when
T → ∞. Then, it is easy to show that the incoherence
condition is satisfied if (P0 + P1 )/(P0 + P1 + P2 ) < 1 − ε
and P0 /(P0 + P1 + P2 ) < 1 − ε, where Pi denotes the probability of a node i to be the source of a cascade. Thus, for
example, if the source of each cascade is chosen uniformly
at random, the inequality is satisfied. Here, the incoherence
condition depends on the source node distribution.
Second, consider the directed tree in Fig. 2(b) and assume
that we would like to find the incoming edges to node 0
when T → ∞. Then, it can be shown that the incoherence
condition is satisfied as long as (1) P1 > 0, (2) (P2 > 0) or
(P5 > 0 and P6 > 0), and (3) P3 > 0. As in the chain, the
condition depends on the source node distribution.

2

12

6

2

20

3
0

3
7

03

0

62

23

3

1
10

1

c

k∇g(tc ; α∗ )k∞ ≤ k3 ,

4
01

2
02
01

1

30

73

0p

p

(a) Chain
(b) Tree
(c) Star
Figure 2. Example networks.

Remarks for conditions 3 and 4 Well-known pairwise
transmission likelihoods such as exponential, Rayleigh
or Power-law, used in previous work (Gomez-Rodriguez
et al., 2011), satisfy conditions 3 and 4.

6. Sample Complexity
How many cascades do we need to recover the network
structure? We will answer this question by providing a
sample complexity analysis of the optimization in Eq. 4.
Given the conditions spelled out in Section 5, we can show
that the number of cascades needs to grow polynomially in
the number of true parents of a node, and depends only logarithmically on the size of the network. This is a positive
result, since the network size can be very large (millions
or billions), but the number of parents of a node is usually
small compared the network size. More specifically, for
each individual node, we have the following result:
Theorem 2 Consider an instance of the continuous-time
∗
diffusion model with parameters αji
and associated edges
∗
E such that the model satisfies condition 1-4, and let C n
be a set of n cascades drawn from the model. Suppose that
the regularization parameter λn is selected to satisfy
r
2 − ε log p
.
(8)
λn ≥ 8k3
ε
n
Then, there exist positive constants L and K, independent
of (n, p, d), such that if
n > Ld3 log p,

(9)

then the following properties hold with probability at least
1 − 2 exp(−Kλ2n n):

Finally, consider the star graph in Fig. 2(c), with exponential edge transmission functions, and assume that we would
like to find the incoming edges to a leave node i when
T < ∞. Then, as long as the root node has a nonzero
probability P0 > 0 of being the source of a cascade, it
can be shown that
condition reduces to

 the incoherence
α0j
α0j
−(α0i +α0j )T
+ α0i +α
e
<
the inequalities 1 − α0i +α
0j
0j

1. For each node i ∈ V, the `1 -regularized network inference problem defined in Eq. 4 has a unique solution,
and so uniquely specifies a set of incoming edges of
node i.
2. For each node i ∈ V, the estimated set of incoming
edges does not include any false edges and include all
true edges.

1 − ε(1 + e−α0i T ), j = 1, . . . , p : j 6= i, which always
holds for some ε > 0. If T → ∞, then the condition holds
whenever ε < α0i /(α0i + maxj:j6=i α0j ). Here, the larger
the ratio maxj:j6=i α0j /α0i is, the smaller the maximum
value of ε for which the incoherence condition holds. To
summarize, as long as P0 > 0, there is always some ε > 0
for which the condition holds, and such ε value depends on
the time window and the parameters α0j .

Furthermore, suppose that the finite sample Hessian matrix
Qn satisfies conditions 1 and 2. Then there exist positive
constants L and K, independent of (n, p, d), such that the
sample complexity can be improved to n > Ld2 log p with
other statements remain the same.
Remarks. The above sample complexity is proved for each
node separately for recovering its parents. Using a union
bound, we can provide the sample complexity for recove-

Estimating Diffusion Network Structures

ring the entire network structure by joining these parentchild relations together. The resulting sample complexity
and the choice of regularization parameters will remain
largely the same, except that the dependency on d will
change from d to dmax (the largest number of parents of
a node), and the dependency on p will change from log p to
2 log N (N the number of nodes in the network).

maximum likelihood problem
α̂S =

argmin

{`n (α) + λn ||αS ||1 }.

(17)

(αS ,0),αS ≥0

Then, we set µ̂S ≥ 0 as the dual solution associated
to the primal solution α̂S .
2. We set α̂S c = 0, so that condition (11) holds, and
µ̂S c = µ∗S c ≥ 0, where µ∗ is the optimal dual solution to the following problem:

6.1. Outline of Analysis
The proof of Theorem 2 uses a technique called primal-dual
witness method, previously used in the proof of sparsistency of Lasso (Wainwright, 2009) and high-dimensional
Ising model selection (Ravikumar et al., 2010). To the
best of our knowledge, the present work is the first that
uses this technique in the context of diffusion network inference. First, we show that the optimal solutions to Eq. 4
have shared sparsity pattern, and under a further condition,
the solution is unique (proven in Appendix D):

Then, we only need to prove that, under the stated scalings
of (n, p, d), with high-probability, the remaining KKT conditions (10), (13), (15) and (16) hold.

Lemma 3 Suppose that there exists an optimal primaldual solution (α̂, µ̂) to Eq. 4 with an associated subgradient vector ẑ such that ||ẑS c ||∞ < 1. Then, any optimal
primal solution α̃ must have α̃S c = 0. Moreover, if the
Hessian sub-matrix QnSS is strictly positive definite, then α̂
is the unique optimal solution.

For simplicity of exposition, we first assume that the dependency and incoherence conditions hold for the finite sample
Hessian matrix Qn . Later we will lift this restriction and
only place these conditions on the population Hessian matrix Q∗ . The following lemma show that our constructed
solution satisfies condition (10):

Next, we will construct a primal-dual vector (α̂, µ̂) along
with an associated subgradient vector ẑ. Furthermore, we
will show that, under the assumptions on (n, p, d) stated
in Theorem 2, our constructed solution satisfies the KKT
optimality conditions to Eq. 4, and the primal vector has
the same sparsity pattern as the true parameter α∗ , i.e.,

Lemma 4 Under condition 3, if the regularization parameter is selected to satisfy
2
√
Cmin
√
,
dλn ≤
6(k2 + 2k1 Cmax )

α̂j > 0, ∀j :
α̂j = 0, ∀j :

αj∗
αj∗

> 0,

(10)

= 0.

(11)

Then, based on Lemma 3, we can deduce that the optimal
solution to Eq. 4 correctly recovers the sparsisty pattern of
α∗ , and thus the incoming edges to node i.
More specifically, we start by realizing that a primal-dual
optimal solution (α̃, µ̃) to Eq. 4 must satisfy the generalized Karush-Kuhn-Tucker (KKT) conditions (Boyd &
Vandenberghe, 2004):
0 ∈ ∇`n (α̃) + λn z̃ − µ̃,

(12)

µ̃j α̃j = 0,

(13)

µ̃j ≥ 0,

(14)

z̃j = 1, ∀α̃j > 0,

(15)

|z̃j | ≤ 1, ∀α̃j = 0,
(16)
P
c
log g(t ; α̃) and z̃ denotes the

where ` (α̃) = − n1 c∈C n
subgradient of the `1 -norm.
n

Suppose the true set of parent of node i is S. We construct
the primal-dual vector (α̂, µ̂) and the associated subgradient vector ẑ in the following way
1. We set α̂S as the solution to the partial regularized

minimizeα
subject to

Ec [`n (α)]
αj ≥ 0, j = 1, . . . , N, i 6= j.

(18)

Thus, our construction satisfies condition (14).
3. We obtain ẑS c from (12) by substituting in the constructed α̂, µ̂ and ẑS .

and k∇s `n (α∗ )k∞ ≤

λn
4 ,

then,
√
∗
kα̂S −
≤ 3 dλn /Cmin ≤ αmin
/2,
√
∗
as long as αmin ≥ 6 dλn /Cmin .
α∗S k2

Based on this lemma, we can then further show that the
KKT conditions (13) and (15) also hold for the constructed
solution. This can be trivially deduced from condition (10)
and (11), and our construction steps (a) and (b). Note that
it also implies that µ̂S = µ∗S = 0, and hence µ̂ = µ∗ .
Proving condition (16) is more challenging. We first provide more details on how to construct ẑS c mentioned in
step (c). We start by using a Taylor expansion of Eq. 12,
Qn (α̂ − α∗ ) = −∇`n (α∗ ) − λn ẑ + µ̂ − Rn ,

(19)

n

where R is a remainder term with its j-th entry

T
Rjn = ∇2 `n (ᾱj ) − ∇2 `n (α∗ ) j (α̂ − α∗ ),
and ᾱj = θj α̂ + (1 − θj )α∗ with θj ∈ [0, 1] according
to the mean value theorem. Rewriting Eq. 19 using block
matrices
 n


QSS QnSS c
α̂S − α∗S
QnS c S QnS c S c
α̂Sc − α∗S c



 
  n
∇S `n (α∗ )
ẑS
µ̂S
RS
=−
− λn
+
−
∇S c `n (α∗ )
ẑS c
µ̂S c
RnS c

Estimating Diffusion Network Structures

and, after some algebraic manipulation, we have
n

∗

λẑS c = −∇S c ` (α ) + µ̂S c −

RnS c


− QnS c S (QnSS )−1 − ∇s `n (α∗ ) − λẑS + µ̂S − RnS .
Next, we upper bound kẑS c k∞ using the triangle inequality
kẑS c k∞

∗
n
∗
−1
n
≤ λ−1
n kµS c − ∇S c ` (α )k∞ + λn kRS c k∞

n
+kQnS c S (QnSS )−1 k∞ × 1 + λ−1
n kRS k∞

∗
n
∗
+λ−1
n kµS − ∇S ` (α )k∞ ,

and we want to prove that this upper bound is smaller than
1. This can be done with the help of the following two
lemmas (proven in Appendices F and G):
Lemma 5 Given ε ∈ (0, 1] from the incoherence condition, we have,


2−ε
n
∗
∗
−1
k∇` (α ) − µ k∞ ≥ 4 ε
P
λn
nλ2n ε2
≤ 2p exp(−
2 ),
32k32 (2 − ε)
2
which converges
q to zero at rate exp(−cλn n) as long as
log p
λn ≥ 8k3 2−ε
ε
n .

Lemma 6 Given ε ∈ (0, 1] from the incoherence condition, if conditions 3 and 4 holds, λn is selected to satisfy
ε
2
λn d ≤ Cmin
,
36K(2 − ε)
√
where K = k1 + k4 k1 + k12 + k1 Cmax , and
n
ε
k∇s `n (α∗ )k∞ ≤ λ4n , then, kRλnk∞ ≤ 4(2−ε)
, as long as
√
∗
αmin ≥ 6 dλn /Cmin .
Now, applying both lemmas and the incoherence condition
on the finite sample Hessian matrix Qn , we have
kẑS c k∞

n
≤ (1 − ε) + λ−1
n (2 − ε)kR k∞
∗
n
∗
+ λ−1
n (2 − ε)kµ − ∇` (α )k∞

≤ (1 − ε) + 0.25ε + 0.25ε = 1 − 0.5ε,
and thus condition (16) holds.
A possible choice of the regularization parameter λn and
cascade set size n such that the conditions of
pthe Lemmas 4-6 are satisfied is λn = 8k3 (2 − ε)ε−1 n−1 log p
−4 −4 2
ε d log p +
and n
>
2882 k32 (2 − ε)4 Cmin

2
−1
∗
48k3 (2 − ε)Cmin
(αmin
)−1 ε−1 d log p.
Last, we lift the dependency and incoherence conditions
imposed on the finite sample Hessian matrix Qn . We show
that if we only impose these conditions in the corresponding population matrix Q∗ , then they will also hold for Qn
with high probability (proven in Appendices H and I).
Lemma 7 If condition 1 holds for Q∗ , then, for any δ > 0,
δ2 n
P (Λmin (QnSS ) ≤ Cmin − δ) ≤ 2dB1 exp(−A1 2 ),
d

Algorithm 1 `1 -regularized network inference
Require: C n , λn , K, L
for all i ∈ V do
k=0
while k < K do

αk+1
= αki − L∇αi `n (αki ) − λn L +
i
k =k+1
end while
α̂i = αiK−1
end for
return {α̂i }i∈V
δ2 n
),
d2
where A1 , A2 , B1 and B2 are constants independent of
(n, p, d).
P (Λmax (QnSS ) ≥ Cmax + δ) ≤ 2dB2 exp(−A2

−1

Lemma 8 If |||Q∗S c S (Q∗SS )

|||∞ ≤ 1 − ε, then,

n
P kQnS c S (QnSS )−1 k∞ ≥ 1 − ε/2 ≤ p exp(−K 3 ),
d
where K is a constant independent of (n, p, d).
Note in this case the cascade set size need to increase to
n > Ld3 log p, where L is a sufficiently large positive constant independent of (n, p, d), for the error probabilities on
these last two lemmas to converge to zero.

7. Efficient soft-thresholding algorithm
Can we design efficient algorithms to solve Eq. (4) for network recovery? Here, we will design a proximal gradient algorithm which is well suited for solving non-smooth,
constrained, large-scale or high-dimensional convex optimization problems (Parikh & Boyd, 2013). Moreover, they
are easy to understand, derive, and implement. We first
rewrite Eq. 4 as an unconstrained optimization problem:
minimizeα

`n (α) + g(α),

where the non-smooth convex function g(α) = λn ||α||1
if α ≥ 0 and +∞ otherwise. Here, the general recipe
from Parikh & Boyd (2013) for designing proximal gradient algorithm can be applied directly.
Algorithm 1 summarizes the resulting algorithm. In each
iteration of the algorithm, we need to compute ∇`n (Table 1) and the proximal operator proxLk g (v), where Lk is
a step size that we can set to a constant value L or find using a simple line search (Beck & Teboulle, 2009). Using
Moreau’s decomposition and the conjugate function g ∗ , it
is easy to show that the proximal operator for our particular
function g(·) is a soft-thresholding operator, (v − λn Lk )+ ,
which leads to a sparse optimal solution α̂, as desired.

8. Experiments
In this section, we first illustrate some consequences of
Th. 2 by applying our algorithm to several types of networks, parameters (n, p, d), and regularization parameter

Estimating Diffusion Network Structures

0.4
p=6
p=26
p=40

0.2
0
0

0.5

1
β

1.5

2

(a) Super-neighborhood pi

0.8
0.6
Forest−Fire (Exp)
Forest−Fire (Pow)
Hierarchical (Exp)
Hierarchical (pow)

0.4
0.2
0

1
0.9

0.8

0.8

F1

0.6

1
0.9

10

20

30
K

40

50

60

(b) λn

F1

1
Success Probability

Success Probability

1
0.8

0.7

0.7
NetRate
Our method
First Edge

0.6
0.5
500

1000

1500
# cascades

2000

2500

(a) Kronecker hierarchical, P OW

NetRate
Our method
First Edge

0.6
0.5
500

1000

1500
# cascades

2000

2500

(b) Forest Fire, E XP

Figure 3. Success probability vs. # of cascades.

Figure 4. F1 -score vs. # of cascades.

λn . Then, we compare our algorithm to two different stateof-the-art algorithms: N ET R ATE (Gomez-Rodriguez et al.,
2011) and First-Edge (Abrahao et al., 2013).

p
factor of log(p)/n. Fig. 3(b) shows the success probability of our algorithm against different
scalings K of the
p
regularization parameter λn = K log(p)/n for different
types of networks using 150 cascades and T = 5. We find
that for sufficiently large λn , the success probability flattens, as expected from Th. 2. It flattens at values smaller
than one because we used a fixed number of cascades n,
which may not satisfy the conditions of Th. 2.

Experimental Setup We focus on synthetic networks that
mimic the structure of real-world diffusion networks –
in particular, social networks. We consider two models
of directed real-world social networks: the Forest Fire
model (Barabási & Albert, 1999) and the Kronecker Graph
model (Leskovec et al., 2010), and use simple pairwise
transmission models such as exponential, power-law or
Rayleigh. We use networks with 128 nodes and, for each
edge, we draw its associated transmission rate from a uniform distribution U (0.5, 1.5). We proceed as follows: we
generate a network G ∗ and transmission rates A∗ , simulate a set of cascades and, for each cascade, record the
node infection times. Then, given the infection times, we
infer a network Ĝ. Finally, when we illustrate the consequences of Th. 2, we evaluate the accuracy of the inferred
neighborhood of a node N̂ − (i) using probability of success P (Ê = E ∗ ), estimated by running our method of 100
independent cascade sets. When we compare our algorithm
to N ET R ATE and First-Edge, we use the F1 score, which is
defined as 2P R/(P + R), where precision (P) is the fraction of edges in the inferred network Ĝ present in the true
network G ∗ , and recall (R) is the fraction of edges of the
true network G ∗ present in the inferred network Ĝ.
Parameters (n, p, d) According to Th. 2, the number of
cascades that are necessary to successfully infer the incoming edges of a node will increase polynomially to the
node’s neighborhood size di and logarithmically to the
super-neighborhood size pi . Here, we infer the incoming
links of nodes of a hierarchical Kronecker network with the
same in-degree (di = 3) but different super-neighboorhod
set sizes pi under different scalings β of the number of cascades n = 10βd log p and choosepthe regularization parameter λn as a constant factor of log(p)/n as suggested
by Th. 2. We used an exponential transmission model and
T = 5. Fig. 3(a) summarizes the results, where, for each
node, we used cascades which contained at least one node
in the super-neighborhood of the node under study. As predicted by Th. 2, very different p values lead to curves that
line up with each other quite well.
Regularization parameter λn Our main result indicates
that the regularization parameter λn should be a constant

Comparison with N ET R ATE and First-Edge Fig. 4 compares the accuracy of our algorithm, N ET R ATE and FirstEdge against number of cascades for a hierarchical Kronecker network with power-law transmission model and a
Forest Fire network with exponential transmission model,
with an observation window T = 10. Our method outperforms both competitive methods, finding especially striking
the competitive advantage with respect to First-Edge.

9. Conclusions
Our work contributes towards establishing a theoretical
foundation of the network inference problem. Specifically,
we proposed a `1 -regularized maximum likelihood inference method for a well-known continuous-time diffusion
model and an efficient proximal gradient implementation,
and then show that, for general networks satisfying a natural incoherence condition, our method achieves an exponentially decreasing error with respect to the number of
cascades as long as O(d3 log N ) cascades are recorded.
Our work also opens many interesting venues for future
work. For example, given a fixed number of cascades, it
would be useful to provide confidence intervals on the inferred edges. Further, given a network with arbitrary pairwise likelihoods, it is an open question whether there always exists at least one source distribution and time window value such that the incoherence condition is satisfied,
and, and if so, whether there is an efficient way of finding
this distribution. Finally, our work assumes all activations
occur due to network diffusion and are recorded. It would
be interesting to allow for missing observations, as well as
activations due to exogenous factors.

Acknowledgement
This research was supported in part by NSF/NIH BIGDATA 1R01GM108341-01, NSF IIS1116886, and a
Raytheon faculty fellowship to L. Song.

Estimating Diffusion Network Structures

References
Abrahao, B., Chierichetti, F., Kleinberg, R., and Panconesi,
A. Trace complexity of network inference. In KDD,
2013.
Adar, E. and Adamic, L. A. Tracking Information Epidemics in Blogspace. In Web Intelligence, pp. 207–214,
2005.
Barabási, A.-L. and Albert, R. Emergence of Scaling in
Random Networks. Science, 286:509–512, 1999.
Beck, A. and Teboulle, M. Gradient-based algorithms with
applications to signal recovery. Convex Optimization in
Signal Processing and Communications, 2009.
Boyd, S. P. and Vandenberghe, L. Convex optimization.
Cambridge University Press, 2004.
Du, N., Song, L., Smola, A., and Yuan, M. Learning Networks of Heterogeneous Influence. In NIPS, 2012a.
Du, N., Song, L., Woo, H., and Zha, H. Uncover TopicSensitive Information Diffusion Networks. In AISTATS,
2012b.
Gomez-Rodriguez, M., Leskovec, J., and Krause, A. Inferring Networks of Diffusion and Influence. In KDD,
2010.
Gomez-Rodriguez, M., Balduzzi, D., and Schölkopf, B.
Uncovering the Temporal Dynamics of Diffusion Networks. In ICML, 2011.
Gomez-Rodriguez, Manuel. Ph.D. Thesis. Stanford University & MPI for Intelligent Systems, 2013.
Gripon, V. and Rabbat, M. Reconstructing a graph from
path traces. arXiv:1301.6916, 2013.
Kempe, D., Kleinberg, J. M., and Tardos, É. Maximizing
the Spread of Influence Through a Social Network. In
KDD, 2003.
Leskovec, J., Chakrabarti, D., Kleinberg, J., Faloutsos, C.,
and Ghahramani, Z. Kronecker Graphs: An Approach to
Modeling Networks. JMLR, 2010.
Mangasarian, O. L. A simple characterization of solution
sets of convex programs. Operations Research Letters,
7(1):21–26, 1988.
Netrapalli, P. and Sanghavi, S. Finding the Graph of Epidemic Cascades. In ACM SIGMETRICS, 2012.
Newey, W. K. and McFadden, D. L. Large Sample Estimation and Hypothesis Testing. In Handbook of Econometrics, volume 4, pp. 2111–2245. 1994.

Parikh, Neal and Boyd, Stephen. Proximal algorithms.
Foundations and Trends in Optimization, 2013.
Ravikumar, P., Wainwright, M. J., and Lafferty, J. D. Highdimensional ising model selection using l1-regularized
logistic regression. The Annals of Statistics, 38(3):1287–
1319, 2010.
Rogers, E. M. Diffusion of Innovations. Free Press, New
York, fourth edition, 1995.
Saito, K., Kimura, M., Ohara, K., and Motoda, H. Learning
continuous-time information diffusion model for social
behavioral data analysis. Advances in Machine Learning, pp. 322–337, 2009.
Snowsill, T., Fyson, N., Bie, T. De, and Cristianini, N. Refining Causality: Who Copied From Whom? In KDD,
2011.
Wainwright, M. J. Sharp thresholds for high-dimensional
and noisy sparsity recovery using l1-constrained
quadratic programming (lasso). IEEE Transactions on
Information Theory, 55(5):2183–2202, 2009.
Wang, L., Ermon, S., and Hopcroft, J. Feature-enhanced
probabilistic models for diffusion network inference. In
ECML PKDD, 2012.

