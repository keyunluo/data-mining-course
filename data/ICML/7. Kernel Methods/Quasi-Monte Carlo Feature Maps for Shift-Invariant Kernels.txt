Quasi-Monte Carlo Feature Maps for Shift-Invariant Kernels

Jiyan Yang1
ICME, Stanford University, Stanford, CA 94305.

JIYAN @ STANFORD . EDU

Vikas Sindhwani1
IBM T. J. Watson Research Center, Yorktown Heights, NY 10598.

VSINDHW @ US . IBM . COM

Haim Avron1
IBM T. J. Watson Research Center, Yorktown Heights, NY 10598.

HAIMAV @ US . IBM . COM

Michael W. Mahoney
MMAHONEY @ ICSI . BERKELEY. EDU
International Computer Science Institute and Dept. of Statistics, University of California at Berkeley, Berkeley, CA 94720

Abstract
We consider the problem of improving the efficiency of randomized Fourier feature maps
to accelerate training and testing speed of kernel methods on large datasets. These approximate feature maps arise as Monte Carlo approximations to integral representations of shiftinvariant kernel functions (e.g., Gaussian kernel). In this paper, we propose to use QuasiMonte Carlo (QMC) approximations instead
where the relevant integrands are evaluated on a
low-discrepancy sequence of points as opposed
to random point sets as in the Monte Carlo approach. We derive a new discrepancy measure
called box discrepancy based on theoretical characterizations of the integration error with respect
to a given sequence. We then propose to learn
QMC sequences adapted to our setting based on
explicit box discrepancy minimization. Our theoretical analyses are complemented with empirical results that demonstrate the effectiveness of
classical and adaptive QMC techniques for this
problem.

1. Introduction
Kernel methods (SchoÃàlkopf & Smola, 2002; Wahba, 1990;
Cucker & Smale, 2001) offer a comprehensive collection
of non-parametric modeling techniques for a wide range
of problems in machine learning. Let k : X √ó X ‚Üí R de1

Equal contributors

Proceedings of the 31 st International Conference on Machine
Learning, Beijing, China, 2014. JMLR: W&CP volume 32. Copyright 2014 by the author(s).

note a kernel function defined on an input domain X ‚äÇ Rd .
The kernel k may be (non-uniquely) associated with an embedding of the input space into a high-dimensional Hilbert
space H (with inner product h¬∑, ¬∑iH ) via a feature map,
Œ® : X 7‚Üí H, such that k(x, z) = hŒ®(x), Œ®(z)iH . Standard regularized linear statistical models in H then provide
non-linear inference with respect to the original input representation. The algorithmic basis of such constructions are
classical Representer Theorems (Wahba, 1990; SchoÃàlkopf
& Smola, 2002) that guarantee finite-dimensional solutions
of associated optimization problems, even if H is infinitedimensional.
However, there is a steep price of these elegant generalizations in terms of scalability. Consider, for example,
least squares regression given n data points {(xi , yi )}ni=1
and assume that n  d. The complexity of linear regression training using standard least squares solvers is
O(nd2 ), with O(nd) memory requirements, and O(d) prediction speed on a test point. Its kernel-based nonlinear
counterpart, however, requires solving a linear system involving the Gram matrix of the kernel function (defined by
Kij = k(xi , xj )). In general, this incurs O(n3 + n2 d)
complexity for training, O(n2 ) memory requirements, and
O(nd) prediction time for a single test point ‚Äì none of
which are particularly appealing in ‚ÄúBig Data‚Äù settings.
In this paper, we revisit the randomized construction of a
family of low-dimensional approximate feature maps proposed by Rahimi & Recht (2007) for scaling up kernel
methods. These randomized feature maps, Œ®ÃÇ : X 7‚Üí
Cs , provide low-distortion approximations for (complexvalued) kernel functions k : X √ó X ‚Üí C:
k(x, z) ‚âà hŒ®ÃÇ(x), Œ®ÃÇ(z)iCs

(1)

where Cs denotes the space of s-dimensional
Pscomplex
‚àó
numbers with the inner product, hŒ±, Œ≤iCs =
i=1 Œ±i Œ≤i ,

QMC Feature Maps for Shift-Invariant Kernels

with z ‚àó denoting the conjugate of the complex number
z. Though Rahimi & Recht (2007) define real-valued
feature maps as well, our technical exposition is simplified by adopting the generality of complex-valued features. The approximation in (1) leads to scalable solutions, e.g., for regression we get back to O(ns2 ) training
and O(s + maptime) prediction speed where maptime is
the time to generate random features for a test input, with
O(ns) memory requirements. In particular, the approximation in (1) is valid for an important class of kernel functions which are shift-invariant. A kernel function k on Rd
is called shift-invariant if k(x, z) = g(x ‚àí z), for some
complex-valued positive definite function g on Rd . Positive definite functions are those that satisfy the property
that given any set of m points, x1 . . . xm ‚àà Rd , the m √ó m
matrix A defined by Aij = g(xi ‚àí xj ) is positive semidefinite.
The starting point of Rahimi & Recht (2007) is a celebrated
result that characterizes the class of positive definite functions:
Theorem 1 (Bochner (1933)). A complex-valued function
g : Rd 7‚Üí C is positive definite if and only if it is the Fourier
Transform of a finite non-negative Borel measure ¬µ on Rd ,
i.e.,
Z
T
g(x) = ¬µÃÇ(x) =
e‚àíix w d¬µ(w), ‚àÄx ‚àà Rd .
Rd

Without loss of generality, we assume henceforth that ¬µ(¬∑)
is a probability measure with associated probability density function p(¬∑). The above result implies that a scaled
shift-invariant kernel can therefore be put into one-to-one
correspondence with a density p such that,
Z
T
k(x, z) = g(x ‚àí z) =
e‚àíi(x‚àíz) w p(w)dw . (2)
Rd

For the most notable member of the shift-invariant family
kx‚àízk2
‚àí 2œÉ2 2

of kernels ‚Äì the Gaussian kernel: k(x, z) = e
associated density is again Gaussian, N (0, œÉ ‚àí2 Id ).

, the

Rd
s

1 X ‚àíi(x‚àíz)T ws
e
s j=1

= hŒ®ÃÇS (x), Œ®ÃÇS (z)iCs ,
through the feature map,
i
T
T
1 h
Œ®ÃÇS (x) = ‚àö e‚àíix w1 . . . e‚àíix ws ‚àà Cs .
s

We are now in a position to state the contributions of this
paper:
‚ó¶ We propose to use the low-discrepancy properties of
Quasi-Monte Carlo (QMC) sequences to reduce the integration error in approximations of the form (4). A selfcontained overview of Quasi-Monte Carlo techniques
for high-dimensional integration problems is provided in
Section 2. In Section 3, we describe how QMC techniques apply to our setting.
‚ó¶ We provide an average case theoretical analysis of the
integration error for any given sequence S (Section 4).
‚ó¶ This bound motivates an optimization problem over the
sequence S whose minimizer provides adaptive QMC
sequences fine tuned to our kernels (Section 5).
‚ó¶ Empirical results (Section 6) clearly demonstrate the
superiority of QMC techniques over the MC feature
maps (Rahimi & Recht, 2007), the correctness of our
theoretical analysis and the potential value of adaptive
QMC techniques for large-scale kernel methods.

2. Quasi-Monte Carlo Techniques: Overview
In this section we provide a self-contained overview of
Quasi-Monte Carlo (QMC). Due to space limitation we restrict our discussion to background that is necessary for understanding subsequent sections. We refer the interested
reader to the excellent reviews by Caflisch (1998) and Dick
et al. (2013) for more detailed exposition.
Consider the task of computing an approximation of the
following integral,
Z
Id [f ] =
f (x)dx .
[0,1]d

The integral representation of the kernel (2) may be approximated as follows:
Z
T
k(x, z) =
e‚àíi(x‚àíz) w p(w)dw
(3)
‚âà

The subscript S denotes dependence of the feature map
on the sequence S = {w1 , . . . , ws }. When elements of
the sequence are drawn from the distribution defined by
the density function p(¬∑), the approximation in (4) may be
viewed as a standard Monte Carlo (MC) approximation to
the integral representation of the kernel. This simple observation is our point of departure from the work of Rahimi &
Recht (2007).

(4)
(5)

(6)

One can observe that if Xd is a random variable uniformly
distributed over [0, 1]d then Id [f ] = E [f (Xd )]. An empirical approximation to the expected value can be computed
by drawing a random point set S = {w1 , . . . , ws } independently from [0, 1]d , and computing:
1 X
f (w) .
IS [f ] =
s
w‚ààS

This is the Monte Carlo (MC) method.
Define the integration error with respect to the point set S
as
S [f ] = |Id (f ) ‚àí IS (f )|.
(7)

QMC Feature Maps for Shift-Invariant Kernels

Theorem 2 (Koksma-Hlawka inequality). For any function f with bounded variation, and sequence S =
{w1 , . . . , ws }, the integration error is bounded above as
follows,
S [f ] ‚â§ D? (S)VHK [f ] .
(10)

Figure 1. Comparison of MC and QMC sequences.

When S is drawn randomly, the Central Limit Theorem
asserts that if s = |S| is large enough then S [f ] ‚âà
œÉ[f ]s‚àí1/2 ŒΩ where ŒΩ is a standard normal random variable,
and œÉ[f ] is the square-root of the variance of f ; that is,
Z
2
œÉ 2 [f ] =
(f (x) ‚àí Id (f )) dx .
(8)
[0,1]d

In other words, the root mean square error of the Monte
Carlo method is,

1/2
ES S [f ]2
= œÉ[f ]s‚àí1/2 .
(9)
Therefore, the Monte Carlo method converges at a rate of
O(s‚àí1/2 ).
The aim of QMC methods is to improve the convergence
rate by using a deterministic low-discrepancy sequence to
construct S, instead of randomly sampling points. The underlying intuition is illustrated in Figure 1, where we plot
a set of 1000 two-dimensional random points (left graph),
and a set of 1000 two-dimensional points from a quasirandom sequence (Halton sequence; right graph). In the
random sequence we see that there is an undesired clustering of points, and as a consequence empty spaces. Clusters add little to the approximation the integral in those regions, while in the empty spaces the integrand is not sampled. This lack of uniformity is due to the fact that Monte
Carlo samples are independent of each other. By carefully
designing a sequence of correlated points to avoid such
clustering effects, QMC attempts to avoid this phenomena,
and thus provide faster convergence to the integral. A typical QMC sequence has a hierarchical structure: the initial
points sample the integrand on a coarse scale while the latter points sample it more finely.
Informally, the integration error with respect to a sequence
depends on a measure of variation of the integrand f over
the integration domain, and a sequence-dependent term that
typically measures the discrepancy, or degree of departure
from uniformity, of the sequence S. For example, the expected Monte Carlo
‚àö integration error decouples into a variance term, and 1/ s as in (9). A remarkable and classical
result in QMC theory formalizes this intuition as follows.

where VHK is the variation of f in the sense of Hardy and
Krause (see Niederreiter (1992)) defined in terms of the following partial derivatives,



 ‚àÇf 
X Z



VHK [f ] =
 duI , (11)




‚àÇu
|I|
I
[0,1]
uj =1,j ‚ààI
/
I‚äÇ[d],I6=‚àÖ

and D? is the star discrepancy defined by
D? (S) = sup |disrS (x)| ,

(12)

x‚àà[0,1]d

where disrS is the local discrepancy function
|{i : wi ‚àà Jx }|
s
Qd
with Jx = [0, x1 ) √ó ¬∑ ¬∑ ¬∑ √ó [0, xd ) with Vol(Jx ) = j=1 xj .
disrS (x) = Vol(Jx ) ‚àí

An infinite sequence w1 , w2 , . . . is defined to be
a low-discrepancy sequence if, as a function of s,
D? ({w1 , . . . , ws }) = O((log s)d /s). It is conjectured that
this decay rate of discrepancy is in fact optimal. It is outside
the scope of this paper to describe these different constructions in detail. However we mention that notable members
are Halton sequences, Sobol‚Äô sequences, Faure sequences,
Niederreiter sequences, and more (see Dick et al. (2013),
Section 2).
The classical QMC theory, which is based on the KoksmaHlawka inequality and low discrepancy sequences, thus
d
achieves a convergence rate of O((log
‚àö s) /s). While this
is asymptotically superior to O(1/ s) for a fixed d, it requires s to be exponential in d for the improvement to manifest. As such, in the past QMC methods were dismissed as
unsuitable for very high-dimensional integration.
However, several authors noticed that QMC methods perform better than MC even for very high-dimensional integration (Sloan & Wozniakowski, 1998; Dick et al., 2013).
Contemporary QMC literature explains and expands on
these empirical observations, by leveraging the structure of
the space in which the integrand function lives, to derive
more refined bounds and discrepancy measures, even when
classical measures of variation such as (11) are unbounded.
This literature has evolved along at least two directions:
one, where worst-case analysis is provided under the assumption that the integrands live in a Reproducing Kernel Hilbert Space (RKHS) of sufficiently smooth and wellbehaved functions (see Dick et al. (2013), Section 3) and
second, where the analysis is done in terms of average-case

QMC Feature Maps for Shift-Invariant Kernels

error, under an assumed probability distribution over the integrands, instead of worst-case error (Wozniakowski, 1991;
Traub & Wozniakowski, 1994). We refrain from more details, as these are essentially the paths that the analysis in
Section 4 follows for our specific setting.

3. QMC Feature Maps: Our Algorithm
We assume that the density function in (2) can be written
Qd
as p(x) = j=1 pj (xj ), where pj (¬∑) is a univariate density
function. The density functions associated to many shiftinvariant kernels, e.g. Gaussian, Laplacian and Cauchy,
admit such a form.
The QMC method is generally applicable to integrals over a
unit cube. So typically integrals of the form (2) are handled
by first generating a discrepancy sequence t1 , . . . , ts ‚àà
[0, 1]d , and transformed it into a sequence w1 , . . . , ws in
Rd , instead of drawing the elements of the sequence from
p(¬∑) as in the MC method.
To convert (2) to an integral over the unit cube, a simple
change of variables suffices. For t ‚àà Rd , define

‚àí1
d
Œ¶‚àí1 (t) = Œ¶‚àí1
(13)
1 (t1 ), . . . , Œ¶d (td ) ‚àà R ,
where Œ¶j is the cumulative distribution function (CDF) of
pj , for j = 1, . . . , d. By setting w = Œ¶‚àí1 (t), (2) can be
equivalently written as
Z
Z
T
T ‚àí1
e‚àíi(x‚àíz) w p(w)dw =
e‚àíi(x‚àíz) Œ¶ (t) dt .
Rd

[0,1]d

(14)
d

Thus, a low discrepancy sequence t1 , . . . , ts ‚àà [0, 1] can
be transformed using wi = Œ¶‚àí1 (ti ), which is then plugged
into (6) to yield the QMC feature map. This simple procedure is summarized in Algorithm 1.
The main question is, of course, which sequence to use?
One natural choice is the classical low-discrepancy sequences (e.g. Halton, Sobol‚Äô). Implementations of these
sequences are provided by several scientific libraries (e.g.
MATLAB and the GNU Scientific Library), so using these
sequences is rather effortless. In Section 6 we give empirical evidence that these sequences produce better approximations to the kernel as compared to the MC approach
of Rahimi & Recht (2007).
However, classical analysis (e.g., using Koksma-Hlawka
inequality) is inapplicable as the variation of the integrand
T ‚àí1
e‚àíi(x‚àíz) Œ¶ (t) is not bounded. Therefore, in the next section we develop a new discrepancy measure, which we call
box discrepancy, that is specifically tuned for the problem
at hand. We show that the square of the box discrepancy is
equal to the expected integration error squared when x ‚àí z
is distributed uniformly. We give numerical evidence that
several popular low-(star)-discrepancy sequences tend to

Algorithm 1 Quasi-Random Fourier Features
1: Input: Shift-invariant kernel k, size s.
2: Output: Feature map Œ®ÃÇ(x) : Rd 7‚Üí Cs .
3: Find p, the inverse Fourier transform of k.
4: Generate a low discrepancy sequence t1 , . . . , ts .
‚àí1
5: Transform the
qsequence: wi = Œ¶ (ti ) by (13).
6: Set Œ®ÃÇ(x) =

1
s

h

e‚àíix

T

w1

, . . . , e‚àíix

T

ws

i

.

have smaller box discrepancy values than random (MC) sequences, explaining why QMC feature maps are more effective. We also propose an adaptive QMC scheme that is
based on minimizing the proposed box discrepancy measure.

4. Theoretical Analysis and Average Case
Error Bounds
The goal of this section is to develop a framework for analyzing the approximation quality of QMC feature maps
when used in (3)-(6). In particular, we derive a new discrepancy measure, box discrepancy, that characterizes integration error for the set of integrals defined with respect
to the underlying data domain. Proofs for all the assertions
can be found in supplementary material. Throughout this
section we use the convention that S = {w1 , . . . , ws }. We
also use the notation XÃÑ = {x ‚àí z | x, z ‚àà X }.
We start with the observation that the classical KoksmaHlawka inequality, cannot be immediately applied to the
most important cases in for our setting.
Qd
Proposition 3. For any p(x) = j=1 pj (xj ), where pj (¬∑)
is a univariate density function, define Œ¶‚àí1 (t) by (13). For
a fixed u ‚àà Rd , variation VHK [¬∑] (11) is unbounded for
T ‚àí1
fu (t) = e‚àíiu Œ¶ (t) , t ‚àà [0, 1]d .
Given a probability density function p(¬∑) and S, we define
the integration error S,p [f ] of a function f with respect to
p and the s samples as,

Z
s


1X


S,p [f ] = 
f (wi ) .
(15)
f (x)p(x)dx ‚àí

 Rd
s
i=1

Next, we note that if integrands belong to a Reproducing
Kernel Hilbert Space (RKHS), a worst-case integration error bound can be shown as below; see Cucker & Smale
(2001) for the definition of RKHS.
Proposition 4 (Integration Error in an RKHS). Let H
be a RKHS with kernel h(¬∑, ¬∑). Assume that Œ∫ =
supx‚ààRd h(x, x) < ‚àû. Then, for all f ‚àà H we have,
S,p [f ] ‚â§ kf kH Dh,p (S) ,
where

(16)

QMC Feature Maps for Shift-Invariant Kernels

Dh,p (S)2 =

Z

Z

Rd
s

2X
s
l=1

Rd

This naturally leads to the definition of the box discrepancy,
analogous to the star discrepancy described in Theorem 2.

h(œâ, œÜ)p(œâ)p(œÜ)dœâdœÜ ‚àí

Z
h(wl , œâ)p(œâ)dœâ +
Rd

s
s
1 XX
h(wl , wj ) . (17)
s2
j=1
l=1

For a vector b ‚àà Rd , let us define b = {u ‚àà Rd | |uj | ‚â§
bj }. If bj = supu‚ààXÃÑ |uj | then XÃÑ ‚äÇ b, so the set of
integrands
n
o
T
Fb = fu (x) = e‚àíiu x , u ‚àà b
(18)
is broader than the set of integrands we wish to approximate.
Now, consider the space of functions that admit an integral
representation over Fb of the form,
Z
T
f (x) =
fÀÜ(u)e‚àíiu x du where fÀÜ(u) ‚àà L2 (b) .
u‚ààb

(19)
This space is associated with bandlimited functions, i.e.,
functions with compactly-supported inverse Fourier transforms, which are of fundamental importance in the
Shannon-Nyquist sampling theory. Under a natural choice
of inner product, these spaces are called Paley-Wiener
spaces and they constitute an RKHS.
Proposition 5 (Kernel of Paley-Wiener RKHS (Berlinet
& Thomas-Agnan, 2004; Yao, 1967; Peloso, 2011)). By
P Wb , denote the space of functions which admit the representation in (19), with the inner product hf, giP Wb =
(2œÄ)2d hfÀÜ, gÃÇiL2 (b) . P Wb is an RKHS with kernel function,
d
Y
sin (bj (uj ‚àí vj ))
.
(20)
sincb (u, v) = œÄ ‚àíd
u j ‚àí vj
j=1
For notational convenience, in the above we define
sin(0)/0 to be 1. Furthermore, hf, giP Wb = hf, giL2 (b) .
For the kernel function described above, the discrepancy
measure Dh,S defined in Proposition 4 can be expressed
more explicitly.
Theorem 6 (Discrepancy in P Wb ). Suppose that p is a
probability density function, and that we can write p(x) =
Qd
j=1 pj (xj ) where each pj is a univariate probability density function. Let œïj be the characteristic function associated with pj . Then,
d Z bj
Y
Dsincb ,p (S)2 = (œÄ)‚àíd
|œïj (Œ≤)|2 dŒ≤ ‚àí
j=1

Dpb (S) = Dsincb ,p (S) .
For notational convenience, we generally omit the b from
Dpb (S) as long as it is clear from the context. The worsecase integration error bound for Paley-Wiener spaces is
stated in the following as a corollary of Theorem 4.
Corollary 8 (Integration Error in P Wb ). For f ‚àà P Wb
we have
S,p [f ] ‚â§ kf kP Wb Dp (S).
The integrands we are interested in (i.e. functions in Fb )
are not members of P Wb . However, their damped approxT
imations of the form fÀúu (x) = e‚àíiu x sinc(T x) are members of P Wb with kfÀúkP Wb = ‚àö1T . Hence, we expect Dp
to provide a discrepancy measure for integrating functions
in Fb .
More formally, the expected square error of an integrand
drawn from a uniform distribution over Fb is proportional
to the square discrepancy measure Dp (S). This result is
in the spirit of similar average case analysis in the QMC
literature (Wozniakowski, 1991; Traub & Wozniakowski,
1994).
Theorem 9 (Average Case Error).


(2œÄ)d
Ef ‚àºU (Fb ) S,p [f ]2 = Qd
Dp (S)2 .
b
j=1 j

l=1

s
s
1 XX
sincb (wl , wj ) .
s2
j=1

(21)

(22)

We now give an explicit formula for the case that p(¬∑) is the
density function of the multivariate Gaussian distribution
with zero mean and independent components. This is an
important special case since this is the density function that
is relevant for the Gaussian kernel.
Corollary 10 (Discrepancy for Gaussian Distribution).
Let p be the d-dimensional multivariate Gaussian density
function with zero mean and covariance matrix equal to
diag(œÉ1‚àí2 , . . . , œÉd‚àí2 ). We have,
s
s
1 XX
sincb (wl , wj ) + C ‚àí
s2
j=1

Dp (S)2 =

l=1
s

d

2 XY
clj Re erf
s
j=1
l=1

‚àíbj

s
d Z
2(2œÄ)‚àíd X Y bj
œïj (Œ≤)eiwlj Œ≤ dŒ≤ +
s
‚àíb
j
j=1

l=1

Definition 7 (Box Discrepancy). The box discrepancy of a
sequence S with respect to p is defined as,

where
Qd

clj

œÉj
‚àö
j=1 2 œÄ

erf



=


bj
œÉj



œÉ
‚àöj
2œÄ



e‚àí

bj
œÉj wlj
‚àö ‚àíi ‚àö
œÉj 2
2
2 w2
œÉj
lj
2

and

C

!!
,

=

.

In the above erf is the complex error function; see Weideman (1994) and Mori (1983) for more details.

QMC Feature Maps for Shift-Invariant Kernels

5. Learning Adaptive QMC Sequences

6. Experiments

For simplicity in this section we assume that p is the density function of Gaussian distribution with zero mean. We
also omit the subscript p from Dp . Similar analysis can be
derived for other density functions.

In this section we report experiments with both classical
QMC sequences and adaptive sequences learnt from box
discrepancy minimization.

Error characterization via discrepancy measures is typically used in the QMC literature to prescribe optimal sequences. Unlike the star discrepancy (12), the box discrepancy is a smooth function of the sequence with a closedform formula. This allows us to both evaluate various candidate sequences, and select the one with the lowest discrepancy, as well as to adaptively learn a QMC sequence
that is specialized for our problem setting via numerical optimization. This task is posed in terms minimization of the
box discrepancy function (23) over the space of sequences
of s vectors in Rd :
S ‚àó = arg minS=(w1 ...ws )‚ààRds D (S) .

(23)

The gradient of D (S) is given by the following proposition.
Proposition 11 (Gradient of Box Discrepancy). Define the
following scalar functions and variables,
b
cos(z) sin(z)
‚àí
, sinc0b (z) = sinc0 (bz) ;
2
z
z
œÄ


œÉj
‚àö
cj =
, j = 1, . . . , d ;
2œÄ
#!
"
œÉ2
œÉj x
bj
‚àí 2j x2
‚àö ‚àíi‚àö
gj (x) = cj e
;
Re erf
œÉj 2
2
r
b2
‚àí j2
2
2œÉ
0
2
gj (x) = ‚àíœÉj xgj (x) +
cj œÉj e j sin(bj x) .
œÄ

sinc0 (z) =

by,
Then, the elements of the gradient vector of D are given
Ô£´
Ô£∂
Y
2 0
‚àÇD
= ‚àí gj (wlj ) Ô£≠
gq (wlq )Ô£∏ +
‚àÇwlj
s
q6=j
Ô£´
Ô£∂
s
Y
2 XÔ£≠
bj sinc0bj (wlj , wmj )
sincbq (wlq , wmq )Ô£∏ . (24)
s2 m=1
m6=l

q6=j

The gradient can be plugged into any first order numerical solver for non-convex optimization. We use non-linear
conjugate gradient in Section 6.2.
The above learning mechanism can be extended in various
directions. For example, QMC sequences for n-point rankone Lattice Rules are integral fractions of a lattice defined
by a single generating vector v. This generating vector may
be learnt via local minimization of the box discrepancy.

6.1. Experiments With Classical QMC Sequences
We examine the behavior of classical low-discrepancy sequences when compared to random Fourier features (i.e.,
MC). We consider four sequences: Halton, Sobol‚Äô, Lattice
Rules, and Digital Nets. For Halton and Sobol‚Äô, we use the
implementation available in MATLAB1 . For Lattice Rules
and Digital Nets, we use publicly available implementations2 . For the low-discrepancy sequence, we use scrambling and shifting techniques recommended in the QMC literature (see Dick et al. (2013) for details). For Sobol‚Äô, Lattice Rules and Digital Nets, scrambling introduces randomization and hence variance. For Halton sequence, scrambling is deterministic, and there is no variance. The generation of these sequences is extremely fast, and quite negligible when compared to the time for any reasonable downstream use. Therefore, we do not report running times as
these are essentially the same across methods.
Quality of Kernel Approximation In our setting, the
most natural and fundamental metric for comparison is
the quality of approximation of the Gram matrix. We examine how close KÃÉ (defined by KÃÉij = kÃÉ(xi , xj ) where
kÃÉ(¬∑, ¬∑) = hŒ®ÃÇS (¬∑), Œ®ÃÇS (¬∑)i is the kernel approximation) is
to the Gram matrix K of the exact kernel. In all comparisons, we work with a Gaussian kernel with bandwidth œÉ
set by using cross-validation in favor of the Monte Carlo
approach.
We examine four datasets: cpu (6500 examples, 21 dimensions), census (a subset chosen randomly with 5,000
examples, 119 dimensions), USPST (1,506 examples, 250
dimensions after PCA) and mnist (a subset chosen randomly with 5,000 examples, 250 dimensions after PCA).
The reason we do subsampling on large datasets is to be
able to compute the full exact Gram matrix for comparison purposes. The reason we do dimensionality reduction
is that the maximum dimension supported by the Lattice
Rules implementation we use is 250. To measure the quality of approximation we use kK ‚àí KÃÉk2 /kKk2 . The plots
are shown in Figure 2.
We can clearly see that classical low-discrepancy sequences consistently produce better approximations to the
Gram matrix. Among the four classical QMC sequences,
the Digital Net, Lattice and Halton sequences yield much
lower error. Similar results were observed for other
1

http://www.mathworks.com/help/stats/quasi-randomnumbers.html
2
http://people.cs.kuleuven.be/ dirk.nuyens/qmc-generators/

QMC Feature Maps for Shift-Invariant Kernels

0.07
0.06
0.05
0.04
0.03

0.03

Digital net
MC
Halton
Sobol‚Äô
Lattice

0.025
0.02
0.015
0.01

MNIST, n=5000

CENSUS, n=5000
0.04

Digital net
MC
Halton
Sobol‚Äô
Lattice

0.035
0.03
0.025
0.02
0.015

Digital net
MC
Halton
Sobol‚Äô
Lattice

0.1

Relative error on ||K||2

Relative error on ||K||2

0.08

CPU, n=6554
0.035

Relative error on ||K||2

Digital net
MC
Halton
Sobol‚Äô
Lattice

Relative error on ||K||2

USPST, n=1506
0.09

0.08

0.06

0.04

0.01

0.02

0.005

0.02

0.005

0.01
200
400
200 400 600 800
Number of random features Number of random features

200 400 600 800
200 400 600 800
Number of random features Number of random features

Figure 2. Relative error on approximating the Gram matrix, i.e. kK ‚àí KÃÉk2 /kKk2 , for various s. For each kind of random feature and
s, 10 independent trials are executed, and the mean and standard deviation are plotted.

Does better Gram matrix approximation translate to
lower generalization errors? We consider two regression
datasets, cpu and census, and we use (approximate) kernel ridge regression to build a regression model. The ridge
parameter is set by the optimal values we obtain via crossvalidation on the MC sequence. Table 1 summarizes the
results.
s

CPU

100
500
1000
CENSUS

400
1200
1800

H ALTON
0.0367
(0)
0.0339
(0)
0.0334
(0)
0.0529
(0)
0.0553
(0)
0.0498
(0)

S OBOL‚Äô
0.0383
(0.0015)
0.0344
(0.0005)
0.0339
(0.0007)
0.0747
(0.0138)
0.0588
(0.0080)
0.0613
(0.0084)

L ATTICE
0.0374
(0.0010)
0.0348
(0.0007)
0.0337
(0.0004)
0.0801
(0.0206)
0.0694
(0.0188)
0.0608
(0.0129)

D IGIT
0.0376
(0.0010)
0.0343
(0.0005)
0.0335
(0.0003)
0.0755
(0.0080)
0.0587
(0.0067)
0.0583
(0.0100)

MC
0.0383
(0.0013)
0.0349
(0.0009)
0.0338
(0.0005)
0.0791
(0.0180)
0.0670
(0.0078)
0.0600
(0.0113)

Table 1. Regression error, i.e. kyÃÇ ‚àí yk2 /kyk2 where yÃÇ is the
predicted value and y is the ground truth. For each kind of random
feature and s, 10 independent trials are executed, and the mean
and standard deviation are listed.

As we see, for cpu, all the sequences behave similarly,
with the Halton sequence yielding the lowest test error.
For census, the advantage of using Halton sequence is
significant (almost 20% reduction in generalization error)
followed by Digital Nets and Sobol‚Äô. In addition, MC sequence tends to generate higher variance across all the sampling size. Overall, QMC sequences, especially Halton,
outperform MC sequences on these datasets.
Behavior of Box Discrepancy Next, we examine if D
is predictive of the quality of approximation. We compute
the discrepancy values for the different sequences with dif-

CPU, d=21

‚àí2

‚àí2

10

Normalized D ‚ú∑ (S)2

‚àí3

‚àí4

10

‚àí5

10

0

CENSUS, d=119, Central Part

10

10
D ‚ú∑ (S)2

datasets (not reported here). Although using randomized
variants of QMC sequences may incur some variance, the
variance is quite small compared to that of the MC random features. We have observed that randomized QMC
sequences almost uniformly yield higher accuracies than
non-randomized QMC sequences (results not reported).

Digital Net
MC (expected)
Halton
Sobol‚Äô
Lattice

500

‚àí3

10

‚àí4

1000
Samples

1500

10

Digital Net
MC (expected)
Halton
Sobol‚Äô
Lattice

0

500

1000
Samples

1500

Figure 3. Discrepancy values (D ) for the different sequences on
cpu and census. For census we measure the discrepancy on
the central part of the bounding box (we use b/2 in the optimization instead of b).

ferent sample sizes s. Note that while the bounding box
b is set based on observed ranges of feature values in the
dataset, the actual distribution of points XÃÑ encountered inside that box might be far from uniform.
In Figure 3, for cpu we see a strong correlation between
the quality of approximation and the discrepancy values.
Interestingly, Lattice Rules sequences start with low discrepancy, which does not decrease with increasing s. For
census, using the original bounding box yielded very little difference between sequences (graph not shown). Instead, we plot the discrepancy when measured on the central part of the bounding box (i.e., b/2), which is equal to
the integration error averages over that part of the bounding
box. Presumably, points from XÃÑ concentrate in that region,
and they may be more relevant for downstream predictive
task. Again, we see strong correlation between approximation quality and the discrepancy value.
6.2. Experiments With Adaptive QMC
In this subsection we provide a proof of concept for learning adaptive QMC sequences as described in Section 5.
Sequences were optimized by applying non-linear Conjugate Gradient to optimize the normalized box discrepancy
Qd
(i.e., (2œÄ)d /( j=1 bj )Dp (S)2 ). The Halton sequence is
used as the initial setting of the optimization variables S.

QMC Feature Maps for Shift-Invariant Kernels
CPU dataset, s=100

0

10

HOUSING dataset, s=100

0

Normalized D‚ú∑ (S)2
Maximum Squared Error
Mean Squared Error
kKÃÉ ‚àíKk2 /kKk2

‚àí2

10

‚àí1

10

HOUSING dataset, s=100, optimizing D‚ú∑b/2(S)2

0

10

Normalized D‚ú∑ (S)2
Maximum Squared Error
Mean Squared Error
kKÃÉ ‚àíKk2 /kKk2

Normalized D‚ú∑ (S)2
Maximum Squared Error
Mean Squared Error
kKÃÉ ‚àíKk2 /kKk2

‚àí1

10

10

‚àí2

‚àí2

10

‚àí3

10

10
‚àí4

10

‚àí3

10
‚àí6

10

0

‚àí4

20

40
60
Iteration

80

10

0

‚àí4

20

(a)

40
60
Iteration

10

80

0

(b)

20

40
60
Iteration

80

(c)

In Figure 4 we examine how various metrics (discrepancy,
maximum squared error, mean squared error, norm of the
error) on the Gram matrix approximation evolve during the
optimization. In Figure 4 (a) we examine the behavior on
cpu. We see that all metrics go down as the iteration progresses. This supports our hypothesis that by optimizing
the box discrepancy we can improve the approximation of
the Gram matrix. We also see interesting behavior in Figure 4 (b), which examines the metrics on the scaled version
of the housing dataset. Initially all metrics go down,
but eventually mean error and the norm error start to go
up (the maximum error continues to go down). One plausible explanation is that the integrands are not uniformly
distributed in the bounding box, and that by optimizing the
expectation over the entire box we start to overfit it, thereby
increasing the error in those regions of the box where integrands actually concentrate. One possible way to handle
this is to optimize closer to the center of the box (e.g., on
b/2) under the assumption that integrands concentrate
there. In Figure 4 (c) we try this on housing and see
that now the mean error and the norm error are much improved, which supports the interpretation above. But the
maximum error eventually goes up. This is quite reasonable as the outer parts of the bounding box are harder to
approximate, so the maximum error is likely to originate
from there. Subsequently, we stop the adaptive learning of
the QMC sequences early, to avoid the actual error from
going up due to averaging.
Next, we investigate the generalization error. We use the
same learning algorithm as the previous subsection. The
ridge parameter is set by the value which is near-optimal
for both sequences in cross-validation. Table 2 summarizes the results. For cpu, the adaptive sequences can yield
lower test error when the sampling size is small. When
s = 500 or even larger (not reported here), the performance
of the sequences are very close. For census, the adaptive

CENSUS

It should be noted that adaptive QMC estimation is dataindependent and as such a one-time expense given s, d, b
and œÉ, with applicability to a variety of downstream applications of kernel methods.

CPU

Figure 4. Examining the behavior of learning adaptive QMC sequences. Various metrics on the Gram matrix approximation are plotted.
s
100
300
500
400
800
1200
1800
2200

H ALTON
0.0304
0.0303
0.0348
0.0529
0.0545
0.0553
0.0498
0.0519

A DAPTIVEb
0.0315
0.0278
0.0347
0.1034
0.0702
0.0639
0.0568
0.0487

A DAPTIVEb/4
0.0296
0.0293
0.0348
0.0997
0.0581
0.0481
0.0476
0.0515

Table 2. Regression error, i.e. kyÃÇ ‚àí yk2 /kyk2 where yÃÇ is the
predicted value and y is the ground truth.

sequences do not show any benefit until s is 1200. Afterwards we can see at least one of the two adaptive sequences
can yield much lower error than Halton sequence for each
sampling size. However, in some cases, adaptive sequences
sometimes produce errors that are bigger than the unoptimized sequences. In most cases, the adaptive sequence on
the central part of the bounding box outperforms the adaptive sequence on the entire box.

7. Conclusion and Future Work
This paper is the first to exploit high-dimensional approximate integration techniques from the QMC literature in large-scale kernel methods, with promising empirical results backed by rigorous theoretical analyses. Avenues for future work include incorporating stronger datadependence in the estimation of adaptive sequences and analyzing how resulting Gram matrix approximations translate into downstream performance improvements for a variety of tasks.

Acknowledgements
The authors would like to thank Josef Dick for useful pointers to literature about improvement of the QMC sequences;
Ha Quang Minh for several discussions on Paley-Wiener
spaces and RKHS theory. This research was supported
by the XDATA program of the Defense Advanced Research Projects Agency (DARPA), administered through
Air Force Research Laboratory contract FA8750-12-C0323. This work was done while J. Yang was a summer
intern at IBM Research.

QMC Feature Maps for Shift-Invariant Kernels

References
Berlinet, A. and Thomas-Agnan, C. Reproducing Kernel
Hilbert Spaces in Probability and Statistics. Kluwer
Academic Publishers, 2004.
Bochner, S. Monotone funktionen, Stieltjes integrale und
harmonische analyse. Math. Ann., 108, 1933.
Caflisch, R. E. Monte Carlo and Quasi-Monte Carlo methods. Acta Numerica, 7:1‚Äì49, 1 1998. ISSN 1474-0508.
Cucker, F. and Smale, S. On the mathematical foundations
of learning. Bull. Amer. Math. Soc., 39:1‚Äì49, 2001.
Dick, J., Kuo, F. Y., and Sloan, I. H. High-dimensional integration: The Quasi-Monte Carlo way. Acta Numerica,
22:133‚Äì288, 5 2013. ISSN 1474-0508.
Mori, M. A method for evaluation of the error function
of real and complex variable with high relative accuracy.
Publ. RIMS, Kyoto Univ., 19:1081‚Äì1094, 1983.
Niederreiter, H. Random number generation and QuasiMonte Carlo methods. Society for Industrial and Applied Mathematics, Philadelphia, PA, USA, 1992. ISBN
0-89871-295-5.
Peloso, M. M. Classical spaces of holomorphic functions.
Technical report, Universit‚Äò di Milano, 2011.
Rahimi, A. and Recht, B. Random features for large-scale
kernel machines. In Neural Information Processing Systems (NIPS), 2007.
SchoÃàlkopf, B. and Smola, A. (eds.). Learning with Kernels:
Support Vector Machines, Regularization, Optimization
and Beyond. MIT Press, 2002.
Sloan, I. H. and Wozniakowski, H. When are Quasi-Monte
Carlo algorithms efficient for high dimensional integrals.
Journal of Complexity, 14(1):1‚Äì33, 1998.
Traub, J. F. and Wozniakowski, H. Breaking intractability.
Scientific American, pp. 102‚Äì107, 1994.
Wahba, G. (ed.).
Spline Models for Observational
Data. Society for Industrial and Applied Mathematics,
Philadelphia, PA, USA, 1990.
Weideman, J. A. C. Computation of the complex error
function. SIAM Journal of Numerical Analysis, 31(5):
1497‚Äì1518, 10 1994.
Wozniakowski, H. Average case complexity of multivariate
integration. Bull. Amer. Math. Soc., 24:185‚Äì194, 1991.
Yao, K. Applications of Reproducing Kernel Hilbert
Spaces - bandlimited signal models. Inform. Control,
11:429‚Äì444, 1967.

